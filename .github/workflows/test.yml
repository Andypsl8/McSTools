name: Release

on:
  push:
    tags:
      - "v*"
  workflow_dispatch:

jobs:
  release:
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        platform: ['windows-latest', 'macos-latest']
        include:
          - platform: macos-latest
            target: aarch64-apple-darwin
            rust: stable
          - platform: windows-latest
            target: x86_64-pc-windows-msvc
            rust: stable

    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v4

      - name: Validate Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20
          cache: 'pnpm'

      - name: Install Rust Toolchain
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ matrix.rust }}
          targets: ${{ matrix.target }}

      - name: Validate Key Configuration
        run: |
          # 验证私钥环境变量是否存在
          if [ -z "$TAURI_SIGNING_PRIVATE_KEY" ]; then
            echo "::error::TAURI_SIGNING_PRIVATE_KEY is not set"
            exit 1
          fi

          # 验证密钥头格式（不打印完整内容）
          if ! echo "$TAURI_SIGNING_PRIVATE_KEY" | head -n 1 | grep -q "BEGIN PRIVATE KEY"; then
            echo "::error::Private key header missing"
            exit 1
          fi

          # 验证注释头存在性
          if ! echo "$TAURI_SIGNING_PRIVATE_KEY" | grep -q "Tauri"; then
            echo "::error::Missing Tauri comment in key"
            exit 1
          fi

          echo "✅ Key format validation passed"

      - name: Build Tauri (Cross-Platform)
        uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TAURI_SIGNING_PRIVATE_KEY: ${{ secrets.TAURI_PRIVATE_KEY }}
          TAURI_SIGNING_PRIVATE_KEY_PASSWORD: ${{ secrets.TAURI_PRIVATE_KEY_PASSWORD }}
        with:
          args: --target ${{ matrix.target }}
          tagName: ${{ github.ref_name }}
          releaseName: "ComfyUI Startup v${GITHUB_REF_NAME#v}"
          publish: release

      - name: Security Audit
        if: matrix.platform == 'macos-latest'
        uses: actions/audit-check@v2
        with:
          warn-only: true