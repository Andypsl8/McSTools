name: Release
# 触发方式
on:
  push:
    tags:
      - "v*"
  workflow_dispatch:

jobs:
  release:
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        platform: ['windows-latest', 'macos-latest']

    runs-on: ${{ matrix.platform }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Rust setup
        uses: dtolnay/rust-toolchain@stable
      
      - name: Install pnpm
        run: npm install -g pnpm
      - name: Sync node version and setup cache
        uses: actions/setup-node@v3
        with:
          node-version: "lts/*"
          cache: "pnpm"
      - name: Validate Key Configuration
        run: |
          # 验证 Secret 是否存在且非空
          if [ -z "${{ secrets.TAURI_PRIVATE_KEY }}" ]; then
          echo "::error::TAURI_PRIVATE_KEY secret is not set"
          exit 1
          fi
          # 验证私钥环境变量是否存在
          if [ -z "$TAURI_SIGNING_PRIVATE_KEY" ]; then
            echo "::error::TAURI_SIGNING_PRIVATE_KEY is not set"
            exit 1
          fi

          # 验证密钥头格式（不打印完整内容）
          if ! echo "$TAURI_SIGNING_PRIVATE_KEY" | head -n 1 | grep -q "BEGIN PRIVATE KEY"; then
            echo "::error::Private key header missing"
            exit 1
          fi

          # 验证注释头存在性
          if ! echo "$TAURI_SIGNING_PRIVATE_KEY" | grep -q "Tauri"; then
            echo "::error::Missing Tauri comment in key"
            exit 1
          fi

          echo "✅ Key format validation passed"

      - name: Install frontend dependencies
        run: pnpm install --no-frozen-lockfile
      - name: Build the app
        id: build
        uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TAURI_SIGNING_PRIVATE_KEY: ${{ secrets.TAURI_PRIVATE_KEY }}
          TAURI_SIGNING_PRIVATE_KEY_PASSWORD: ${{ secrets.TAURI_PRIVATE_KEY_PASSWORD }}
        with:
          tagName: ${{ github.ref_name }}
          releaseName: "ComfyUI Startup v__VERSION__"
          releaseBody: "See the assets to download and install this version."
          releaseDraft: true
          prerelease: false

      - name: Upload assets
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        # 运行自己的脚本
        run: node scripts/updater.mjs
        
