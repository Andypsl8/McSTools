<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="982" onload="init(evt)" viewBox="0 0 1200 982" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="982" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="965.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="965.00"> </text><svg id="frames" x="10" width="1180" total_samples="24441"><g><title>`0x7FF96D6D1950 (3 samples, 0.01%)</title><rect x="0.0000%" y="917" width="0.0123%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="3"/><text x="0.2500%" y="927.50"></text></g><g><title>`0x7FF96D66BEC1 (3 samples, 0.01%)</title><rect x="0.0123%" y="837" width="0.0123%" height="15" fill="rgb(217,0,24)" fg:x="3" fg:w="3"/><text x="0.2623%" y="847.50"></text></g><g><title>`0x7FF96D66D2D7 (3 samples, 0.01%)</title><rect x="0.0245%" y="821" width="0.0123%" height="15" fill="rgb(221,193,54)" fg:x="6" fg:w="3"/><text x="0.2745%" y="831.50"></text></g><g><title>`0x7FF96D77C614 (3 samples, 0.01%)</title><rect x="0.0245%" y="805" width="0.0123%" height="15" fill="rgb(248,212,6)" fg:x="6" fg:w="3"/><text x="0.2745%" y="815.50"></text></g><g><title>`0x7FF96D66BC1A (9 samples, 0.04%)</title><rect x="0.0123%" y="853" width="0.0368%" height="15" fill="rgb(208,68,35)" fg:x="3" fg:w="9"/><text x="0.2623%" y="863.50"></text></g><g><title>`0x7FF96D66BFEC (6 samples, 0.02%)</title><rect x="0.0245%" y="837" width="0.0245%" height="15" fill="rgb(232,128,0)" fg:x="6" fg:w="6"/><text x="0.2745%" y="847.50"></text></g><g><title>`0x7FF96D635CB1 (12 samples, 0.05%)</title><rect x="0.0123%" y="885" width="0.0491%" height="15" fill="rgb(207,160,47)" fg:x="3" fg:w="12"/><text x="0.2623%" y="895.50"></text></g><g><title>`0x7FF96D634257 (12 samples, 0.05%)</title><rect x="0.0123%" y="869" width="0.0491%" height="15" fill="rgb(228,23,34)" fg:x="3" fg:w="12"/><text x="0.2623%" y="879.50"></text></g><g><title>`0x7FF96D66BCE1 (3 samples, 0.01%)</title><rect x="0.0491%" y="853" width="0.0123%" height="15" fill="rgb(218,30,26)" fg:x="12" fg:w="3"/><text x="0.2991%" y="863.50"></text></g><g><title>`0x7FF96D66D42C (3 samples, 0.01%)</title><rect x="0.0736%" y="709" width="0.0123%" height="15" fill="rgb(220,122,19)" fg:x="18" fg:w="3"/><text x="0.3236%" y="719.50"></text></g><g><title>`0x7FF96ADE00F6 (7 samples, 0.03%)</title><rect x="0.0614%" y="869" width="0.0286%" height="15" fill="rgb(250,228,42)" fg:x="15" fg:w="7"/><text x="0.3114%" y="879.50"></text></g><g><title>`0x7FF96ADC55ED (7 samples, 0.03%)</title><rect x="0.0614%" y="853" width="0.0286%" height="15" fill="rgb(240,193,28)" fg:x="15" fg:w="7"/><text x="0.3114%" y="863.50"></text></g><g><title>`0x7FF96AD5423B (7 samples, 0.03%)</title><rect x="0.0614%" y="837" width="0.0286%" height="15" fill="rgb(216,20,37)" fg:x="15" fg:w="7"/><text x="0.3114%" y="847.50"></text></g><g><title>`0x7FF96ADB63F5 (7 samples, 0.03%)</title><rect x="0.0614%" y="821" width="0.0286%" height="15" fill="rgb(206,188,39)" fg:x="15" fg:w="7"/><text x="0.3114%" y="831.50"></text></g><g><title>`0x7FF96A812446 (7 samples, 0.03%)</title><rect x="0.0614%" y="805" width="0.0286%" height="15" fill="rgb(217,207,13)" fg:x="15" fg:w="7"/><text x="0.3114%" y="815.50"></text></g><g><title>`0x7FF96D639B30 (7 samples, 0.03%)</title><rect x="0.0614%" y="789" width="0.0286%" height="15" fill="rgb(231,73,38)" fg:x="15" fg:w="7"/><text x="0.3114%" y="799.50"></text></g><g><title>`0x7FF96D675CA0 (7 samples, 0.03%)</title><rect x="0.0614%" y="773" width="0.0286%" height="15" fill="rgb(225,20,46)" fg:x="15" fg:w="7"/><text x="0.3114%" y="783.50"></text></g><g><title>`0x7FF96D676020 (7 samples, 0.03%)</title><rect x="0.0614%" y="757" width="0.0286%" height="15" fill="rgb(210,31,41)" fg:x="15" fg:w="7"/><text x="0.3114%" y="767.50"></text></g><g><title>`0x7FF96D66BCF4 (7 samples, 0.03%)</title><rect x="0.0614%" y="741" width="0.0286%" height="15" fill="rgb(221,200,47)" fg:x="15" fg:w="7"/><text x="0.3114%" y="751.50"></text></g><g><title>`0x7FF96D66C2DD (5 samples, 0.02%)</title><rect x="0.0696%" y="725" width="0.0205%" height="15" fill="rgb(226,26,5)" fg:x="17" fg:w="5"/><text x="0.3196%" y="735.50"></text></g><g><title>`0x7FF96ADE0143 (7 samples, 0.03%)</title><rect x="0.0900%" y="869" width="0.0286%" height="15" fill="rgb(249,33,26)" fg:x="22" fg:w="7"/><text x="0.3400%" y="879.50"></text></g><g><title>`0x7FF96B4C18AB (7 samples, 0.03%)</title><rect x="0.0900%" y="853" width="0.0286%" height="15" fill="rgb(235,183,28)" fg:x="22" fg:w="7"/><text x="0.3400%" y="863.50"></text></g><g><title>`0x7FF96D6D1B34 (7 samples, 0.03%)</title><rect x="0.0900%" y="837" width="0.0286%" height="15" fill="rgb(221,5,38)" fg:x="22" fg:w="7"/><text x="0.3400%" y="847.50"></text></g><g><title>`0x7FF96D6D2970 (6 samples, 0.02%)</title><rect x="0.0941%" y="821" width="0.0245%" height="15" fill="rgb(247,18,42)" fg:x="23" fg:w="6"/><text x="0.3441%" y="831.50"></text></g><g><title>`0x7FF96D658830 (6 samples, 0.02%)</title><rect x="0.0941%" y="805" width="0.0245%" height="15" fill="rgb(241,131,45)" fg:x="23" fg:w="6"/><text x="0.3441%" y="815.50"></text></g><g><title>rust.exe`core::ptr::non_null::NonNull&lt;alloc::sync::ArcInner&lt;rust::utils::block_state_pos_list::BlockData&gt; &gt;::as_ref (7 samples, 0.03%)</title><rect x="8.2443%" y="549" width="0.0286%" height="15" fill="rgb(249,31,29)" fg:x="2015" fg:w="7"/><text x="8.4943%" y="559.50"></text></g><g><title>rust.exe`core::ptr::drop_in_place (2,163 samples, 8.85%)</title><rect x="0.1227%" y="693" width="8.8499%" height="15" fill="rgb(225,111,53)" fg:x="30" fg:w="2163"/><text x="0.3727%" y="703.50">rust.exe`cor..</text></g><g><title>rust.exe`core::ptr::drop_in_place (2,163 samples, 8.85%)</title><rect x="0.1227%" y="677" width="8.8499%" height="15" fill="rgb(238,160,17)" fg:x="30" fg:w="2163"/><text x="0.3727%" y="687.50">rust.exe`cor..</text></g><g><title>rust.exe`core::ptr::drop_in_place(alloc::vec::Vec (2,163 samples, 8.85%)</title><rect x="0.1227%" y="661" width="8.8499%" height="15" fill="rgb(214,148,48)" fg:x="30" fg:w="2163"/><text x="0.3727%" y="671.50">rust.exe`cor..</text></g><g><title>rust.exe`alloc::vec::impl$25::drop(alloc::vec::Vec (2,163 samples, 8.85%)</title><rect x="0.1227%" y="645" width="8.8499%" height="15" fill="rgb(232,36,49)" fg:x="30" fg:w="2163"/><text x="0.3727%" y="655.50">rust.exe`all..</text></g><g><title>rust.exe`core::ptr::drop_in_place(ptr_mut$&lt;slice2$ (2,162 samples, 8.85%)</title><rect x="0.1268%" y="629" width="8.8458%" height="15" fill="rgb(209,103,24)" fg:x="31" fg:w="2162"/><text x="0.3768%" y="639.50">rust.exe`cor..</text></g><g><title>rust.exe`core::ptr::drop_in_place (2,127 samples, 8.70%)</title><rect x="0.2700%" y="613" width="8.7026%" height="15" fill="rgb(229,88,8)" fg:x="66" fg:w="2127"/><text x="0.5200%" y="623.50">rust.exe`cor..</text></g><g><title>rust.exe`core::ptr::drop_in_place(alloc::sync::Arc (2,127 samples, 8.70%)</title><rect x="0.2700%" y="597" width="8.7026%" height="15" fill="rgb(213,181,19)" fg:x="66" fg:w="2127"/><text x="0.5200%" y="607.50">rust.exe`cor..</text></g><g><title>rust.exe`alloc::sync::impl$37::drop(alloc::sync::Arc (2,127 samples, 8.70%)</title><rect x="0.2700%" y="581" width="8.7026%" height="15" fill="rgb(254,191,54)" fg:x="66" fg:w="2127"/><text x="0.5200%" y="591.50">rust.exe`all..</text></g><g><title>rust.exe`alloc::sync::Arc&lt;rust::utils::block_state_pos_list::BlockData,alloc::alloc::Global&gt;::inner (178 samples, 0.73%)</title><rect x="8.2443%" y="565" width="0.7283%" height="15" fill="rgb(241,83,37)" fg:x="2015" fg:w="178"/><text x="8.4943%" y="575.50"></text></g><g><title>rust.exe`core::sync::atomic::atomic_sub (171 samples, 0.70%)</title><rect x="8.2730%" y="549" width="0.6996%" height="15" fill="rgb(233,36,39)" fg:x="2022" fg:w="171"/><text x="8.5230%" y="559.50"></text></g><g><title>`0x7FF96D64FB77 (3 samples, 0.01%)</title><rect x="8.9931%" y="293" width="0.0123%" height="15" fill="rgb(226,3,54)" fg:x="2198" fg:w="3"/><text x="9.2431%" y="303.50"></text></g><g><title>`0x7FF96D64D474 (3 samples, 0.01%)</title><rect x="8.9931%" y="277" width="0.0123%" height="15" fill="rgb(245,192,40)" fg:x="2198" fg:w="3"/><text x="9.2431%" y="287.50"></text></g><g><title>`0x7FF96D64FA02 (3 samples, 0.01%)</title><rect x="8.9931%" y="261" width="0.0123%" height="15" fill="rgb(238,167,29)" fg:x="2198" fg:w="3"/><text x="9.2431%" y="271.50"></text></g><g><title>rust.exe`core::ptr::drop_in_place(alloc::vec::Vec (8 samples, 0.03%)</title><rect x="8.9767%" y="485" width="0.0327%" height="15" fill="rgb(232,182,51)" fg:x="2194" fg:w="8"/><text x="9.2267%" y="495.50"></text></g><g><title>rust.exe`alloc::vec::impl$25::drop(alloc::vec::Vec (8 samples, 0.03%)</title><rect x="8.9767%" y="469" width="0.0327%" height="15" fill="rgb(231,60,39)" fg:x="2194" fg:w="8"/><text x="9.2267%" y="479.50"></text></g><g><title>rust.exe`core::ptr::drop_in_place(ptr_mut$&lt;slice2$ (8 samples, 0.03%)</title><rect x="8.9767%" y="453" width="0.0327%" height="15" fill="rgb(208,69,12)" fg:x="2194" fg:w="8"/><text x="9.2267%" y="463.50"></text></g><g><title>rust.exe`core::ptr::drop_in_place (8 samples, 0.03%)</title><rect x="8.9767%" y="437" width="0.0327%" height="15" fill="rgb(235,93,37)" fg:x="2194" fg:w="8"/><text x="9.2267%" y="447.50"></text></g><g><title>rust.exe`core::ptr::drop_in_place (8 samples, 0.03%)</title><rect x="8.9767%" y="421" width="0.0327%" height="15" fill="rgb(213,116,39)" fg:x="2194" fg:w="8"/><text x="9.2267%" y="431.50"></text></g><g><title>rust.exe`core::ptr::drop_in_place (8 samples, 0.03%)</title><rect x="8.9767%" y="405" width="0.0327%" height="15" fill="rgb(222,207,29)" fg:x="2194" fg:w="8"/><text x="9.2267%" y="415.50"></text></g><g><title>rust.exe`core::ptr::drop_in_place(alloc::vec::Vec (8 samples, 0.03%)</title><rect x="8.9767%" y="389" width="0.0327%" height="15" fill="rgb(206,96,30)" fg:x="2194" fg:w="8"/><text x="9.2267%" y="399.50"></text></g><g><title>rust.exe`core::ptr::drop_in_place(alloc::raw_vec::RawVec (8 samples, 0.03%)</title><rect x="8.9767%" y="373" width="0.0327%" height="15" fill="rgb(218,138,4)" fg:x="2194" fg:w="8"/><text x="9.2267%" y="383.50"></text></g><g><title>rust.exe`alloc::raw_vec::impl$4::drop(alloc::raw_vec::RawVec (8 samples, 0.03%)</title><rect x="8.9767%" y="357" width="0.0327%" height="15" fill="rgb(250,191,14)" fg:x="2194" fg:w="8"/><text x="9.2267%" y="367.50"></text></g><g><title>rust.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::deallocate (8 samples, 0.03%)</title><rect x="8.9767%" y="341" width="0.0327%" height="15" fill="rgb(239,60,40)" fg:x="2194" fg:w="8"/><text x="9.2267%" y="351.50"></text></g><g><title>rust.exe`alloc::alloc::impl$1::deallocate(alloc::alloc::Global*, core::ptr::non_null::NonNull (8 samples, 0.03%)</title><rect x="8.9767%" y="325" width="0.0327%" height="15" fill="rgb(206,27,48)" fg:x="2194" fg:w="8"/><text x="9.2267%" y="335.50"></text></g><g><title>rust.exe`alloc::alloc::dealloc (8 samples, 0.03%)</title><rect x="8.9767%" y="309" width="0.0327%" height="15" fill="rgb(225,35,8)" fg:x="2194" fg:w="8"/><text x="9.2267%" y="319.50"></text></g><g><title>rust.exe`core::ptr::drop_in_place&lt;sysinfo::common::system::System&gt; (15 samples, 0.06%)</title><rect x="8.9726%" y="693" width="0.0614%" height="15" fill="rgb(250,213,24)" fg:x="2193" fg:w="15"/><text x="9.2226%" y="703.50"></text></g><g><title>rust.exe`core::ptr::drop_in_place (15 samples, 0.06%)</title><rect x="8.9726%" y="677" width="0.0614%" height="15" fill="rgb(247,123,22)" fg:x="2193" fg:w="15"/><text x="9.2226%" y="687.50"></text></g><g><title>rust.exe`core::ptr::drop_in_place (14 samples, 0.06%)</title><rect x="8.9767%" y="661" width="0.0573%" height="15" fill="rgb(231,138,38)" fg:x="2194" fg:w="14"/><text x="9.2267%" y="671.50"></text></g><g><title>rust.exe`core::ptr::drop_in_place (14 samples, 0.06%)</title><rect x="8.9767%" y="645" width="0.0573%" height="15" fill="rgb(231,145,46)" fg:x="2194" fg:w="14"/><text x="9.2267%" y="655.50"></text></g><g><title>rust.exe`core::ptr::drop_in_place(enum2$&lt;core::option::Option (14 samples, 0.06%)</title><rect x="8.9767%" y="629" width="0.0573%" height="15" fill="rgb(251,118,11)" fg:x="2194" fg:w="14"/><text x="9.2267%" y="639.50"></text></g><g><title>rust.exe`hashbrown::raw::impl$18::drop&lt;tuple$&lt;sysinfo::common::system::Pid,sysinfo::common::system::Process&gt;,alloc::alloc::Global&gt;(hashbrown::raw::RawTable&lt;tuple$ (14 samples, 0.06%)</title><rect x="8.9767%" y="613" width="0.0573%" height="15" fill="rgb(217,147,25)" fg:x="2194" fg:w="14"/><text x="9.2267%" y="623.50"></text></g><g><title>rust.exe`hashbrown::raw::RawTableInner::drop_inner_table (14 samples, 0.06%)</title><rect x="8.9767%" y="597" width="0.0573%" height="15" fill="rgb(247,81,37)" fg:x="2194" fg:w="14"/><text x="9.2267%" y="607.50"></text></g><g><title>rust.exe`hashbrown::raw::RawTableInner::drop_elements (14 samples, 0.06%)</title><rect x="8.9767%" y="581" width="0.0573%" height="15" fill="rgb(209,12,38)" fg:x="2194" fg:w="14"/><text x="9.2267%" y="591.50"></text></g><g><title>rust.exe`hashbrown::raw::Bucket&lt;tuple$&lt;sysinfo::common::system::Pid,sysinfo::common::system::Process&gt; &gt;::drop (14 samples, 0.06%)</title><rect x="8.9767%" y="565" width="0.0573%" height="15" fill="rgb(227,1,9)" fg:x="2194" fg:w="14"/><text x="9.2267%" y="575.50"></text></g><g><title>rust.exe`core::ptr::mut_ptr::impl$0::drop_in_place(tuple$ (14 samples, 0.06%)</title><rect x="8.9767%" y="549" width="0.0573%" height="15" fill="rgb(248,47,43)" fg:x="2194" fg:w="14"/><text x="9.2267%" y="559.50"></text></g><g><title>rust.exe`core::ptr::drop_in_place(tuple$ (14 samples, 0.06%)</title><rect x="8.9767%" y="533" width="0.0573%" height="15" fill="rgb(221,10,30)" fg:x="2194" fg:w="14"/><text x="9.2267%" y="543.50"></text></g><g><title>rust.exe`core::ptr::drop_in_place (14 samples, 0.06%)</title><rect x="8.9767%" y="517" width="0.0573%" height="15" fill="rgb(210,229,1)" fg:x="2194" fg:w="14"/><text x="9.2267%" y="527.50"></text></g><g><title>rust.exe`core::ptr::drop_in_place (14 samples, 0.06%)</title><rect x="8.9767%" y="501" width="0.0573%" height="15" fill="rgb(222,148,37)" fg:x="2194" fg:w="14"/><text x="9.2267%" y="511.50"></text></g><g><title>rust.exe`core::ptr::drop_in_place(enum2$&lt;core::option::Option&lt;alloc::sync::Arc (5 samples, 0.02%)</title><rect x="9.0135%" y="485" width="0.0205%" height="15" fill="rgb(234,67,33)" fg:x="2203" fg:w="5"/><text x="9.2635%" y="495.50"></text></g><g><title>rust.exe`core::ptr::drop_in_place(alloc::sync::Arc (5 samples, 0.02%)</title><rect x="9.0135%" y="469" width="0.0205%" height="15" fill="rgb(247,98,35)" fg:x="2203" fg:w="5"/><text x="9.2635%" y="479.50"></text></g><g><title>rust.exe`alloc::sync::impl$37::drop(alloc::sync::Arc (5 samples, 0.02%)</title><rect x="9.0135%" y="453" width="0.0205%" height="15" fill="rgb(247,138,52)" fg:x="2203" fg:w="5"/><text x="9.2635%" y="463.50"></text></g><g><title>rust.exe`alloc::sync::Arc&lt;sysinfo::windows::utils::HandleWrapper,alloc::alloc::Global&gt;::drop_slow&lt;sysinfo::windows::utils::HandleWrapper,alloc::alloc::Global&gt; (5 samples, 0.02%)</title><rect x="9.0135%" y="437" width="0.0205%" height="15" fill="rgb(213,79,30)" fg:x="2203" fg:w="5"/><text x="9.2635%" y="447.50"></text></g><g><title>rust.exe`core::ptr::drop_in_place (5 samples, 0.02%)</title><rect x="9.0135%" y="421" width="0.0205%" height="15" fill="rgb(246,177,23)" fg:x="2203" fg:w="5"/><text x="9.2635%" y="431.50"></text></g><g><title>rust.exe`sysinfo::windows::utils::impl$2::drop (5 samples, 0.02%)</title><rect x="9.0135%" y="405" width="0.0205%" height="15" fill="rgb(230,62,27)" fg:x="2203" fg:w="5"/><text x="9.2635%" y="415.50"></text></g><g><title>rust.exe`windows::Win32::Foundation::CloseHandle (5 samples, 0.02%)</title><rect x="9.0135%" y="389" width="0.0205%" height="15" fill="rgb(216,154,8)" fg:x="2203" fg:w="5"/><text x="9.2635%" y="399.50"></text></g><g><title>rust.exe`windows::Win32::Foundation::BOOL::ok (5 samples, 0.02%)</title><rect x="9.0135%" y="373" width="0.0205%" height="15" fill="rgb(244,35,45)" fg:x="2203" fg:w="5"/><text x="9.2635%" y="383.50"></text></g><g><title>`0x7FF96A86D369 (5 samples, 0.02%)</title><rect x="9.0135%" y="357" width="0.0205%" height="15" fill="rgb(251,115,12)" fg:x="2203" fg:w="5"/><text x="9.2635%" y="367.50"></text></g><g><title>`0x7FF96D77C194 (5 samples, 0.02%)</title><rect x="9.0135%" y="341" width="0.0205%" height="15" fill="rgb(240,54,50)" fg:x="2203" fg:w="5"/><text x="9.2635%" y="351.50"></text></g><g><title>rust.exe`core::iter::adapters::impl$0::next(core::iter::adapters::GenericShunt&lt;core::iter::adapters::map::Map&lt;core::slice::iter::ChunksExact&lt;u8&gt;,fastnbt::arrays::impl$10::from_bytes::closure_env$0&gt;,enum2$&lt;core::result::Result&lt;enum2$ (8 samples, 0.03%)</title><rect x="9.2508%" y="309" width="0.0327%" height="15" fill="rgb(233,84,52)" fg:x="2261" fg:w="8"/><text x="9.5008%" y="319.50"></text></g><g><title>rust.exe`core::iter::traits::iterator::Iterator::try_for_each(core::iter::adapters::GenericShunt&lt;core::iter::adapters::map::Map&lt;core::slice::iter::ChunksExact&lt;u8&gt;,fastnbt::arrays::impl$10::from_bytes::closure_env$0&gt;,enum2$&lt;core::result::Result&lt;enum2$&lt;core::convert::Infallible&gt;,std::io::error::Error&gt; &gt; &gt;*, enum2$&lt;core::ops::control_flow::ControlFlow&lt;i64,tuple$&lt;&gt; &gt; &gt; (*) (8 samples, 0.03%)</title><rect x="9.2508%" y="293" width="0.0327%" height="15" fill="rgb(207,117,47)" fg:x="2261" fg:w="8"/><text x="9.5008%" y="303.50"></text></g><g><title>rust.exe`core::iter::adapters::impl$0::try_fold(core::iter::adapters::GenericShunt&lt;core::iter::adapters::map::Map&lt;core::slice::iter::ChunksExact&lt;u8&gt;,fastnbt::arrays::impl$10::from_bytes::closure_env$0&gt;,enum2$&lt;core::result::Result&lt;enum2$&lt;core::convert::Infallible&gt;,std::io::error::Error&gt; &gt; &gt;*, tuple$&lt;&gt;, core::iter::traits::iterator::Iterator::try_for_each::call::closure_env$0&lt;i64,enum2$&lt;core::ops::control_flow::ControlFlow&lt;i64,tuple$&lt;&gt; &gt; &gt;,enum2$&lt;core::ops::control_flow::ControlFlow&lt;i64,tuple$&lt;&gt; &gt; &gt; (*) (8 samples, 0.03%)</title><rect x="9.2508%" y="277" width="0.0327%" height="15" fill="rgb(249,43,39)" fg:x="2261" fg:w="8"/><text x="9.5008%" y="287.50"></text></g><g><title>rust.exe`byteorder::ByteOrder::read_i64(ref$&lt;slice2$ (24 samples, 0.10%)</title><rect x="9.5086%" y="229" width="0.0982%" height="15" fill="rgb(209,38,44)" fg:x="2324" fg:w="24"/><text x="9.7586%" y="239.50"></text></g><g><title>rust.exe`byteorder::impl$2::read_u64(ref$&lt;slice2$ (24 samples, 0.10%)</title><rect x="9.5086%" y="213" width="0.0982%" height="15" fill="rgb(236,212,23)" fg:x="2324" fg:w="24"/><text x="9.7586%" y="223.50"></text></g><g><title>rust.exe`core::num::impl$9::from_be_bytes (24 samples, 0.10%)</title><rect x="9.5086%" y="197" width="0.0982%" height="15" fill="rgb(242,79,21)" fg:x="2324" fg:w="24"/><text x="9.7586%" y="207.50"></text></g><g><title>rust.exe`core::num::impl$9::from_be (24 samples, 0.10%)</title><rect x="9.5086%" y="181" width="0.0982%" height="15" fill="rgb(211,96,35)" fg:x="2324" fg:w="24"/><text x="9.7586%" y="191.50"></text></g><g><title>rust.exe`core::num::impl$9::swap_bytes (24 samples, 0.10%)</title><rect x="9.5086%" y="165" width="0.0982%" height="15" fill="rgb(253,215,40)" fg:x="2324" fg:w="24"/><text x="9.7586%" y="175.50"></text></g><g><title>rust.exe`core::iter::adapters::map::map_try_fold::closure$0(core::iter::adapters::map::map_try_fold::closure_env$0&lt;ref$&lt;slice2$&lt;u8&gt; &gt;,enum2$&lt;core::result::Result&lt;i64,std::io::error::Error&gt; &gt;,tuple$&lt;&gt;,enum2$&lt;core::ops::control_flow::ControlFlow&lt;enum2$&lt;core::ops::control_flow::ControlFlow&lt;i64,tuple$&lt;&gt; &gt; &gt;,tuple$&lt;&gt; &gt; &gt;,fastnbt::arrays::impl$10::from_bytes::closure_env$0,core::iter::adapters::impl$0::try_fold::closure_env$0&lt;core::iter::adapters::map::Map&lt;core::slice::iter::ChunksExact&lt;u8&gt;,fastnbt::arrays::impl$10::from_bytes::closure_env$0&gt;,enum2$&lt;core::result::Result&lt;enum2$&lt;core::convert::Infallible&gt;,std::io::error::Error&gt; &gt;,tuple$&lt;&gt;,core::iter::traits::iterator::Iterator::try_for_each::call::closure_env$0&lt;i64,enum2$&lt;core::ops::control_flow::ControlFlow&lt;i64,tuple$&lt;&gt; &gt; &gt;,enum2$&lt;core::ops::control_flow::ControlFlow&lt;i64,tuple$&lt;&gt; &gt; &gt; (*)(i64)&gt;,enum2$&lt;core::ops::control_flow::ControlFlow&lt;i64,tuple$&lt;&gt; &gt; &gt; &gt; &gt;*, tuple$&lt;&gt;, ref$&lt;slice2$ (55 samples, 0.23%)</title><rect x="9.5086%" y="277" width="0.2250%" height="15" fill="rgb(211,81,21)" fg:x="2324" fg:w="55"/><text x="9.7586%" y="287.50"></text></g><g><title>rust.exe`fastnbt::arrays::impl$10::from_bytes::closure$0(fastnbt::arrays::impl$10::from_bytes::closure_env$0*, ref$&lt;slice2$ (55 samples, 0.23%)</title><rect x="9.5086%" y="261" width="0.2250%" height="15" fill="rgb(208,190,38)" fg:x="2324" fg:w="55"/><text x="9.7586%" y="271.50"></text></g><g><title>rust.exe`byteorder::io::ReadBytesExt::read_i64(ref$&lt;slice2$ (55 samples, 0.23%)</title><rect x="9.5086%" y="245" width="0.2250%" height="15" fill="rgb(235,213,38)" fg:x="2324" fg:w="55"/><text x="9.7586%" y="255.50"></text></g><g><title>rust.exe`std::io::impls::impl$8::read_exact(ref$&lt;slice2$&lt;u8&gt; &gt;*, ref_mut$&lt;slice2$ (31 samples, 0.13%)</title><rect x="9.6068%" y="229" width="0.1268%" height="15" fill="rgb(237,122,38)" fg:x="2348" fg:w="31"/><text x="9.8568%" y="239.50"></text></g><g><title>rust.exe`core::iter::adapters::map::impl$2::try_fold&lt;enum2$&lt;core::result::Result&lt;i64,std::io::error::Error&gt; &gt;,core::slice::iter::ChunksExact&lt;u8&gt;,fastnbt::arrays::impl$10::from_bytes::closure_env$0,tuple$&lt;&gt;,core::iter::adapters::impl$0::try_fold::closure_env$0&lt;core::iter::adapters::map::Map&lt;core::slice::iter::ChunksExact&lt;u8&gt;,fastnbt::arrays::impl$10::from_bytes::closure_env$0&gt;,enum2$&lt;core::result::Result&lt;enum2$&lt;core::convert::Infallible&gt;,std::io::error::Error&gt; &gt;,tuple$&lt;&gt;,core::iter::traits::iterator::Iterator::try_for_each::call::closure_env$0&lt;i64,enum2$&lt;core::ops::control_flow::ControlFlow&lt;i64,tuple$&lt;&gt; &gt; &gt;,enum2$&lt;core::ops::control_flow::ControlFlow&lt;i64,tuple$&lt;&gt; &gt; &gt; (*)(i64)&gt;,enum2$&lt;core::ops::control_flow::ControlFlow&lt;i64,tuple$&lt;&gt; &gt; &gt; &gt;,enum2$&lt;core::ops::control_flow::ControlFlow&lt;enum2$&lt;core::ops::control_flow::ControlFlow&lt;i64,tuple$&lt;&gt; &gt; &gt;,tuple$&lt;&gt; &gt; &gt; &gt;(core::iter::adapters::map::Map&lt;core::slice::iter::ChunksExact&lt;u8&gt;,fastnbt::arrays::impl$10::from_bytes::closure_env$0&gt;*, tuple$&lt;&gt;, core::iter::adapters::impl$0::try_fold::closure_env$0&lt;core::iter::adapters::map::Map&lt;core::slice::iter::ChunksExact&lt;u8&gt;,fastnbt::arrays::impl$10::from_bytes::closure_env$0&gt;,enum2$&lt;core::result::Result&lt;enum2$&lt;core::convert::Infallible&gt;,std::io::error::Error&gt; &gt;,tuple$&lt;&gt;,core::iter::traits::iterator::Iterator::try_for_each::call::closure_env$0&lt;i64,enum2$&lt;core::ops::control_flow::ControlFlow&lt;i64,tuple$&lt;&gt; &gt; &gt;,enum2$&lt;core::ops::control_flow::ControlFlow&lt;i64,tuple$&lt;&gt; &gt; &gt; (*)(i64)&gt;,enum2$&lt;core::ops::control_flow::ControlFlow&lt;i64,tuple$ (198 samples, 0.81%)</title><rect x="9.2836%" y="309" width="0.8101%" height="15" fill="rgb(244,218,35)" fg:x="2269" fg:w="198"/><text x="9.5336%" y="319.50"></text></g><g><title>rust.exe`core::iter::traits::iterator::Iterator::try_fold(core::slice::iter::ChunksExact&lt;u8&gt;*, tuple$&lt;&gt;, core::iter::adapters::map::map_try_fold::closure_env$0&lt;ref$&lt;slice2$&lt;u8&gt; &gt;,enum2$&lt;core::result::Result&lt;i64,std::io::error::Error&gt; &gt;,tuple$&lt;&gt;,enum2$&lt;core::ops::control_flow::ControlFlow&lt;enum2$&lt;core::ops::control_flow::ControlFlow&lt;i64,tuple$&lt;&gt; &gt; &gt;,tuple$&lt;&gt; &gt; &gt;,fastnbt::arrays::impl$10::from_bytes::closure_env$0,core::iter::adapters::impl$0::try_fold::closure_env$0&lt;core::iter::adapters::map::Map&lt;core::slice::iter::ChunksExact&lt;u8&gt;,fastnbt::arrays::impl$10::from_bytes::closure_env$0&gt;,enum2$&lt;core::result::Result&lt;enum2$&lt;core::convert::Infallible&gt;,std::io::error::Error&gt; &gt;,tuple$&lt;&gt;,core::iter::traits::iterator::Iterator::try_for_each::call::closure_env$0&lt;i64,enum2$&lt;core::ops::control_flow::ControlFlow&lt;i64,tuple$&lt;&gt; &gt; &gt;,enum2$&lt;core::ops::control_flow::ControlFlow&lt;i64,tuple$&lt;&gt; &gt; &gt; (*)(i64)&gt;,enum2$&lt;core::ops::control_flow::ControlFlow&lt;i64,tuple$ (143 samples, 0.59%)</title><rect x="9.5086%" y="293" width="0.5851%" height="15" fill="rgb(240,68,47)" fg:x="2324" fg:w="143"/><text x="9.7586%" y="303.50"></text></g><g><title>rust.exe`core::slice::iter::impl$90::next(core::slice::iter::ChunksExact (88 samples, 0.36%)</title><rect x="9.7336%" y="277" width="0.3601%" height="15" fill="rgb(210,16,53)" fg:x="2379" fg:w="88"/><text x="9.9836%" y="287.50"></text></g><g><title>rust.exe`core::slice::impl$0::split_at(ref$&lt;slice2$ (4 samples, 0.02%)</title><rect x="10.0773%" y="261" width="0.0164%" height="15" fill="rgb(235,124,12)" fg:x="2463" fg:w="4"/><text x="10.3273%" y="271.50"></text></g><g><title>rust.exe`core::slice::impl$0::split_at_checked(ref$&lt;slice2$ (4 samples, 0.02%)</title><rect x="10.0773%" y="245" width="0.0164%" height="15" fill="rgb(224,169,11)" fg:x="2463" fg:w="4"/><text x="10.3273%" y="255.50"></text></g><g><title>rust.exe`core::slice::impl$0::split_at_unchecked(ref$&lt;slice2$ (4 samples, 0.02%)</title><rect x="10.0773%" y="229" width="0.0164%" height="15" fill="rgb(250,166,2)" fg:x="2463" fg:w="4"/><text x="10.3273%" y="239.50"></text></g><g><title>rust.exe`core::ptr::const_ptr::impl$0::add (4 samples, 0.02%)</title><rect x="10.0773%" y="213" width="0.0164%" height="15" fill="rgb(242,216,29)" fg:x="2463" fg:w="4"/><text x="10.3273%" y="223.50"></text></g><g><title>`0x7FF96D7818D3 (46 samples, 0.19%)</title><rect x="10.2942%" y="85" width="0.1882%" height="15" fill="rgb(230,116,27)" fg:x="2516" fg:w="46"/><text x="10.5442%" y="95.50"></text></g><g><title>`0x7FF96D7818D7 (31 samples, 0.13%)</title><rect x="10.4824%" y="85" width="0.1268%" height="15" fill="rgb(228,99,48)" fg:x="2562" fg:w="31"/><text x="10.7324%" y="95.50"></text></g><g><title>`0x7FF96D7818DB (4 samples, 0.02%)</title><rect x="10.6092%" y="85" width="0.0164%" height="15" fill="rgb(253,11,6)" fg:x="2593" fg:w="4"/><text x="10.8592%" y="95.50"></text></g><g><title>`0x7FF96D7818EB (13 samples, 0.05%)</title><rect x="10.6256%" y="85" width="0.0532%" height="15" fill="rgb(247,143,39)" fg:x="2597" fg:w="13"/><text x="10.8756%" y="95.50"></text></g><g><title>`0x7FF96D651D19 (107 samples, 0.44%)</title><rect x="10.2942%" y="101" width="0.4378%" height="15" fill="rgb(236,97,10)" fg:x="2516" fg:w="107"/><text x="10.5442%" y="111.50"></text></g><g><title>`0x7FF96D7818EF (13 samples, 0.05%)</title><rect x="10.6788%" y="85" width="0.0532%" height="15" fill="rgb(233,208,19)" fg:x="2610" fg:w="13"/><text x="10.9288%" y="95.50"></text></g><g><title>rust.exe`enum2$&lt;core::result::Result&lt;fastnbt::arrays::LongArray,std::io::error::Error&gt; &gt;::map(enum2$&lt;core::result::Result&lt;fastnbt::arrays::LongArray,std::io::error::Error&gt; &gt;, enum2$&lt;fastnbt::value::Value&gt; (*) (420 samples, 1.72%)</title><rect x="9.0422%" y="453" width="1.7184%" height="15" fill="rgb(216,164,2)" fg:x="2210" fg:w="420"/><text x="9.2922%" y="463.50"></text></g><g><title>rust.exe`fastnbt::arrays::LongArray::from_bytes(ref$&lt;slice2$ (420 samples, 1.72%)</title><rect x="9.0422%" y="437" width="1.7184%" height="15" fill="rgb(220,129,5)" fg:x="2210" fg:w="420"/><text x="9.2922%" y="447.50"></text></g><g><title>rust.exe`core::iter::traits::iterator::Iterator::collect(core::iter::adapters::map::Map&lt;core::slice::iter::ChunksExact (420 samples, 1.72%)</title><rect x="9.0422%" y="421" width="1.7184%" height="15" fill="rgb(242,17,10)" fg:x="2210" fg:w="420"/><text x="9.2922%" y="431.50"></text></g><g><title>rust.exe`core::result::impl$25::from_iter(core::iter::adapters::map::Map&lt;core::slice::iter::ChunksExact (420 samples, 1.72%)</title><rect x="9.0422%" y="405" width="1.7184%" height="15" fill="rgb(242,107,0)" fg:x="2210" fg:w="420"/><text x="9.2922%" y="415.50"></text></g><g><title>rust.exe`core::iter::adapters::try_process(core::iter::adapters::map::Map&lt;core::slice::iter::ChunksExact&lt;u8&gt;,fastnbt::arrays::impl$10::from_bytes::closure_env$0&gt;, core::result::impl$25::from_iter::closure_env$0&lt;i64,std::io::error::Error,alloc::vec::Vec&lt;i64,alloc::alloc::Global&gt;,core::iter::adapters::map::Map&lt;core::slice::iter::ChunksExact (420 samples, 1.72%)</title><rect x="9.0422%" y="389" width="1.7184%" height="15" fill="rgb(251,28,31)" fg:x="2210" fg:w="420"/><text x="9.2922%" y="399.50"></text></g><g><title>rust.exe`alloc::vec::spec_from_iter::impl$0::from_iter&lt;i64,core::iter::adapters::GenericShunt&lt;core::iter::adapters::map::Map&lt;core::slice::iter::ChunksExact&lt;u8&gt;,fastnbt::arrays::impl$10::from_bytes::closure_env$0&gt;,enum2$&lt;core::result::Result&lt;enum2$&lt;core::convert::Infallible&gt;,std::io::error::Error&gt; &gt; &gt; &gt;(core::iter::adapters::GenericShunt&lt;core::iter::adapters::map::Map&lt;core::slice::iter::ChunksExact&lt;u8&gt;,fastnbt::arrays::impl$10::from_bytes::closure_env$0&gt;,enum2$&lt;core::result::Result&lt;enum2$ (420 samples, 1.72%)</title><rect x="9.0422%" y="373" width="1.7184%" height="15" fill="rgb(233,223,10)" fg:x="2210" fg:w="420"/><text x="9.2922%" y="383.50"></text></g><g><title>rust.exe`alloc::vec::spec_from_iter_nested::impl$0::from_iter(core::iter::adapters::GenericShunt&lt;core::iter::adapters::map::Map&lt;core::slice::iter::ChunksExact&lt;u8&gt;,fastnbt::arrays::impl$10::from_bytes::closure_env$0&gt;,enum2$&lt;core::result::Result&lt;enum2$ (420 samples, 1.72%)</title><rect x="9.0422%" y="357" width="1.7184%" height="15" fill="rgb(215,21,27)" fg:x="2210" fg:w="420"/><text x="9.2922%" y="367.50"></text></g><g><title>rust.exe`alloc::vec::spec_extend::impl$0::spec_extend(alloc::vec::Vec&lt;i64,alloc::alloc::Global&gt;*, core::iter::adapters::GenericShunt&lt;core::iter::adapters::map::Map&lt;core::slice::iter::ChunksExact&lt;u8&gt;,fastnbt::arrays::impl$10::from_bytes::closure_env$0&gt;,enum2$&lt;core::result::Result&lt;enum2$ (420 samples, 1.72%)</title><rect x="9.0422%" y="341" width="1.7184%" height="15" fill="rgb(232,23,21)" fg:x="2210" fg:w="420"/><text x="9.2922%" y="351.50"></text></g><g><title>rust.exe`alloc::vec::Vec&lt;i64,alloc::alloc::Global&gt;::extend_desugared(core::iter::adapters::GenericShunt&lt;core::iter::adapters::map::Map&lt;core::slice::iter::ChunksExact&lt;u8&gt;,fastnbt::arrays::impl$10::from_bytes::closure_env$0&gt;,enum2$&lt;core::result::Result&lt;enum2$ (420 samples, 1.72%)</title><rect x="9.0422%" y="325" width="1.7184%" height="15" fill="rgb(244,5,23)" fg:x="2210" fg:w="420"/><text x="9.2922%" y="335.50"></text></g><g><title>rust.exe`core::ptr::write (163 samples, 0.67%)</title><rect x="10.0937%" y="309" width="0.6669%" height="15" fill="rgb(226,81,46)" fg:x="2467" fg:w="163"/><text x="10.3437%" y="319.50"></text></g><g><title>rust.exe`alloc::raw_vec::RawVec&lt;i64,alloc::alloc::Global&gt;::ptr (115 samples, 0.47%)</title><rect x="10.2901%" y="293" width="0.4705%" height="15" fill="rgb(247,70,30)" fg:x="2515" fg:w="115"/><text x="10.5401%" y="303.50"></text></g><g><title>rust.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::ptr (115 samples, 0.47%)</title><rect x="10.2901%" y="277" width="0.4705%" height="15" fill="rgb(212,68,19)" fg:x="2515" fg:w="115"/><text x="10.5401%" y="287.50"></text></g><g><title>rust.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::non_null (115 samples, 0.47%)</title><rect x="10.2901%" y="261" width="0.4705%" height="15" fill="rgb(240,187,13)" fg:x="2515" fg:w="115"/><text x="10.5401%" y="271.50"></text></g><g><title>rust.exe`alloc::raw_vec::impl$5::reserve::do_reserve_and_handle&lt;alloc::alloc::Global&gt;(alloc::raw_vec::RawVecInner (115 samples, 0.47%)</title><rect x="10.2901%" y="245" width="0.4705%" height="15" fill="rgb(223,113,26)" fg:x="2515" fg:w="115"/><text x="10.5401%" y="255.50"></text></g><g><title>rust.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::grow_amortized (115 samples, 0.47%)</title><rect x="10.2901%" y="229" width="0.4705%" height="15" fill="rgb(206,192,2)" fg:x="2515" fg:w="115"/><text x="10.5401%" y="239.50"></text></g><g><title>rust.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull&lt;slice2$ (115 samples, 0.47%)</title><rect x="10.2901%" y="213" width="0.4705%" height="15" fill="rgb(241,108,4)" fg:x="2515" fg:w="115"/><text x="10.5401%" y="223.50"></text></g><g><title>rust.exe`alloc::raw_vec::finish_grow&lt;alloc::alloc::Global&gt;(core::alloc::layout::Layout, enum2$&lt;core::option::Option&lt;tuple$&lt;core::ptr::non_null::NonNull (115 samples, 0.47%)</title><rect x="10.2901%" y="197" width="0.4705%" height="15" fill="rgb(247,173,49)" fg:x="2515" fg:w="115"/><text x="10.5401%" y="207.50"></text></g><g><title>rust.exe`alloc::alloc::impl$1::grow(alloc::alloc::Global*, core::ptr::non_null::NonNull (115 samples, 0.47%)</title><rect x="10.2901%" y="181" width="0.4705%" height="15" fill="rgb(224,114,35)" fg:x="2515" fg:w="115"/><text x="10.5401%" y="191.50"></text></g><g><title>rust.exe`alloc::alloc::Global::grow_impl(core::ptr::non_null::NonNull (115 samples, 0.47%)</title><rect x="10.2901%" y="165" width="0.4705%" height="15" fill="rgb(245,159,27)" fg:x="2515" fg:w="115"/><text x="10.5401%" y="175.50"></text></g><g><title>rust.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull (115 samples, 0.47%)</title><rect x="10.2901%" y="149" width="0.4705%" height="15" fill="rgb(245,172,44)" fg:x="2515" fg:w="115"/><text x="10.5401%" y="159.50"></text></g><g><title>`0x7FF96D6C500C (115 samples, 0.47%)</title><rect x="10.2901%" y="133" width="0.4705%" height="15" fill="rgb(236,23,11)" fg:x="2515" fg:w="115"/><text x="10.5401%" y="143.50"></text></g><g><title>`0x7FF96D650DC5 (115 samples, 0.47%)</title><rect x="10.2901%" y="117" width="0.4705%" height="15" fill="rgb(205,117,38)" fg:x="2515" fg:w="115"/><text x="10.5401%" y="127.50"></text></g><g><title>`0x7FF96D651D2C (7 samples, 0.03%)</title><rect x="10.7320%" y="101" width="0.0286%" height="15" fill="rgb(237,72,25)" fg:x="2623" fg:w="7"/><text x="10.9820%" y="111.50"></text></g><g><title>`0x7FF96D64FA02 (6 samples, 0.02%)</title><rect x="10.7361%" y="85" width="0.0245%" height="15" fill="rgb(244,70,9)" fg:x="2624" fg:w="6"/><text x="10.9861%" y="95.50"></text></g><g><title>`0x7FF96D62C2ED (6 samples, 0.02%)</title><rect x="10.7361%" y="69" width="0.0245%" height="15" fill="rgb(217,125,39)" fg:x="2624" fg:w="6"/><text x="10.9861%" y="79.50"></text></g><g><title>`0x7FF96D68F6EF (6 samples, 0.02%)</title><rect x="10.7361%" y="53" width="0.0245%" height="15" fill="rgb(235,36,10)" fg:x="2624" fg:w="6"/><text x="10.9861%" y="63.50"></text></g><g><title>`0x7FF96D77C374 (6 samples, 0.02%)</title><rect x="10.7361%" y="37" width="0.0245%" height="15" fill="rgb(251,123,47)" fg:x="2624" fg:w="6"/><text x="10.9861%" y="47.50"></text></g><g><title>rust.exe`crc32fast::specialized::pclmulqdq::get(ref$&lt;slice2$ (13 samples, 0.05%)</title><rect x="10.7606%" y="309" width="0.0532%" height="15" fill="rgb(221,13,13)" fg:x="2630" fg:w="13"/><text x="11.0106%" y="319.50"></text></g><g><title>rust.exe`core::core_arch::x86::sse2::_mm_loadu_si128 (7 samples, 0.03%)</title><rect x="10.7852%" y="293" width="0.0286%" height="15" fill="rgb(238,131,9)" fg:x="2636" fg:w="7"/><text x="11.0352%" y="303.50"></text></g><g><title>rust.exe`core::intrinsics::copy_nonoverlapping (7 samples, 0.03%)</title><rect x="10.7852%" y="277" width="0.0286%" height="15" fill="rgb(211,50,8)" fg:x="2636" fg:w="7"/><text x="11.0352%" y="287.50"></text></g><g><title>rust.exe`core::core_arch::x86::pclmulqdq::_mm_clmulepi64_si128 (25 samples, 0.10%)</title><rect x="10.8138%" y="293" width="0.1023%" height="15" fill="rgb(245,182,24)" fg:x="2643" fg:w="25"/><text x="11.0638%" y="303.50"></text></g><g><title>rust.exe`crc32fast::Hasher::update(ref$&lt;slice2$ (53 samples, 0.22%)</title><rect x="10.7606%" y="357" width="0.2168%" height="15" fill="rgb(242,14,37)" fg:x="2630" fg:w="53"/><text x="11.0106%" y="367.50"></text></g><g><title>rust.exe`crc32fast::specialized::pclmulqdq::State::update(ref$&lt;slice2$ (53 samples, 0.22%)</title><rect x="10.7606%" y="341" width="0.2168%" height="15" fill="rgb(246,228,12)" fg:x="2630" fg:w="53"/><text x="11.0106%" y="351.50"></text></g><g><title>rust.exe`crc32fast::specialized::pclmulqdq::calculate(unsigned int, ref$&lt;slice2$ (53 samples, 0.22%)</title><rect x="10.7606%" y="325" width="0.2168%" height="15" fill="rgb(213,55,15)" fg:x="2630" fg:w="53"/><text x="11.0106%" y="335.50"></text></g><g><title>rust.exe`crc32fast::specialized::pclmulqdq::reduce128 (40 samples, 0.16%)</title><rect x="10.8138%" y="309" width="0.1637%" height="15" fill="rgb(209,9,3)" fg:x="2643" fg:w="40"/><text x="11.0638%" y="319.50"></text></g><g><title>rust.exe`core::core_arch::x86::sse2::_mm_xor_si128 (15 samples, 0.06%)</title><rect x="10.9161%" y="293" width="0.0614%" height="15" fill="rgb(230,59,30)" fg:x="2668" fg:w="15"/><text x="11.1661%" y="303.50"></text></g><g><title>rust.exe`flate2::bufreader::impl$4::fill_buf(flate2::bufreader::BufReader&lt;std::io::buffered::bufreader::BufReader (8 samples, 0.03%)</title><rect x="10.9775%" y="309" width="0.0327%" height="15" fill="rgb(209,121,21)" fg:x="2683" fg:w="8"/><text x="11.2275%" y="319.50"></text></g><g><title>rust.exe`std::io::buffered::bufreader::impl$5::read(std::io::buffered::bufreader::BufReader&lt;std::fs::File&gt;*, ref_mut$&lt;slice2$ (8 samples, 0.03%)</title><rect x="10.9775%" y="293" width="0.0327%" height="15" fill="rgb(220,109,13)" fg:x="2683" fg:w="8"/><text x="11.2275%" y="303.50"></text></g><g><title>rust.exe`std::sys::pal::windows::handle::Handle::read (8 samples, 0.03%)</title><rect x="10.9775%" y="277" width="0.0327%" height="15" fill="rgb(232,18,1)" fg:x="2683" fg:w="8"/><text x="11.2275%" y="287.50"></text></g><g><title>rust.exe`std::sys::pal::windows::handle::Handle::synchronous_read (8 samples, 0.03%)</title><rect x="10.9775%" y="261" width="0.0327%" height="15" fill="rgb(215,41,42)" fg:x="2683" fg:w="8"/><text x="11.2275%" y="271.50"></text></g><g><title>`0x7FF96D77C074 (8 samples, 0.03%)</title><rect x="10.9775%" y="245" width="0.0327%" height="15" fill="rgb(224,123,36)" fg:x="2683" fg:w="8"/><text x="11.2275%" y="255.50"></text></g><g><title>`0x7FF94C58FC68 (4 samples, 0.02%)</title><rect x="11.1288%" y="197" width="0.0164%" height="15" fill="rgb(240,125,3)" fg:x="2720" fg:w="4"/><text x="11.3788%" y="207.50"></text></g><g><title>rust.exe`miniz_oxide::inflate::core::HuffmanTable::lookup (17 samples, 0.07%)</title><rect x="11.1820%" y="197" width="0.0696%" height="15" fill="rgb(205,98,50)" fg:x="2733" fg:w="17"/><text x="11.4320%" y="207.50"></text></g><g><title>rust.exe`miniz_oxide::inflate::core::HuffmanTable::fast_lookup (14 samples, 0.06%)</title><rect x="11.1943%" y="181" width="0.0573%" height="15" fill="rgb(205,185,37)" fg:x="2736" fg:w="14"/><text x="11.4443%" y="191.50"></text></g><g><title>rust.exe`miniz_oxide::inflate::core::apply_match(ref_mut$&lt;slice2$ (903 samples, 3.69%)</title><rect x="11.2516%" y="197" width="3.6946%" height="15" fill="rgb(238,207,15)" fg:x="2750" fg:w="903"/><text x="11.5016%" y="207.50">rust..</text></g><g><title>rust.exe`miniz_oxide::inflate::core::transfer(ref_mut$&lt;slice2$ (893 samples, 3.65%)</title><rect x="11.2925%" y="181" width="3.6537%" height="15" fill="rgb(213,199,42)" fg:x="2760" fg:w="893"/><text x="11.5425%" y="191.50">rust..</text></g><g><title>rust.exe`miniz_oxide::inflate::core::decompress_fast (962 samples, 3.94%)</title><rect x="11.0225%" y="213" width="3.9360%" height="15" fill="rgb(235,201,11)" fg:x="2694" fg:w="962"/><text x="11.2725%" y="223.50">rust..</text></g><g><title>rust.exe`miniz_oxide::inflate::core::decompress(miniz_oxide::inflate::core::DecompressorOxide*, ref$&lt;slice2$&lt;u8&gt; &gt;, ref_mut$&lt;slice2$ (974 samples, 3.99%)</title><rect x="11.0102%" y="229" width="3.9851%" height="15" fill="rgb(207,46,11)" fg:x="2691" fg:w="974"/><text x="11.2602%" y="239.50">rust..</text></g><g><title>rust.exe`miniz_oxide::inflate::core::transfer(ref_mut$&lt;slice2$ (8 samples, 0.03%)</title><rect x="14.9626%" y="213" width="0.0327%" height="15" fill="rgb(241,35,35)" fg:x="3657" fg:w="8"/><text x="15.2126%" y="223.50"></text></g><g><title>`0x7FF94C58F88B (39 samples, 0.16%)</title><rect x="14.9953%" y="181" width="0.1596%" height="15" fill="rgb(243,32,47)" fg:x="3665" fg:w="39"/><text x="15.2453%" y="191.50"></text></g><g><title>rust.exe`alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt;::as_mut_slice (1,075 samples, 4.40%)</title><rect x="10.7606%" y="405" width="4.3983%" height="15" fill="rgb(247,202,23)" fg:x="2630" fg:w="1075"/><text x="11.0106%" y="415.50">rust...</text></g><g><title>rust.exe`std::io::default_read_exact&lt;flate2::gz::read::GzDecoder&lt;std::io::buffered::bufreader::BufReader&lt;std::fs::File&gt; &gt; &gt;(flate2::gz::read::GzDecoder&lt;std::io::buffered::bufreader::BufReader&lt;std::fs::File&gt; &gt;*, ref_mut$&lt;slice2$ (1,075 samples, 4.40%)</title><rect x="10.7606%" y="389" width="4.3983%" height="15" fill="rgb(219,102,11)" fg:x="2630" fg:w="1075"/><text x="11.0106%" y="399.50">rust...</text></g><g><title>rust.exe`flate2::gz::bufread::impl$6::read&lt;flate2::bufreader::BufReader&lt;std::io::buffered::bufreader::BufReader&lt;std::fs::File&gt; &gt; &gt;(flate2::gz::bufread::GzDecoder&lt;flate2::bufreader::BufReader&lt;std::io::buffered::bufreader::BufReader&lt;std::fs::File&gt; &gt; &gt;*, ref_mut$&lt;slice2$ (1,075 samples, 4.40%)</title><rect x="10.7606%" y="373" width="4.3983%" height="15" fill="rgb(243,110,44)" fg:x="2630" fg:w="1075"/><text x="11.0106%" y="383.50">rust...</text></g><g><title>rust.exe`flate2::crc::impl$3::read(flate2::crc::CrcReader&lt;flate2::deflate::bufread::DeflateDecoder&lt;flate2::bufreader::BufReader&lt;std::io::buffered::bufreader::BufReader&lt;std::fs::File&gt; &gt; &gt; &gt;*, ref_mut$&lt;slice2$ (1,022 samples, 4.18%)</title><rect x="10.9775%" y="357" width="4.1815%" height="15" fill="rgb(222,74,54)" fg:x="2683" fg:w="1022"/><text x="11.2275%" y="367.50">rust...</text></g><g><title>rust.exe`flate2::deflate::bufread::impl$6::read(flate2::deflate::bufread::DeflateDecoder&lt;flate2::bufreader::BufReader&lt;std::io::buffered::bufreader::BufReader&lt;std::fs::File&gt; &gt; &gt;*, ref_mut$&lt;slice2$ (1,022 samples, 4.18%)</title><rect x="10.9775%" y="341" width="4.1815%" height="15" fill="rgb(216,99,12)" fg:x="2683" fg:w="1022"/><text x="11.2275%" y="351.50">rust...</text></g><g><title>rust.exe`flate2::zio::read&lt;flate2::bufreader::BufReader&lt;std::io::buffered::bufreader::BufReader&lt;std::fs::File&gt; &gt;,flate2::mem::Decompress&gt;(flate2::bufreader::BufReader&lt;std::io::buffered::bufreader::BufReader&lt;std::fs::File&gt; &gt;*, flate2::mem::Decompress*, ref_mut$&lt;slice2$ (1,022 samples, 4.18%)</title><rect x="10.9775%" y="325" width="4.1815%" height="15" fill="rgb(226,22,26)" fg:x="2683" fg:w="1022"/><text x="11.2275%" y="335.50">rust...</text></g><g><title>rust.exe`flate2::zio::impl$1::run(flate2::mem::Decompress*, ref$&lt;slice2$&lt;u8&gt; &gt;, ref_mut$&lt;slice2$ (1,014 samples, 4.15%)</title><rect x="11.0102%" y="309" width="4.1488%" height="15" fill="rgb(217,163,10)" fg:x="2691" fg:w="1014"/><text x="11.2602%" y="319.50">rust...</text></g><g><title>rust.exe`flate2::mem::Decompress::decompress(ref$&lt;slice2$&lt;u8&gt; &gt;, ref_mut$&lt;slice2$ (1,014 samples, 4.15%)</title><rect x="11.0102%" y="293" width="4.1488%" height="15" fill="rgb(213,25,53)" fg:x="2691" fg:w="1014"/><text x="11.2602%" y="303.50">rust...</text></g><g><title>rust.exe`flate2::ffi::rust::impl$3::decompress(flate2::ffi::rust::Inflate*, ref$&lt;slice2$&lt;u8&gt; &gt;, ref_mut$&lt;slice2$ (1,014 samples, 4.15%)</title><rect x="11.0102%" y="277" width="4.1488%" height="15" fill="rgb(252,105,26)" fg:x="2691" fg:w="1014"/><text x="11.2602%" y="287.50">rust...</text></g><g><title>rust.exe`miniz_oxide::inflate::stream::inflate(miniz_oxide::inflate::stream::InflateState*, ref$&lt;slice2$&lt;u8&gt; &gt;, ref_mut$&lt;slice2$ (1,014 samples, 4.15%)</title><rect x="11.0102%" y="261" width="4.1488%" height="15" fill="rgb(220,39,43)" fg:x="2691" fg:w="1014"/><text x="11.2602%" y="271.50">rust...</text></g><g><title>rust.exe`miniz_oxide::inflate::stream::inflate_loop(miniz_oxide::inflate::stream::InflateState*, ref$&lt;slice2$&lt;u8&gt; &gt;*, ref_mut$&lt;slice2$ (1,014 samples, 4.15%)</title><rect x="11.0102%" y="245" width="4.1488%" height="15" fill="rgb(229,68,48)" fg:x="2691" fg:w="1014"/><text x="11.2602%" y="255.50">rust...</text></g><g><title>rust.exe`miniz_oxide::inflate::stream::push_dict_out(miniz_oxide::inflate::stream::InflateState*, ref_mut$&lt;slice2$ (40 samples, 0.16%)</title><rect x="14.9953%" y="229" width="0.1637%" height="15" fill="rgb(252,8,32)" fg:x="3665" fg:w="40"/><text x="15.2453%" y="239.50"></text></g><g><title>rust.exe`core::slice::impl$0::copy_from_slice(ref_mut$&lt;slice2$&lt;u8&gt; &gt;, ref$&lt;slice2$ (40 samples, 0.16%)</title><rect x="14.9953%" y="213" width="0.1637%" height="15" fill="rgb(223,20,43)" fg:x="3665" fg:w="40"/><text x="15.2453%" y="223.50"></text></g><g><title>rust.exe`core::intrinsics::copy_nonoverlapping (40 samples, 0.16%)</title><rect x="14.9953%" y="197" width="0.1637%" height="15" fill="rgb(229,81,49)" fg:x="3665" fg:w="40"/><text x="15.2453%" y="207.50"></text></g><g><title>`0x7FF94C591C9B (50 samples, 0.20%)</title><rect x="15.1671%" y="357" width="0.2046%" height="15" fill="rgb(236,28,36)" fg:x="3707" fg:w="50"/><text x="15.4171%" y="367.50"></text></g><g><title>`0x7FF94C591CA3 (11 samples, 0.05%)</title><rect x="15.3717%" y="357" width="0.0450%" height="15" fill="rgb(249,185,26)" fg:x="3757" fg:w="11"/><text x="15.6217%" y="367.50"></text></g><g><title>rust.exe`fastnbt::input::impl$5::consume_bytes(fastnbt::input::Reader&lt;flate2::gz::read::GzDecoder&lt;std::io::buffered::bufreader::BufReader&lt;std::fs::File&gt; &gt; &gt;*, unsigned long long, alloc::vec::Vec (1,141 samples, 4.67%)</title><rect x="10.7606%" y="421" width="4.6684%" height="15" fill="rgb(249,174,33)" fg:x="2630" fg:w="1141"/><text x="11.0106%" y="431.50">rust...</text></g><g><title>rust.exe`alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt;::resize (66 samples, 0.27%)</title><rect x="15.1590%" y="405" width="0.2700%" height="15" fill="rgb(233,201,37)" fg:x="3705" fg:w="66"/><text x="15.4090%" y="415.50"></text></g><g><title>rust.exe`alloc::vec::Vec&lt;u8,alloc::alloc::Global&gt;::extend_with (66 samples, 0.27%)</title><rect x="15.1590%" y="389" width="0.2700%" height="15" fill="rgb(221,78,26)" fg:x="3705" fg:w="66"/><text x="15.4090%" y="399.50"></text></g><g><title>rust.exe`core::ptr::write (66 samples, 0.27%)</title><rect x="15.1590%" y="373" width="0.2700%" height="15" fill="rgb(250,127,30)" fg:x="3705" fg:w="66"/><text x="15.4090%" y="383.50"></text></g><g><title>`0x7FF94C58FF41 (4 samples, 0.02%)</title><rect x="15.4413%" y="197" width="0.0164%" height="15" fill="rgb(230,49,44)" fg:x="3774" fg:w="4"/><text x="15.6913%" y="207.50"></text></g><g><title>`0x7FF94C58FF46 (9 samples, 0.04%)</title><rect x="15.4576%" y="197" width="0.0368%" height="15" fill="rgb(229,67,23)" fg:x="3778" fg:w="9"/><text x="15.7076%" y="207.50"></text></g><g><title>`0x7FF94C58FF6E (55 samples, 0.23%)</title><rect x="15.4945%" y="197" width="0.2250%" height="15" fill="rgb(249,83,47)" fg:x="3787" fg:w="55"/><text x="15.7445%" y="207.50"></text></g><g><title>`0x7FF94C58FF76 (20 samples, 0.08%)</title><rect x="15.7195%" y="197" width="0.0818%" height="15" fill="rgb(215,43,3)" fg:x="3842" fg:w="20"/><text x="15.9695%" y="207.50"></text></g><g><title>rust.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;enum2$ (1,654 samples, 6.77%)</title><rect x="9.0381%" y="501" width="6.7673%" height="15" fill="rgb(238,154,13)" fg:x="2209" fg:w="1654"/><text x="9.2881%" y="511.50">rust.exe`..</text></g><g><title>rust.exe`fastnbt::de::impl$7::deserialize_any&lt;fastnbt::input::Reader&lt;flate2::gz::read::GzDecoder&lt;std::io::buffered::bufreader::BufReader&lt;std::fs::File&gt; &gt; &gt;,fastnbt::value::de::impl$0::deserialize::ValueVisitor&gt;(fastnbt::de::AnonymousValue&lt;fastnbt::input::Reader&lt;flate2::gz::read::GzDecoder&lt;std::io::buffered::bufreader::BufReader (1,654 samples, 6.77%)</title><rect x="9.0381%" y="485" width="6.7673%" height="15" fill="rgb(219,56,2)" fg:x="2209" fg:w="1654"/><text x="9.2881%" y="495.50">rust.exe`..</text></g><g><title>rust.exe`fastnbt::value::de::impl$0::deserialize::impl$0::visit_map&lt;fastnbt::de::ArrayWrapperAccess&lt;fastnbt::input::Reader&lt;flate2::gz::read::GzDecoder&lt;std::io::buffered::bufreader::BufReader&lt;std::fs::File&gt; &gt; &gt; &gt; &gt;(fastnbt::value::de::impl$0::deserialize::ValueVisitor, fastnbt::de::ArrayWrapperAccess&lt;fastnbt::input::Reader&lt;flate2::gz::read::GzDecoder&lt;std::io::buffered::bufreader::BufReader (1,654 samples, 6.77%)</title><rect x="9.0381%" y="469" width="6.7673%" height="15" fill="rgb(233,0,4)" fg:x="2209" fg:w="1654"/><text x="9.2881%" y="479.50">rust.exe`..</text></g><g><title>rust.exe`serde::de::MapAccess::next_value(fastnbt::de::ArrayWrapperAccess&lt;fastnbt::input::Reader&lt;flate2::gz::read::GzDecoder&lt;std::io::buffered::bufreader::BufReader (1,233 samples, 5.04%)</title><rect x="10.7606%" y="453" width="5.0448%" height="15" fill="rgb(235,30,7)" fg:x="2630" fg:w="1233"/><text x="11.0106%" y="463.50">rust.e..</text></g><g><title>rust.exe`fastnbt::de::impl$12::next_value_seed&lt;fastnbt::input::Reader&lt;flate2::gz::read::GzDecoder&lt;std::io::buffered::bufreader::BufReader&lt;std::fs::File&gt; &gt; &gt;,core::marker::PhantomData&lt;serde_bytes::bytebuf::ByteBuf&gt; &gt;(fastnbt::de::ArrayWrapperAccess&lt;fastnbt::input::Reader&lt;flate2::gz::read::GzDecoder&lt;std::io::buffered::bufreader::BufReader&lt;std::fs::File&gt; &gt; &gt; &gt;*, core::marker::PhantomData (1,233 samples, 5.04%)</title><rect x="10.7606%" y="437" width="5.0448%" height="15" fill="rgb(250,79,13)" fg:x="2630" fg:w="1233"/><text x="11.0106%" y="447.50">rust.e..</text></g><g><title>rust.exe`serde::de::impl$5::deserialize(core::marker::PhantomData&lt;serde_bytes::bytebuf::ByteBuf&gt;, serde::de::value::BytesDeserializer (92 samples, 0.38%)</title><rect x="15.4290%" y="421" width="0.3764%" height="15" fill="rgb(211,146,34)" fg:x="3771" fg:w="92"/><text x="15.6790%" y="431.50"></text></g><g><title>rust.exe`serde_bytes::bytebuf::impl$17::deserialize(serde::de::value::BytesDeserializer (92 samples, 0.38%)</title><rect x="15.4290%" y="405" width="0.3764%" height="15" fill="rgb(228,22,38)" fg:x="3771" fg:w="92"/><text x="15.6790%" y="415.50"></text></g><g><title>rust.exe`serde::de::value::impl$43::deserialize_byte_buf(serde::de::value::BytesDeserializer (92 samples, 0.38%)</title><rect x="15.4290%" y="389" width="0.3764%" height="15" fill="rgb(235,168,5)" fg:x="3771" fg:w="92"/><text x="15.6790%" y="399.50"></text></g><g><title>rust.exe`serde::de::value::impl$43::deserialize_any(serde::de::value::BytesDeserializer (92 samples, 0.38%)</title><rect x="15.4290%" y="373" width="0.3764%" height="15" fill="rgb(221,155,16)" fg:x="3771" fg:w="92"/><text x="15.6790%" y="383.50"></text></g><g><title>rust.exe`serde_bytes::bytebuf::impl$16::visit_bytes(serde_bytes::bytebuf::ByteBufVisitor, ref$&lt;slice2$ (92 samples, 0.38%)</title><rect x="15.4290%" y="357" width="0.3764%" height="15" fill="rgb(215,215,53)" fg:x="3771" fg:w="92"/><text x="15.6790%" y="367.50"></text></g><g><title>rust.exe`serde_bytes::bytebuf::ByteBuf::from(ref$&lt;slice2$ (92 samples, 0.38%)</title><rect x="15.4290%" y="341" width="0.3764%" height="15" fill="rgb(223,4,10)" fg:x="3771" fg:w="92"/><text x="15.6790%" y="351.50"></text></g><g><title>rust.exe`core::convert::impl$3::into(ref$&lt;slice2$ (92 samples, 0.38%)</title><rect x="15.4290%" y="325" width="0.3764%" height="15" fill="rgb(234,103,6)" fg:x="3771" fg:w="92"/><text x="15.6790%" y="335.50"></text></g><g><title>rust.exe`alloc::vec::impl$32::from(ref$&lt;slice2$ (92 samples, 0.38%)</title><rect x="15.4290%" y="309" width="0.3764%" height="15" fill="rgb(227,97,0)" fg:x="3771" fg:w="92"/><text x="15.6790%" y="319.50"></text></g><g><title>rust.exe`alloc::slice::impl$0::to_vec(ref$&lt;slice2$ (92 samples, 0.38%)</title><rect x="15.4290%" y="293" width="0.3764%" height="15" fill="rgb(234,150,53)" fg:x="3771" fg:w="92"/><text x="15.6790%" y="303.50"></text></g><g><title>rust.exe`alloc::slice::impl$0::to_vec_in(ref$&lt;slice2$ (92 samples, 0.38%)</title><rect x="15.4290%" y="277" width="0.3764%" height="15" fill="rgb(228,201,54)" fg:x="3771" fg:w="92"/><text x="15.6790%" y="287.50"></text></g><g><title>rust.exe`alloc::slice::hack::to_vec(ref$&lt;slice2$ (92 samples, 0.38%)</title><rect x="15.4290%" y="261" width="0.3764%" height="15" fill="rgb(222,22,37)" fg:x="3771" fg:w="92"/><text x="15.6790%" y="271.50"></text></g><g><title>rust.exe`alloc::slice::hack::impl$1::to_vec(ref$&lt;slice2$ (92 samples, 0.38%)</title><rect x="15.4290%" y="245" width="0.3764%" height="15" fill="rgb(237,53,32)" fg:x="3771" fg:w="92"/><text x="15.6790%" y="255.50"></text></g><g><title>rust.exe`core::ptr::const_ptr::impl$0::copy_to_nonoverlapping (92 samples, 0.38%)</title><rect x="15.4290%" y="229" width="0.3764%" height="15" fill="rgb(233,25,53)" fg:x="3771" fg:w="92"/><text x="15.6790%" y="239.50"></text></g><g><title>rust.exe`core::intrinsics::copy_nonoverlapping (92 samples, 0.38%)</title><rect x="15.4290%" y="213" width="0.3764%" height="15" fill="rgb(210,40,34)" fg:x="3771" fg:w="92"/><text x="15.6790%" y="223.50"></text></g><g><title>rust.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;enum2$ (1,659 samples, 6.79%)</title><rect x="9.0381%" y="549" width="6.7878%" height="15" fill="rgb(241,220,44)" fg:x="2209" fg:w="1659"/><text x="9.2881%" y="559.50">rust.exe`..</text></g><g><title>rust.exe`fastnbt::de::impl$7::deserialize_any&lt;fastnbt::input::Reader&lt;flate2::gz::read::GzDecoder&lt;std::io::buffered::bufreader::BufReader&lt;std::fs::File&gt; &gt; &gt;,fastnbt::value::de::impl$0::deserialize::ValueVisitor&gt;(fastnbt::de::AnonymousValue&lt;fastnbt::input::Reader&lt;flate2::gz::read::GzDecoder&lt;std::io::buffered::bufreader::BufReader (1,659 samples, 6.79%)</title><rect x="9.0381%" y="533" width="6.7878%" height="15" fill="rgb(235,28,35)" fg:x="2209" fg:w="1659"/><text x="9.2881%" y="543.50">rust.exe`..</text></g><g><title>rust.exe`fastnbt::value::de::impl$0::deserialize::impl$0::visit_map&lt;fastnbt::de::MapAccess&lt;fastnbt::input::Reader&lt;flate2::gz::read::GzDecoder&lt;std::io::buffered::bufreader::BufReader&lt;std::fs::File&gt; &gt; &gt; &gt; &gt;(fastnbt::value::de::impl$0::deserialize::ValueVisitor, fastnbt::de::MapAccess&lt;fastnbt::input::Reader&lt;flate2::gz::read::GzDecoder&lt;std::io::buffered::bufreader::BufReader (1,659 samples, 6.79%)</title><rect x="9.0381%" y="517" width="6.7878%" height="15" fill="rgb(210,56,17)" fg:x="2209" fg:w="1659"/><text x="9.2881%" y="527.50">rust.exe`..</text></g><g><title>rust.exe`serde::de::MapAccess::next_entry(fastnbt::de::MapAccess&lt;fastnbt::input::Reader&lt;flate2::gz::read::GzDecoder&lt;std::io::buffered::bufreader::BufReader (5 samples, 0.02%)</title><rect x="15.8054%" y="501" width="0.0205%" height="15" fill="rgb(224,130,29)" fg:x="3863" fg:w="5"/><text x="16.0554%" y="511.50"></text></g><g><title>rust.exe`serde::de::MapAccess::next_entry_seed(fastnbt::de::MapAccess&lt;fastnbt::input::Reader&lt;flate2::gz::read::GzDecoder&lt;std::io::buffered::bufreader::BufReader&lt;std::fs::File&gt; &gt; &gt; &gt;*, core::marker::PhantomData&lt;alloc::string::String&gt;, core::marker::PhantomData&lt;enum2$ (5 samples, 0.02%)</title><rect x="15.8054%" y="485" width="0.0205%" height="15" fill="rgb(235,212,8)" fg:x="3863" fg:w="5"/><text x="16.0554%" y="495.50"></text></g><g><title>rust.exe`fastnbt::de::impl$7::deserialize_any&lt;fastnbt::input::Reader&lt;flate2::gz::read::GzDecoder&lt;std::io::buffered::bufreader::BufReader&lt;std::fs::File&gt; &gt; &gt;,fastnbt::value::de::impl$0::deserialize::ValueVisitor&gt;(fastnbt::de::AnonymousValue&lt;fastnbt::input::Reader&lt;flate2::gz::read::GzDecoder&lt;std::io::buffered::bufreader::BufReader (5 samples, 0.02%)</title><rect x="15.8054%" y="469" width="0.0205%" height="15" fill="rgb(223,33,50)" fg:x="3863" fg:w="5"/><text x="16.0554%" y="479.50"></text></g><g><title>rust.exe`fastnbt::value::de::impl$0::deserialize::impl$0::visit_seq&lt;fastnbt::de::ListAccess&lt;fastnbt::input::Reader&lt;flate2::gz::read::GzDecoder&lt;std::io::buffered::bufreader::BufReader&lt;std::fs::File&gt; &gt; &gt; &gt; &gt;(fastnbt::value::de::impl$0::deserialize::ValueVisitor, fastnbt::de::ListAccess&lt;fastnbt::input::Reader&lt;flate2::gz::read::GzDecoder&lt;std::io::buffered::bufreader::BufReader (5 samples, 0.02%)</title><rect x="15.8054%" y="453" width="0.0205%" height="15" fill="rgb(219,149,13)" fg:x="3863" fg:w="5"/><text x="16.0554%" y="463.50"></text></g><g><title>rust.exe`serde::de::SeqAccess::next_element(fastnbt::de::ListAccess&lt;fastnbt::input::Reader&lt;flate2::gz::read::GzDecoder&lt;std::io::buffered::bufreader::BufReader (4 samples, 0.02%)</title><rect x="15.8095%" y="437" width="0.0164%" height="15" fill="rgb(250,156,29)" fg:x="3864" fg:w="4"/><text x="16.0595%" y="447.50"></text></g><g><title>rust.exe`fastnbt::de::impl$8::next_element_seed(fastnbt::de::ListAccess&lt;fastnbt::input::Reader&lt;flate2::gz::read::GzDecoder&lt;std::io::buffered::bufreader::BufReader&lt;std::fs::File&gt; &gt; &gt; &gt;*, core::marker::PhantomData&lt;enum2$ (4 samples, 0.02%)</title><rect x="15.8095%" y="421" width="0.0164%" height="15" fill="rgb(216,193,19)" fg:x="3864" fg:w="4"/><text x="16.0595%" y="431.50"></text></g><g><title>rust.exe`enum2$&lt;core::result::Result&lt;enum2$&lt;fastnbt::value::Value&gt;,fastnbt::error::Error&gt; &gt;::map(enum2$&lt;core::result::Result&lt;enum2$&lt;fastnbt::value::Value&gt;,fastnbt::error::Error&gt; &gt;, enum2$&lt;core::option::Option&lt;enum2$&lt;fastnbt::value::Value&gt; &gt; &gt; (*)(enum2$ (4 samples, 0.02%)</title><rect x="15.8095%" y="405" width="0.0164%" height="15" fill="rgb(216,135,14)" fg:x="3864" fg:w="4"/><text x="16.0595%" y="415.50"></text></g><g><title>rust.exe`fastnbt::de::impl$7::deserialize_any&lt;fastnbt::input::Reader&lt;flate2::gz::read::GzDecoder&lt;std::io::buffered::bufreader::BufReader&lt;std::fs::File&gt; &gt; &gt;,fastnbt::value::de::impl$0::deserialize::ValueVisitor&gt;(fastnbt::de::AnonymousValue&lt;fastnbt::input::Reader&lt;flate2::gz::read::GzDecoder&lt;std::io::buffered::bufreader::BufReader (4 samples, 0.02%)</title><rect x="15.8095%" y="389" width="0.0164%" height="15" fill="rgb(241,47,5)" fg:x="3864" fg:w="4"/><text x="16.0595%" y="399.50"></text></g><g><title>rust.exe`fastnbt::value::de::impl$0::deserialize::impl$0::visit_map&lt;fastnbt::de::MapAccess&lt;fastnbt::input::Reader&lt;flate2::gz::read::GzDecoder&lt;std::io::buffered::bufreader::BufReader&lt;std::fs::File&gt; &gt; &gt; &gt; &gt;(fastnbt::value::de::impl$0::deserialize::ValueVisitor, fastnbt::de::MapAccess&lt;fastnbt::input::Reader&lt;flate2::gz::read::GzDecoder&lt;std::io::buffered::bufreader::BufReader (4 samples, 0.02%)</title><rect x="15.8095%" y="373" width="0.0164%" height="15" fill="rgb(233,42,35)" fg:x="3864" fg:w="4"/><text x="16.0595%" y="383.50"></text></g><g><title>rust.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;enum2$ (4 samples, 0.02%)</title><rect x="15.8095%" y="357" width="0.0164%" height="15" fill="rgb(231,13,6)" fg:x="3864" fg:w="4"/><text x="16.0595%" y="367.50"></text></g><g><title>rust.exe`fastnbt::de::impl$7::deserialize_any&lt;fastnbt::input::Reader&lt;flate2::gz::read::GzDecoder&lt;std::io::buffered::bufreader::BufReader&lt;std::fs::File&gt; &gt; &gt;,fastnbt::value::de::impl$0::deserialize::ValueVisitor&gt;(fastnbt::de::AnonymousValue&lt;fastnbt::input::Reader&lt;flate2::gz::read::GzDecoder&lt;std::io::buffered::bufreader::BufReader (3 samples, 0.01%)</title><rect x="15.8136%" y="341" width="0.0123%" height="15" fill="rgb(207,181,40)" fg:x="3865" fg:w="3"/><text x="16.0636%" y="351.50"></text></g><g><title>rust.exe`fastnbt::value::de::impl$0::deserialize::impl$0::visit_map&lt;fastnbt::de::MapAccess&lt;fastnbt::input::Reader&lt;flate2::gz::read::GzDecoder&lt;std::io::buffered::bufreader::BufReader&lt;std::fs::File&gt; &gt; &gt; &gt; &gt;(fastnbt::value::de::impl$0::deserialize::ValueVisitor, fastnbt::de::MapAccess&lt;fastnbt::input::Reader&lt;flate2::gz::read::GzDecoder&lt;std::io::buffered::bufreader::BufReader (3 samples, 0.01%)</title><rect x="15.8136%" y="325" width="0.0123%" height="15" fill="rgb(254,173,49)" fg:x="3865" fg:w="3"/><text x="16.0636%" y="335.50"></text></g><g><title>rust.exe`fastnbt::from_reader(flate2::gz::read::GzDecoder&lt;std::io::buffered::bufreader::BufReader (1,660 samples, 6.79%)</title><rect x="9.0381%" y="661" width="6.7919%" height="15" fill="rgb(221,1,38)" fg:x="2209" fg:w="1660"/><text x="9.2881%" y="671.50">rust.exe`..</text></g><g><title>rust.exe`fastnbt::de::impl$3::deserialize_any&lt;fastnbt::input::Reader&lt;flate2::gz::read::GzDecoder&lt;std::io::buffered::bufreader::BufReader&lt;std::fs::File&gt; &gt; &gt;,fastnbt::value::de::impl$0::deserialize::ValueVisitor&gt;(fastnbt::de::Deserializer&lt;fastnbt::input::Reader&lt;flate2::gz::read::GzDecoder&lt;std::io::buffered::bufreader::BufReader (1,660 samples, 6.79%)</title><rect x="9.0381%" y="645" width="6.7919%" height="15" fill="rgb(206,124,46)" fg:x="2209" fg:w="1660"/><text x="9.2881%" y="655.50">rust.exe`..</text></g><g><title>rust.exe`fastnbt::value::de::impl$0::deserialize::impl$0::visit_map&lt;fastnbt::de::MapAccess&lt;fastnbt::input::Reader&lt;flate2::gz::read::GzDecoder&lt;std::io::buffered::bufreader::BufReader&lt;std::fs::File&gt; &gt; &gt; &gt; &gt;(fastnbt::value::de::impl$0::deserialize::ValueVisitor, fastnbt::de::MapAccess&lt;fastnbt::input::Reader&lt;flate2::gz::read::GzDecoder&lt;std::io::buffered::bufreader::BufReader (1,660 samples, 6.79%)</title><rect x="9.0381%" y="629" width="6.7919%" height="15" fill="rgb(249,21,11)" fg:x="2209" fg:w="1660"/><text x="9.2881%" y="639.50">rust.exe`..</text></g><g><title>rust.exe`serde::de::MapAccess::next_entry(fastnbt::de::MapAccess&lt;fastnbt::input::Reader&lt;flate2::gz::read::GzDecoder&lt;std::io::buffered::bufreader::BufReader (1,660 samples, 6.79%)</title><rect x="9.0381%" y="613" width="6.7919%" height="15" fill="rgb(222,201,40)" fg:x="2209" fg:w="1660"/><text x="9.2881%" y="623.50">rust.exe`..</text></g><g><title>rust.exe`serde::de::MapAccess::next_entry_seed(fastnbt::de::MapAccess&lt;fastnbt::input::Reader&lt;flate2::gz::read::GzDecoder&lt;std::io::buffered::bufreader::BufReader&lt;std::fs::File&gt; &gt; &gt; &gt;*, core::marker::PhantomData&lt;alloc::string::String&gt;, core::marker::PhantomData&lt;enum2$ (1,660 samples, 6.79%)</title><rect x="9.0381%" y="597" width="6.7919%" height="15" fill="rgb(235,61,29)" fg:x="2209" fg:w="1660"/><text x="9.2881%" y="607.50">rust.exe`..</text></g><g><title>rust.exe`fastnbt::de::impl$7::deserialize_any&lt;fastnbt::input::Reader&lt;flate2::gz::read::GzDecoder&lt;std::io::buffered::bufreader::BufReader&lt;std::fs::File&gt; &gt; &gt;,fastnbt::value::de::impl$0::deserialize::ValueVisitor&gt;(fastnbt::de::AnonymousValue&lt;fastnbt::input::Reader&lt;flate2::gz::read::GzDecoder&lt;std::io::buffered::bufreader::BufReader (1,660 samples, 6.79%)</title><rect x="9.0381%" y="581" width="6.7919%" height="15" fill="rgb(219,207,3)" fg:x="2209" fg:w="1660"/><text x="9.2881%" y="591.50">rust.exe`..</text></g><g><title>rust.exe`fastnbt::value::de::impl$0::deserialize::impl$0::visit_map&lt;fastnbt::de::MapAccess&lt;fastnbt::input::Reader&lt;flate2::gz::read::GzDecoder&lt;std::io::buffered::bufreader::BufReader&lt;std::fs::File&gt; &gt; &gt; &gt; &gt;(fastnbt::value::de::impl$0::deserialize::ValueVisitor, fastnbt::de::MapAccess&lt;fastnbt::input::Reader&lt;flate2::gz::read::GzDecoder&lt;std::io::buffered::bufreader::BufReader (1,660 samples, 6.79%)</title><rect x="9.0381%" y="565" width="6.7919%" height="15" fill="rgb(222,56,46)" fg:x="2209" fg:w="1660"/><text x="9.2881%" y="575.50">rust.exe`..</text></g><g><title>rust.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;rust::litematica::lm_schematic::LmSchematic,enum2$ (1,663 samples, 6.80%)</title><rect x="9.0340%" y="693" width="6.8041%" height="15" fill="rgb(239,76,54)" fg:x="2208" fg:w="1663"/><text x="9.2840%" y="703.50">rust.exe`..</text></g><g><title>rust.exe`rust::litematica::lm_schematic::LmSchematic::new(ref$ (1,663 samples, 6.80%)</title><rect x="9.0340%" y="677" width="6.8041%" height="15" fill="rgb(231,124,27)" fg:x="2208" fg:w="1663"/><text x="9.2840%" y="687.50">rust.exe`..</text></g><g><title>`0x7FF94C58FF46 (6 samples, 0.02%)</title><rect x="16.0018%" y="597" width="0.0245%" height="15" fill="rgb(249,195,6)" fg:x="3911" fg:w="6"/><text x="16.2518%" y="607.50"></text></g><g><title>`0x7FF94C58FF6E (47 samples, 0.19%)</title><rect x="16.0345%" y="597" width="0.1923%" height="15" fill="rgb(237,174,47)" fg:x="3919" fg:w="47"/><text x="16.2845%" y="607.50"></text></g><g><title>`0x7FF94C58FF76 (29 samples, 0.12%)</title><rect x="16.2268%" y="597" width="0.1187%" height="15" fill="rgb(206,201,31)" fg:x="3966" fg:w="29"/><text x="16.4768%" y="607.50"></text></g><g><title>rust.exe`alloc::vec::impl$11::clone&lt;i64,alloc::alloc::Global&gt;(alloc::vec::Vec (90 samples, 0.37%)</title><rect x="15.9895%" y="661" width="0.3682%" height="15" fill="rgb(231,57,52)" fg:x="3908" fg:w="90"/><text x="16.2395%" y="671.50"></text></g><g><title>rust.exe`alloc::vec::impl$8::deref(alloc::vec::Vec (90 samples, 0.37%)</title><rect x="15.9895%" y="645" width="0.3682%" height="15" fill="rgb(248,177,22)" fg:x="3908" fg:w="90"/><text x="16.2395%" y="655.50"></text></g><g><title>rust.exe`alloc::slice::hack::to_vec(ref$&lt;slice2$ (90 samples, 0.37%)</title><rect x="15.9895%" y="629" width="0.3682%" height="15" fill="rgb(215,211,37)" fg:x="3908" fg:w="90"/><text x="16.2395%" y="639.50"></text></g><g><title>rust.exe`alloc::slice::hack::impl$1::to_vec(ref$&lt;slice2$ (90 samples, 0.37%)</title><rect x="15.9895%" y="613" width="0.3682%" height="15" fill="rgb(241,128,51)" fg:x="3908" fg:w="90"/><text x="16.2395%" y="623.50"></text></g><g><title>rust.exe`alloc::sync::Arc&lt;rust::utils::block_state_pos_list::BlockData,alloc::alloc::Global&gt;::inner (5 samples, 0.02%)</title><rect x="41.8845%" y="645" width="0.0205%" height="15" fill="rgb(227,165,31)" fg:x="10237" fg:w="5"/><text x="42.1345%" y="655.50"></text></g><g><title>rust.exe`core::sync::atomic::atomic_add (3 samples, 0.01%)</title><rect x="41.8927%" y="629" width="0.0123%" height="15" fill="rgb(228,167,24)" fg:x="10239" fg:w="3"/><text x="42.1427%" y="639.50"></text></g><g><title>rust.exe`alloc::vec::Vec&lt;alloc::sync::Arc&lt;rust::utils::block_state_pos_list::BlockData,alloc::alloc::Global&gt;,alloc::alloc::Global&gt;::as_slice (4 samples, 0.02%)</title><rect x="41.9050%" y="629" width="0.0164%" height="15" fill="rgb(228,143,12)" fg:x="10242" fg:w="4"/><text x="42.1550%" y="639.50"></text></g><g><title>rust.exe`alloc::vec::impl$13::index(alloc::vec::Vec&lt;alloc::sync::Arc (6,318 samples, 25.85%)</title><rect x="16.3578%" y="661" width="25.8500%" height="15" fill="rgb(249,149,8)" fg:x="3998" fg:w="6318"/><text x="16.6078%" y="671.50">rust.exe`alloc::vec::impl$13::index(alloc..</text></g><g><title>rust.exe`alloc::vec::impl$8::deref(alloc::vec::Vec&lt;alloc::sync::Arc (74 samples, 0.30%)</title><rect x="41.9050%" y="645" width="0.3028%" height="15" fill="rgb(243,35,44)" fg:x="10242" fg:w="74"/><text x="42.1550%" y="655.50"></text></g><g><title>rust.exe`core::slice::index::impl$2::index(unsigned long long, ref$&lt;slice2$&lt;alloc::sync::Arc (70 samples, 0.29%)</title><rect x="41.9214%" y="629" width="0.2864%" height="15" fill="rgb(246,89,9)" fg:x="10246" fg:w="70"/><text x="42.1714%" y="639.50"></text></g><g><title>rust.exe`core::ptr::drop_in_place(alloc::vec::Vec&lt;alloc::sync::Arc (3 samples, 0.01%)</title><rect x="42.2119%" y="661" width="0.0123%" height="15" fill="rgb(233,213,13)" fg:x="10317" fg:w="3"/><text x="42.4619%" y="671.50"></text></g><g><title>rust.exe`std::sync::poison::Flag::done (10 samples, 0.04%)</title><rect x="42.2241%" y="629" width="0.0409%" height="15" fill="rgb(233,141,41)" fg:x="10320" fg:w="10"/><text x="42.4741%" y="639.50"></text></g><g><title>rust.exe`std::thread::panicking (10 samples, 0.04%)</title><rect x="42.2241%" y="613" width="0.0409%" height="15" fill="rgb(239,167,4)" fg:x="10320" fg:w="10"/><text x="42.4741%" y="623.50"></text></g><g><title>rust.exe`std::panicking::panicking (10 samples, 0.04%)</title><rect x="42.2241%" y="597" width="0.0409%" height="15" fill="rgb(209,217,16)" fg:x="10320" fg:w="10"/><text x="42.4741%" y="607.50"></text></g><g><title>rust.exe`std::panicking::panic_count::count_is_zero (10 samples, 0.04%)</title><rect x="42.2241%" y="581" width="0.0409%" height="15" fill="rgb(219,88,35)" fg:x="10320" fg:w="10"/><text x="42.4741%" y="591.50"></text></g><g><title>rust.exe`core::ptr::drop_in_place(std::sync::poison::mutex::MutexGuard (2,134 samples, 8.73%)</title><rect x="42.2241%" y="661" width="8.7312%" height="15" fill="rgb(220,193,23)" fg:x="10320" fg:w="2134"/><text x="42.4741%" y="671.50">rust.exe`cor..</text></g><g><title>rust.exe`std::sync::poison::mutex::impl$14::drop(std::sync::poison::mutex::MutexGuard (2,134 samples, 8.73%)</title><rect x="42.2241%" y="645" width="8.7312%" height="15" fill="rgb(230,90,52)" fg:x="10320" fg:w="2134"/><text x="42.4741%" y="655.50">rust.exe`std..</text></g><g><title>rust.exe`std::sys::sync::mutex::futex::Mutex::unlock (2,124 samples, 8.69%)</title><rect x="42.2650%" y="629" width="8.6903%" height="15" fill="rgb(252,106,19)" fg:x="10330" fg:w="2124"/><text x="42.5150%" y="639.50">rust.exe`std..</text></g><g><title>rust.exe`core::ptr::drop_in_place (3 samples, 0.01%)</title><rect x="50.9554%" y="661" width="0.0123%" height="15" fill="rgb(206,74,20)" fg:x="12454" fg:w="3"/><text x="51.2054%" y="671.50"></text></g><g><title>rust.exe`core::ptr::drop_in_place(std::collections::hash::map::HashMap (3 samples, 0.01%)</title><rect x="50.9554%" y="645" width="0.0123%" height="15" fill="rgb(230,138,44)" fg:x="12454" fg:w="3"/><text x="51.2054%" y="655.50"></text></g><g><title>rust.exe`core::ptr::drop_in_place(hashbrown::map::HashMap (3 samples, 0.01%)</title><rect x="50.9554%" y="629" width="0.0123%" height="15" fill="rgb(235,182,43)" fg:x="12454" fg:w="3"/><text x="51.2054%" y="639.50"></text></g><g><title>rust.exe`core::ptr::drop_in_place(hashbrown::raw::RawTable&lt;tuple$ (3 samples, 0.01%)</title><rect x="50.9554%" y="613" width="0.0123%" height="15" fill="rgb(242,16,51)" fg:x="12454" fg:w="3"/><text x="51.2054%" y="623.50"></text></g><g><title>rust.exe`hashbrown::raw::impl$18::drop&lt;tuple$&lt;alloc::string::String,rust::litematica::lm_schematic_data::RegionData&gt;,alloc::alloc::Global&gt;(hashbrown::raw::RawTable&lt;tuple$ (3 samples, 0.01%)</title><rect x="50.9554%" y="597" width="0.0123%" height="15" fill="rgb(248,9,4)" fg:x="12454" fg:w="3"/><text x="51.2054%" y="607.50"></text></g><g><title>rust.exe`hashbrown::raw::RawTableInner::drop_inner_table (3 samples, 0.01%)</title><rect x="50.9554%" y="581" width="0.0123%" height="15" fill="rgb(210,31,22)" fg:x="12454" fg:w="3"/><text x="51.2054%" y="591.50"></text></g><g><title>rust.exe`hashbrown::raw::RawTableInner::drop_elements (3 samples, 0.01%)</title><rect x="50.9554%" y="565" width="0.0123%" height="15" fill="rgb(239,54,39)" fg:x="12454" fg:w="3"/><text x="51.2054%" y="575.50"></text></g><g><title>rust.exe`hashbrown::raw::Bucket&lt;tuple$&lt;alloc::string::String,rust::litematica::lm_schematic_data::RegionData&gt; &gt;::drop (3 samples, 0.01%)</title><rect x="50.9554%" y="549" width="0.0123%" height="15" fill="rgb(230,99,41)" fg:x="12454" fg:w="3"/><text x="51.2054%" y="559.50"></text></g><g><title>rust.exe`core::ptr::mut_ptr::impl$0::drop_in_place(tuple$ (3 samples, 0.01%)</title><rect x="50.9554%" y="533" width="0.0123%" height="15" fill="rgb(253,106,12)" fg:x="12454" fg:w="3"/><text x="51.2054%" y="543.50"></text></g><g><title>rust.exe`core::ptr::drop_in_place(tuple$ (3 samples, 0.01%)</title><rect x="50.9554%" y="517" width="0.0123%" height="15" fill="rgb(213,46,41)" fg:x="12454" fg:w="3"/><text x="51.2054%" y="527.50"></text></g><g><title>rust.exe`core::ptr::drop_in_place&lt;rust::litematica::lm_schematic_data::RegionData&gt; (3 samples, 0.01%)</title><rect x="50.9554%" y="501" width="0.0123%" height="15" fill="rgb(215,133,35)" fg:x="12454" fg:w="3"/><text x="51.2054%" y="511.50"></text></g><g><title>rust.exe`core::ptr::drop_in_place(alloc::vec::Vec&lt;enum2$ (3 samples, 0.01%)</title><rect x="50.9554%" y="485" width="0.0123%" height="15" fill="rgb(213,28,5)" fg:x="12454" fg:w="3"/><text x="51.2054%" y="495.50"></text></g><g><title>rust.exe`alloc::vec::impl$25::drop(alloc::vec::Vec&lt;enum2$ (3 samples, 0.01%)</title><rect x="50.9554%" y="469" width="0.0123%" height="15" fill="rgb(215,77,49)" fg:x="12454" fg:w="3"/><text x="51.2054%" y="479.50"></text></g><g><title>rust.exe`rust::litematica::lm_schematic::LmSchematic::get_block_state(int, int, int, rust::utils::block_state_pos_list::BlockPos, int, ref$&lt;slice2$ (100 samples, 0.41%)</title><rect x="50.9676%" y="661" width="0.4091%" height="15" fill="rgb(248,100,22)" fg:x="12457" fg:w="100"/><text x="51.2176%" y="671.50"></text></g><g><title>rust.exe`rust::litematica::lm_schematic::LmSchematic::get_at(long long, int, ref$&lt;slice2$ (99 samples, 0.41%)</title><rect x="50.9717%" y="645" width="0.4051%" height="15" fill="rgb(208,67,9)" fg:x="12458" fg:w="99"/><text x="51.2217%" y="655.50"></text></g><g><title>rust.exe`core::num::impl$3::wrapping_mul (25 samples, 0.10%)</title><rect x="51.2745%" y="629" width="0.1023%" height="15" fill="rgb(219,133,21)" fg:x="12532" fg:w="25"/><text x="51.5245%" y="639.50"></text></g><g><title>rust.exe`alloc::vec::impl$8::deref(alloc::vec::Vec&lt;enum2$ (3 samples, 0.01%)</title><rect x="51.3809%" y="645" width="0.0123%" height="15" fill="rgb(246,46,29)" fg:x="12558" fg:w="3"/><text x="51.6309%" y="655.50"></text></g><g><title>`0x7FF94C58FF41 (5 samples, 0.02%)</title><rect x="51.4054%" y="533" width="0.0205%" height="15" fill="rgb(246,185,52)" fg:x="12564" fg:w="5"/><text x="51.6554%" y="543.50"></text></g><g><title>`0x7FF94C58FF46 (13 samples, 0.05%)</title><rect x="51.4259%" y="533" width="0.0532%" height="15" fill="rgb(252,136,11)" fg:x="12569" fg:w="13"/><text x="51.6759%" y="543.50"></text></g><g><title>`0x7FF94C58FF66 (3 samples, 0.01%)</title><rect x="51.4873%" y="533" width="0.0123%" height="15" fill="rgb(219,138,53)" fg:x="12584" fg:w="3"/><text x="51.7373%" y="543.50"></text></g><g><title>`0x7FF94C58FF6E (45 samples, 0.18%)</title><rect x="51.4995%" y="533" width="0.1841%" height="15" fill="rgb(211,51,23)" fg:x="12587" fg:w="45"/><text x="51.7495%" y="543.50"></text></g><g><title>`0x7FF94C58FF76 (15 samples, 0.06%)</title><rect x="51.6836%" y="533" width="0.0614%" height="15" fill="rgb(247,221,28)" fg:x="12632" fg:w="15"/><text x="51.9336%" y="543.50"></text></g><g><title>rust.exe`rust::litematica::lm_schematic::LmSchematic::process_regions (92 samples, 0.38%)</title><rect x="51.3809%" y="661" width="0.3764%" height="15" fill="rgb(251,222,45)" fg:x="12558" fg:w="92"/><text x="51.6309%" y="671.50"></text></g><g><title>rust.exe`fastnbt::arrays::impl$24::clone (89 samples, 0.36%)</title><rect x="51.3932%" y="645" width="0.3641%" height="15" fill="rgb(217,162,53)" fg:x="12561" fg:w="89"/><text x="51.6432%" y="655.50"></text></g><g><title>rust.exe`alloc::vec::impl$11::clone(alloc::vec::Vec (89 samples, 0.36%)</title><rect x="51.3932%" y="629" width="0.3641%" height="15" fill="rgb(229,93,14)" fg:x="12561" fg:w="89"/><text x="51.6432%" y="639.50"></text></g><g><title>rust.exe`alloc::vec::impl$8::deref(alloc::vec::Vec (89 samples, 0.36%)</title><rect x="51.3932%" y="613" width="0.3641%" height="15" fill="rgb(209,67,49)" fg:x="12561" fg:w="89"/><text x="51.6432%" y="623.50"></text></g><g><title>rust.exe`alloc::slice::hack::to_vec(ref$&lt;slice2$ (89 samples, 0.36%)</title><rect x="51.3932%" y="597" width="0.3641%" height="15" fill="rgb(213,87,29)" fg:x="12561" fg:w="89"/><text x="51.6432%" y="607.50"></text></g><g><title>rust.exe`alloc::slice::hack::impl$1::to_vec(ref$&lt;slice2$ (89 samples, 0.36%)</title><rect x="51.3932%" y="581" width="0.3641%" height="15" fill="rgb(205,151,52)" fg:x="12561" fg:w="89"/><text x="51.6432%" y="591.50"></text></g><g><title>rust.exe`core::ptr::const_ptr::impl$0::copy_to_nonoverlapping (89 samples, 0.36%)</title><rect x="51.3932%" y="565" width="0.3641%" height="15" fill="rgb(253,215,39)" fg:x="12561" fg:w="89"/><text x="51.6432%" y="575.50"></text></g><g><title>rust.exe`core::intrinsics::copy_nonoverlapping (89 samples, 0.36%)</title><rect x="51.3932%" y="549" width="0.3641%" height="15" fill="rgb(221,220,41)" fg:x="12561" fg:w="89"/><text x="51.6432%" y="559.50"></text></g><g><title>`0x7FF96D651BFD (3 samples, 0.01%)</title><rect x="51.8146%" y="405" width="0.0123%" height="15" fill="rgb(218,133,21)" fg:x="12664" fg:w="3"/><text x="52.0646%" y="415.50"></text></g><g><title>`0x7FF96D662B99 (3 samples, 0.01%)</title><rect x="51.8146%" y="389" width="0.0123%" height="15" fill="rgb(221,193,43)" fg:x="12664" fg:w="3"/><text x="52.0646%" y="399.50"></text></g><g><title>`0x7FF96D627DBE (3 samples, 0.01%)</title><rect x="51.8146%" y="373" width="0.0123%" height="15" fill="rgb(240,128,52)" fg:x="12664" fg:w="3"/><text x="52.0646%" y="383.50"></text></g><g><title>`0x7FF96D7818D3 (1,225 samples, 5.01%)</title><rect x="51.8350%" y="389" width="5.0121%" height="15" fill="rgb(253,114,12)" fg:x="12669" fg:w="1225"/><text x="52.0850%" y="399.50">`0x7FF..</text></g><g><title>`0x7FF96D7818D7 (645 samples, 2.64%)</title><rect x="56.8471%" y="389" width="2.6390%" height="15" fill="rgb(215,223,47)" fg:x="13894" fg:w="645"/><text x="57.0971%" y="399.50">`0..</text></g><g><title>`0x7FF96D7818DB (11 samples, 0.05%)</title><rect x="59.4861%" y="389" width="0.0450%" height="15" fill="rgb(248,225,23)" fg:x="14539" fg:w="11"/><text x="59.7361%" y="399.50"></text></g><g><title>`0x7FF96D7818E7 (59 samples, 0.24%)</title><rect x="59.5352%" y="389" width="0.2414%" height="15" fill="rgb(250,108,0)" fg:x="14551" fg:w="59"/><text x="59.7852%" y="399.50"></text></g><g><title>`0x7FF96D7818EB (300 samples, 1.23%)</title><rect x="59.7766%" y="389" width="1.2274%" height="15" fill="rgb(228,208,7)" fg:x="14610" fg:w="300"/><text x="60.0266%" y="399.50"></text></g><g><title>`0x7FF96D651D19 (2,523 samples, 10.32%)</title><rect x="51.8268%" y="405" width="10.3228%" height="15" fill="rgb(244,45,10)" fg:x="12667" fg:w="2523"/><text x="52.0768%" y="415.50">`0x7FF96D651D19</text></g><g><title>`0x7FF96D7818EF (280 samples, 1.15%)</title><rect x="61.0041%" y="389" width="1.1456%" height="15" fill="rgb(207,125,25)" fg:x="14910" fg:w="280"/><text x="61.2541%" y="399.50"></text></g><g><title>rust.exe`alloc::vec::Vec&lt;rust::utils::block_state_pos_list::BlockStatePos,alloc::alloc::Global&gt;::as_mut_ptr (2,544 samples, 10.41%)</title><rect x="51.7818%" y="629" width="10.4087%" height="15" fill="rgb(210,195,18)" fg:x="12656" fg:w="2544"/><text x="52.0318%" y="639.50">rust.exe`alloc:..</text></g><g><title>rust.exe`alloc::raw_vec::RawVec&lt;rust::utils::block_state_pos_list::BlockStatePos,alloc::alloc::Global&gt;::ptr (2,543 samples, 10.40%)</title><rect x="51.7859%" y="613" width="10.4046%" height="15" fill="rgb(249,80,12)" fg:x="12657" fg:w="2543"/><text x="52.0359%" y="623.50">rust.exe`alloc:..</text></g><g><title>rust.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::ptr (2,543 samples, 10.40%)</title><rect x="51.7859%" y="597" width="10.4046%" height="15" fill="rgb(221,65,9)" fg:x="12657" fg:w="2543"/><text x="52.0359%" y="607.50">rust.exe`alloc:..</text></g><g><title>rust.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::non_null (2,543 samples, 10.40%)</title><rect x="51.7859%" y="581" width="10.4046%" height="15" fill="rgb(235,49,36)" fg:x="12657" fg:w="2543"/><text x="52.0359%" y="591.50">rust.exe`alloc:..</text></g><g><title>rust.exe`alloc::raw_vec::RawVec&lt;rust::utils::block_state_pos_list::BlockStatePos,alloc::alloc::Global&gt;::grow_one&lt;rust::utils::block_state_pos_list::BlockStatePos,alloc::alloc::Global&gt; (2,536 samples, 10.38%)</title><rect x="51.8146%" y="565" width="10.3760%" height="15" fill="rgb(225,32,20)" fg:x="12664" fg:w="2536"/><text x="52.0646%" y="575.50">rust.exe`alloc:..</text></g><g><title>rust.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::grow_one (2,536 samples, 10.38%)</title><rect x="51.8146%" y="549" width="10.3760%" height="15" fill="rgb(215,141,46)" fg:x="12664" fg:w="2536"/><text x="52.0646%" y="559.50">rust.exe`alloc:..</text></g><g><title>rust.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::grow_amortized (2,536 samples, 10.38%)</title><rect x="51.8146%" y="533" width="10.3760%" height="15" fill="rgb(250,160,47)" fg:x="12664" fg:w="2536"/><text x="52.0646%" y="543.50">rust.exe`alloc:..</text></g><g><title>rust.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull&lt;slice2$ (2,536 samples, 10.38%)</title><rect x="51.8146%" y="517" width="10.3760%" height="15" fill="rgb(216,222,40)" fg:x="12664" fg:w="2536"/><text x="52.0646%" y="527.50">rust.exe`core::..</text></g><g><title>rust.exe`alloc::raw_vec::finish_grow&lt;alloc::alloc::Global&gt;(core::alloc::layout::Layout, enum2$&lt;core::option::Option&lt;tuple$&lt;core::ptr::non_null::NonNull (2,536 samples, 10.38%)</title><rect x="51.8146%" y="501" width="10.3760%" height="15" fill="rgb(234,217,39)" fg:x="12664" fg:w="2536"/><text x="52.0646%" y="511.50">rust.exe`alloc:..</text></g><g><title>rust.exe`alloc::alloc::impl$1::grow(alloc::alloc::Global*, core::ptr::non_null::NonNull (2,536 samples, 10.38%)</title><rect x="51.8146%" y="485" width="10.3760%" height="15" fill="rgb(207,178,40)" fg:x="12664" fg:w="2536"/><text x="52.0646%" y="495.50">rust.exe`alloc:..</text></g><g><title>rust.exe`alloc::alloc::Global::grow_impl(core::ptr::non_null::NonNull (2,536 samples, 10.38%)</title><rect x="51.8146%" y="469" width="10.3760%" height="15" fill="rgb(221,136,13)" fg:x="12664" fg:w="2536"/><text x="52.0646%" y="479.50">rust.exe`alloc:..</text></g><g><title>rust.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;core::ptr::non_null::NonNull (2,536 samples, 10.38%)</title><rect x="51.8146%" y="453" width="10.3760%" height="15" fill="rgb(249,199,10)" fg:x="12664" fg:w="2536"/><text x="52.0646%" y="463.50">rust.exe`core::..</text></g><g><title>`0x7FF96D6C500C (2,536 samples, 10.38%)</title><rect x="51.8146%" y="437" width="10.3760%" height="15" fill="rgb(249,222,13)" fg:x="12664" fg:w="2536"/><text x="52.0646%" y="447.50">`0x7FF96D6C500C</text></g><g><title>`0x7FF96D650DC5 (2,536 samples, 10.38%)</title><rect x="51.8146%" y="421" width="10.3760%" height="15" fill="rgb(244,185,38)" fg:x="12664" fg:w="2536"/><text x="52.0646%" y="431.50">`0x7FF96D650DC5</text></g><g><title>`0x7FF96D651D2C (10 samples, 0.04%)</title><rect x="62.1497%" y="405" width="0.0409%" height="15" fill="rgb(236,202,9)" fg:x="15190" fg:w="10"/><text x="62.3997%" y="415.50"></text></g><g><title>`0x7FF96D64FA02 (10 samples, 0.04%)</title><rect x="62.1497%" y="389" width="0.0409%" height="15" fill="rgb(250,229,37)" fg:x="15190" fg:w="10"/><text x="62.3997%" y="399.50"></text></g><g><title>`0x7FF96D62C2ED (10 samples, 0.04%)</title><rect x="62.1497%" y="373" width="0.0409%" height="15" fill="rgb(206,174,23)" fg:x="15190" fg:w="10"/><text x="62.3997%" y="383.50"></text></g><g><title>`0x7FF96D68F6EF (10 samples, 0.04%)</title><rect x="62.1497%" y="357" width="0.0409%" height="15" fill="rgb(211,33,43)" fg:x="15190" fg:w="10"/><text x="62.3997%" y="367.50"></text></g><g><title>`0x7FF96D77C374 (10 samples, 0.04%)</title><rect x="62.1497%" y="341" width="0.0409%" height="15" fill="rgb(245,58,50)" fg:x="15190" fg:w="10"/><text x="62.3997%" y="351.50"></text></g><g><title>rust.exe`alloc::vec::Vec&lt;rust::utils::block_state_pos_list::BlockStatePos,alloc::alloc::Global&gt;::push (6,072 samples, 24.84%)</title><rect x="51.7573%" y="645" width="24.8435%" height="15" fill="rgb(244,68,36)" fg:x="12650" fg:w="6072"/><text x="52.0073%" y="655.50">rust.exe`alloc::vec::Vec&lt;rust::utils::bl..</text></g><g><title>rust.exe`core::ptr::write (3,522 samples, 14.41%)</title><rect x="62.1906%" y="629" width="14.4102%" height="15" fill="rgb(232,229,15)" fg:x="15200" fg:w="3522"/><text x="62.4406%" y="639.50">rust.exe`core::ptr::wr..</text></g><g><title>rust.exe`rust::utils::block_state_pos_list::BlockStatePosList::add_by_pos(int, int, int, alloc::sync::Arc (6,076 samples, 24.86%)</title><rect x="51.7573%" y="661" width="24.8599%" height="15" fill="rgb(254,30,23)" fg:x="12650" fg:w="6076"/><text x="52.0073%" y="671.50">rust.exe`rust::utils::block_state_pos_li..</text></g><g><title>rust.exe`rust::utils::block_state_pos_list::BlockStatePos::new(rust::utils::block_state_pos_list::BlockPos, alloc::sync::Arc (4 samples, 0.02%)</title><rect x="76.6008%" y="645" width="0.0164%" height="15" fill="rgb(235,160,14)" fg:x="18722" fg:w="4"/><text x="76.8508%" y="655.50"></text></g><g><title>rust.exe`std::sync::poison::mutex::MutexGuard&lt;rust::utils::block_state_pos_list::BlockStatePosList&gt;::new(std::sync::poison::mutex::Mutex (22 samples, 0.09%)</title><rect x="76.6172%" y="645" width="0.0900%" height="15" fill="rgb(212,155,44)" fg:x="18726" fg:w="22"/><text x="76.8672%" y="655.50"></text></g><g><title>rust.exe`std::sync::poison::Flag::guard (22 samples, 0.09%)</title><rect x="76.6172%" y="629" width="0.0900%" height="15" fill="rgb(226,2,50)" fg:x="18726" fg:w="22"/><text x="76.8672%" y="639.50"></text></g><g><title>rust.exe`std::thread::panicking (19 samples, 0.08%)</title><rect x="76.6294%" y="613" width="0.0777%" height="15" fill="rgb(234,177,6)" fg:x="18729" fg:w="19"/><text x="76.8794%" y="623.50"></text></g><g><title>rust.exe`std::panicking::panicking (19 samples, 0.08%)</title><rect x="76.6294%" y="597" width="0.0777%" height="15" fill="rgb(217,24,9)" fg:x="18729" fg:w="19"/><text x="76.8794%" y="607.50"></text></g><g><title>rust.exe`std::panicking::panic_count::count_is_zero (19 samples, 0.08%)</title><rect x="76.6294%" y="581" width="0.0777%" height="15" fill="rgb(220,13,46)" fg:x="18729" fg:w="19"/><text x="76.8794%" y="591.50"></text></g><g><title>rust.exe`core::sync::atomic::AtomicUsize::load (18 samples, 0.07%)</title><rect x="76.6335%" y="565" width="0.0736%" height="15" fill="rgb(239,221,27)" fg:x="18730" fg:w="18"/><text x="76.8835%" y="575.50"></text></g><g><title>rust.exe`core::sync::atomic::atomic_load (18 samples, 0.07%)</title><rect x="76.6335%" y="549" width="0.0736%" height="15" fill="rgb(222,198,25)" fg:x="18730" fg:w="18"/><text x="76.8835%" y="559.50"></text></g><g><title>rust.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;rust::utils::schematic_data::SchematicData,enum2$ (16,778 samples, 68.65%)</title><rect x="15.8381%" y="693" width="68.6469%" height="15" fill="rgb(211,99,13)" fg:x="3871" fg:w="16778"/><text x="16.0881%" y="703.50">rust.exe`core::result::impl$26::branch(enum2$&lt;core::result::Result&lt;rust::utils::schematic_data::SchematicData,enum..</text></g><g><title>rust.exe`rust::litematica::lm_schematic::LmSchematic::get_blocks_pos (16,778 samples, 68.65%)</title><rect x="15.8381%" y="677" width="68.6469%" height="15" fill="rgb(232,111,31)" fg:x="3871" fg:w="16778"/><text x="16.0881%" y="687.50">rust.exe`rust::litematica::lm_schematic::LmSchematic::get_blocks_pos</text></g><g><title>rust.exe`std::sync::poison::mutex::Mutex&lt;rust::utils::block_state_pos_list::BlockStatePosList&gt;::lock (1,923 samples, 7.87%)</title><rect x="76.6172%" y="661" width="7.8679%" height="15" fill="rgb(245,82,37)" fg:x="18726" fg:w="1923"/><text x="76.8672%" y="671.50">rust.exe`st..</text></g><g><title>rust.exe`std::sys::sync::mutex::futex::Mutex::lock (1,901 samples, 7.78%)</title><rect x="76.7072%" y="645" width="7.7779%" height="15" fill="rgb(227,149,46)" fg:x="18748" fg:w="1901"/><text x="76.9572%" y="655.50">rust.exe`st..</text></g><g><title>rust.exe`core::sync::atomic::AtomicU8::compare_exchange (1,901 samples, 7.78%)</title><rect x="76.7072%" y="629" width="7.7779%" height="15" fill="rgb(218,36,50)" fg:x="18748" fg:w="1901"/><text x="76.9572%" y="639.50">rust.exe`co..</text></g><g><title>rust.exe`core::sync::atomic::atomic_compare_exchange (1,901 samples, 7.78%)</title><rect x="76.7072%" y="613" width="7.7779%" height="15" fill="rgb(226,80,48)" fg:x="18748" fg:w="1901"/><text x="76.9572%" y="623.50">rust.exe`co..</text></g><g><title>rust.exe`hashbrown::raw::impl$18::drop&lt;tuple$&lt;alloc::string::String,enum2$&lt;fastnbt::value::Value&gt; &gt;,alloc::alloc::Global&gt;(hashbrown::raw::RawTable&lt;tuple$&lt;alloc::string::String,enum2$ (3 samples, 0.01%)</title><rect x="84.4851%" y="693" width="0.0123%" height="15" fill="rgb(238,224,15)" fg:x="20649" fg:w="3"/><text x="84.7351%" y="703.50"></text></g><g><title>rust.exe`hashbrown::raw::RawTableInner::drop_inner_table (3 samples, 0.01%)</title><rect x="84.4851%" y="677" width="0.0123%" height="15" fill="rgb(241,136,10)" fg:x="20649" fg:w="3"/><text x="84.7351%" y="687.50"></text></g><g><title>rust.exe`hashbrown::raw::RawTableInner::drop_elements (3 samples, 0.01%)</title><rect x="84.4851%" y="661" width="0.0123%" height="15" fill="rgb(208,32,45)" fg:x="20649" fg:w="3"/><text x="84.7351%" y="671.50"></text></g><g><title>rust.exe`hashbrown::raw::Bucket&lt;tuple$&lt;alloc::string::String,enum2$&lt;fastnbt::value::Value&gt; &gt; &gt;::drop (3 samples, 0.01%)</title><rect x="84.4851%" y="645" width="0.0123%" height="15" fill="rgb(207,135,9)" fg:x="20649" fg:w="3"/><text x="84.7351%" y="655.50"></text></g><g><title>rust.exe`core::ptr::mut_ptr::impl$0::drop_in_place(tuple$&lt;alloc::string::String,enum2$ (3 samples, 0.01%)</title><rect x="84.4851%" y="629" width="0.0123%" height="15" fill="rgb(206,86,44)" fg:x="20649" fg:w="3"/><text x="84.7351%" y="639.50"></text></g><g><title>rust.exe`core::ptr::drop_in_place(tuple$&lt;alloc::string::String,enum2$ (3 samples, 0.01%)</title><rect x="84.4851%" y="613" width="0.0123%" height="15" fill="rgb(245,177,15)" fg:x="20649" fg:w="3"/><text x="84.7351%" y="623.50"></text></g><g><title>rust.exe`hashbrown::raw::impl$18::drop&lt;tuple$&lt;alloc::string::String,enum2$&lt;fastnbt::value::Value&gt; &gt;,alloc::alloc::Global&gt;(hashbrown::raw::RawTable&lt;tuple$&lt;alloc::string::String,enum2$ (3 samples, 0.01%)</title><rect x="84.4851%" y="597" width="0.0123%" height="15" fill="rgb(206,64,50)" fg:x="20649" fg:w="3"/><text x="84.7351%" y="607.50"></text></g><g><title>rust.exe`hashbrown::raw::RawTableInner::drop_inner_table (3 samples, 0.01%)</title><rect x="84.4851%" y="581" width="0.0123%" height="15" fill="rgb(234,36,40)" fg:x="20649" fg:w="3"/><text x="84.7351%" y="591.50"></text></g><g><title>rust.exe`hashbrown::raw::RawTableInner::drop_elements (3 samples, 0.01%)</title><rect x="84.4851%" y="565" width="0.0123%" height="15" fill="rgb(213,64,8)" fg:x="20649" fg:w="3"/><text x="84.7351%" y="575.50"></text></g><g><title>rust.exe`hashbrown::raw::Bucket&lt;tuple$&lt;alloc::string::String,enum2$&lt;fastnbt::value::Value&gt; &gt; &gt;::drop (3 samples, 0.01%)</title><rect x="84.4851%" y="549" width="0.0123%" height="15" fill="rgb(210,75,36)" fg:x="20649" fg:w="3"/><text x="84.7351%" y="559.50"></text></g><g><title>rust.exe`core::ptr::mut_ptr::impl$0::drop_in_place(tuple$&lt;alloc::string::String,enum2$ (3 samples, 0.01%)</title><rect x="84.4851%" y="533" width="0.0123%" height="15" fill="rgb(229,88,21)" fg:x="20649" fg:w="3"/><text x="84.7351%" y="543.50"></text></g><g><title>rust.exe`core::ptr::drop_in_place(tuple$&lt;alloc::string::String,enum2$ (3 samples, 0.01%)</title><rect x="84.4851%" y="517" width="0.0123%" height="15" fill="rgb(252,204,47)" fg:x="20649" fg:w="3"/><text x="84.7351%" y="527.50"></text></g><g><title>rust.exe`hashbrown::raw::impl$18::drop&lt;tuple$&lt;alloc::string::String,enum2$&lt;fastnbt::value::Value&gt; &gt;,alloc::alloc::Global&gt;(hashbrown::raw::RawTable&lt;tuple$&lt;alloc::string::String,enum2$ (3 samples, 0.01%)</title><rect x="84.4851%" y="501" width="0.0123%" height="15" fill="rgb(208,77,27)" fg:x="20649" fg:w="3"/><text x="84.7351%" y="511.50"></text></g><g><title>rust.exe`hashbrown::raw::RawTableInner::drop_inner_table (3 samples, 0.01%)</title><rect x="84.4851%" y="485" width="0.0123%" height="15" fill="rgb(221,76,26)" fg:x="20649" fg:w="3"/><text x="84.7351%" y="495.50"></text></g><g><title>rust.exe`hashbrown::raw::RawTableInner::drop_elements (3 samples, 0.01%)</title><rect x="84.4851%" y="469" width="0.0123%" height="15" fill="rgb(225,139,18)" fg:x="20649" fg:w="3"/><text x="84.7351%" y="479.50"></text></g><g><title>rust.exe`hashbrown::raw::Bucket&lt;tuple$&lt;alloc::string::String,enum2$&lt;fastnbt::value::Value&gt; &gt; &gt;::drop (3 samples, 0.01%)</title><rect x="84.4851%" y="453" width="0.0123%" height="15" fill="rgb(230,137,11)" fg:x="20649" fg:w="3"/><text x="84.7351%" y="463.50"></text></g><g><title>rust.exe`core::ptr::mut_ptr::impl$0::drop_in_place(tuple$&lt;alloc::string::String,enum2$ (3 samples, 0.01%)</title><rect x="84.4851%" y="437" width="0.0123%" height="15" fill="rgb(212,28,1)" fg:x="20649" fg:w="3"/><text x="84.7351%" y="447.50"></text></g><g><title>rust.exe`core::ptr::drop_in_place(tuple$&lt;alloc::string::String,enum2$ (3 samples, 0.01%)</title><rect x="84.4851%" y="421" width="0.0123%" height="15" fill="rgb(248,164,17)" fg:x="20649" fg:w="3"/><text x="84.7351%" y="431.50"></text></g><g><title>rust.exe`sysinfo::common::system::RefreshKind::cpu (46 samples, 0.19%)</title><rect x="84.5015%" y="645" width="0.1882%" height="15" fill="rgb(222,171,42)" fg:x="20653" fg:w="46"/><text x="84.7515%" y="655.50"></text></g><g><title>rust.exe`sysinfo::windows::system::SystemInner::refresh_memory_specifics (46 samples, 0.19%)</title><rect x="84.5015%" y="629" width="0.1882%" height="15" fill="rgb(243,84,45)" fg:x="20653" fg:w="46"/><text x="84.7515%" y="639.50"></text></g><g><title>`0x7FF96A8ED1CF (45 samples, 0.18%)</title><rect x="84.5055%" y="613" width="0.1841%" height="15" fill="rgb(252,49,23)" fg:x="20654" fg:w="45"/><text x="84.7555%" y="623.50"></text></g><g><title>`0x7FF96D77C674 (45 samples, 0.18%)</title><rect x="84.5055%" y="597" width="0.1841%" height="15" fill="rgb(215,19,7)" fg:x="20654" fg:w="45"/><text x="84.7555%" y="607.50"></text></g><g><title>`0x7FF96B571FCC (9 samples, 0.04%)</title><rect x="84.6978%" y="389" width="0.0368%" height="15" fill="rgb(238,81,41)" fg:x="20701" fg:w="9"/><text x="84.9478%" y="399.50"></text></g><g><title>`0x7FF96D77C5F4 (9 samples, 0.04%)</title><rect x="84.6978%" y="373" width="0.0368%" height="15" fill="rgb(210,199,37)" fg:x="20701" fg:w="9"/><text x="84.9478%" y="383.50"></text></g><g><title>`0x7FF96B57208F (17 samples, 0.07%)</title><rect x="84.7347%" y="389" width="0.0696%" height="15" fill="rgb(244,192,49)" fg:x="20710" fg:w="17"/><text x="84.9847%" y="399.50"></text></g><g><title>`0x7FF96D77C1F4 (17 samples, 0.07%)</title><rect x="84.7347%" y="373" width="0.0696%" height="15" fill="rgb(226,211,11)" fg:x="20710" fg:w="17"/><text x="84.9847%" y="383.50"></text></g><g><title>`0x7FF96B5720B6 (18 samples, 0.07%)</title><rect x="84.8042%" y="389" width="0.0736%" height="15" fill="rgb(236,162,54)" fg:x="20727" fg:w="18"/><text x="85.0542%" y="399.50"></text></g><g><title>`0x7FF96D77C1F4 (18 samples, 0.07%)</title><rect x="84.8042%" y="373" width="0.0736%" height="15" fill="rgb(220,229,9)" fg:x="20727" fg:w="18"/><text x="85.0542%" y="383.50"></text></g><g><title>`0x7FF96B572711 (5 samples, 0.02%)</title><rect x="84.8779%" y="373" width="0.0205%" height="15" fill="rgb(250,87,22)" fg:x="20745" fg:w="5"/><text x="85.1279%" y="383.50"></text></g><g><title>`0x7FF96D77C294 (5 samples, 0.02%)</title><rect x="84.8779%" y="357" width="0.0205%" height="15" fill="rgb(239,43,17)" fg:x="20745" fg:w="5"/><text x="85.1279%" y="367.50"></text></g><g><title>`0x7FF96B57D2BD (68 samples, 0.28%)</title><rect x="84.6938%" y="421" width="0.2782%" height="15" fill="rgb(231,177,25)" fg:x="20700" fg:w="68"/><text x="84.9438%" y="431.50"></text></g><g><title>`0x7FF96B5AB816 (67 samples, 0.27%)</title><rect x="84.6978%" y="405" width="0.2741%" height="15" fill="rgb(219,179,1)" fg:x="20701" fg:w="67"/><text x="84.9478%" y="415.50"></text></g><g><title>`0x7FF96B5720F6 (23 samples, 0.09%)</title><rect x="84.8779%" y="389" width="0.0941%" height="15" fill="rgb(238,219,53)" fg:x="20745" fg:w="23"/><text x="85.1279%" y="399.50"></text></g><g><title>`0x7FF96B58E74C (4 samples, 0.02%)</title><rect x="84.9720%" y="373" width="0.0164%" height="15" fill="rgb(232,167,36)" fg:x="20768" fg:w="4"/><text x="85.2220%" y="383.50"></text></g><g><title>`0x7FF96A812446 (4 samples, 0.02%)</title><rect x="84.9720%" y="357" width="0.0164%" height="15" fill="rgb(244,19,51)" fg:x="20768" fg:w="4"/><text x="85.2220%" y="367.50"></text></g><g><title>`0x7FF96D639B30 (4 samples, 0.02%)</title><rect x="84.9720%" y="341" width="0.0164%" height="15" fill="rgb(224,6,22)" fg:x="20768" fg:w="4"/><text x="85.2220%" y="351.50"></text></g><g><title>`0x7FF96D675CA0 (4 samples, 0.02%)</title><rect x="84.9720%" y="325" width="0.0164%" height="15" fill="rgb(224,145,5)" fg:x="20768" fg:w="4"/><text x="85.2220%" y="335.50"></text></g><g><title>`0x7FF96D676020 (4 samples, 0.02%)</title><rect x="84.9720%" y="309" width="0.0164%" height="15" fill="rgb(234,130,49)" fg:x="20768" fg:w="4"/><text x="85.2220%" y="319.50"></text></g><g><title>`0x7FF96D66BCF4 (4 samples, 0.02%)</title><rect x="84.9720%" y="293" width="0.0164%" height="15" fill="rgb(254,6,2)" fg:x="20768" fg:w="4"/><text x="85.2220%" y="303.50"></text></g><g><title>`0x7FF96D66C2DD (3 samples, 0.01%)</title><rect x="84.9761%" y="277" width="0.0123%" height="15" fill="rgb(208,96,46)" fg:x="20769" fg:w="3"/><text x="85.2261%" y="287.50"></text></g><g><title>`0x7FF96B58EB90 (4 samples, 0.02%)</title><rect x="84.9883%" y="373" width="0.0164%" height="15" fill="rgb(239,3,39)" fg:x="20772" fg:w="4"/><text x="85.2383%" y="383.50"></text></g><g><title>`0x7FF933DF3D1A (4 samples, 0.02%)</title><rect x="84.9883%" y="357" width="0.0164%" height="15" fill="rgb(233,210,1)" fg:x="20772" fg:w="4"/><text x="85.2383%" y="367.50"></text></g><g><title>`0x7FF933DF3F31 (4 samples, 0.02%)</title><rect x="84.9883%" y="341" width="0.0164%" height="15" fill="rgb(244,137,37)" fg:x="20772" fg:w="4"/><text x="85.2383%" y="351.50"></text></g><g><title>`0x7FF933DF3FA0 (4 samples, 0.02%)</title><rect x="84.9883%" y="325" width="0.0164%" height="15" fill="rgb(240,136,2)" fg:x="20772" fg:w="4"/><text x="85.2383%" y="335.50"></text></g><g><title>`0x7FF933DF5A13 (4 samples, 0.02%)</title><rect x="84.9883%" y="309" width="0.0164%" height="15" fill="rgb(239,18,37)" fg:x="20772" fg:w="4"/><text x="85.2383%" y="319.50"></text></g><g><title>`0x7FF933DF4792 (4 samples, 0.02%)</title><rect x="84.9883%" y="293" width="0.0164%" height="15" fill="rgb(218,185,22)" fg:x="20772" fg:w="4"/><text x="85.2383%" y="303.50"></text></g><g><title>`0x7FF96D6EE386 (4 samples, 0.02%)</title><rect x="84.9883%" y="277" width="0.0164%" height="15" fill="rgb(225,218,4)" fg:x="20772" fg:w="4"/><text x="85.2383%" y="287.50"></text></g><g><title>`0x7FF96D674873 (4 samples, 0.02%)</title><rect x="84.9883%" y="261" width="0.0164%" height="15" fill="rgb(230,182,32)" fg:x="20772" fg:w="4"/><text x="85.2383%" y="271.50"></text></g><g><title>`0x7FF96D676616 (4 samples, 0.02%)</title><rect x="84.9883%" y="245" width="0.0164%" height="15" fill="rgb(242,56,43)" fg:x="20772" fg:w="4"/><text x="85.2383%" y="255.50"></text></g><g><title>`0x7FF96D676020 (4 samples, 0.02%)</title><rect x="84.9883%" y="229" width="0.0164%" height="15" fill="rgb(233,99,24)" fg:x="20772" fg:w="4"/><text x="85.2383%" y="239.50"></text></g><g><title>`0x7FF96D66BCF4 (4 samples, 0.02%)</title><rect x="84.9883%" y="213" width="0.0164%" height="15" fill="rgb(234,209,42)" fg:x="20772" fg:w="4"/><text x="85.2383%" y="223.50"></text></g><g><title>`0x7FF94BFEDE28 (77 samples, 0.32%)</title><rect x="84.6938%" y="533" width="0.3150%" height="15" fill="rgb(227,7,12)" fg:x="20700" fg:w="77"/><text x="84.9438%" y="543.50"></text></g><g><title>`0x7FF94BFEC249 (77 samples, 0.32%)</title><rect x="84.6938%" y="517" width="0.3150%" height="15" fill="rgb(245,203,43)" fg:x="20700" fg:w="77"/><text x="84.9438%" y="527.50"></text></g><g><title>`0x7FF94BFE2A3A (77 samples, 0.32%)</title><rect x="84.6938%" y="501" width="0.3150%" height="15" fill="rgb(238,205,33)" fg:x="20700" fg:w="77"/><text x="84.9438%" y="511.50"></text></g><g><title>`0x7FF94BFE4255 (77 samples, 0.32%)</title><rect x="84.6938%" y="485" width="0.3150%" height="15" fill="rgb(231,56,7)" fg:x="20700" fg:w="77"/><text x="84.9438%" y="495.50"></text></g><g><title>`0x7FF96A82C64B (77 samples, 0.32%)</title><rect x="84.6938%" y="469" width="0.3150%" height="15" fill="rgb(244,186,29)" fg:x="20700" fg:w="77"/><text x="84.9438%" y="479.50"></text></g><g><title>`0x7FF96A84217F (77 samples, 0.32%)</title><rect x="84.6938%" y="453" width="0.3150%" height="15" fill="rgb(234,111,31)" fg:x="20700" fg:w="77"/><text x="84.9438%" y="463.50"></text></g><g><title>`0x7FF96B57D15B (77 samples, 0.32%)</title><rect x="84.6938%" y="437" width="0.3150%" height="15" fill="rgb(241,149,10)" fg:x="20700" fg:w="77"/><text x="84.9438%" y="447.50"></text></g><g><title>`0x7FF96B57DD43 (9 samples, 0.04%)</title><rect x="84.9720%" y="421" width="0.0368%" height="15" fill="rgb(249,206,44)" fg:x="20768" fg:w="9"/><text x="85.2220%" y="431.50"></text></g><g><title>`0x7FF96B551D27 (9 samples, 0.04%)</title><rect x="84.9720%" y="405" width="0.0368%" height="15" fill="rgb(251,153,30)" fg:x="20768" fg:w="9"/><text x="85.2220%" y="415.50"></text></g><g><title>`0x7FF96B5523E7 (9 samples, 0.04%)</title><rect x="84.9720%" y="389" width="0.0368%" height="15" fill="rgb(239,152,38)" fg:x="20768" fg:w="9"/><text x="85.2220%" y="399.50"></text></g><g><title>`0x7FF96B559BF6 (3 samples, 0.01%)</title><rect x="85.0252%" y="453" width="0.0123%" height="15" fill="rgb(249,139,47)" fg:x="20781" fg:w="3"/><text x="85.2752%" y="463.50"></text></g><g><title>`0x7FF96D77C5F4 (3 samples, 0.01%)</title><rect x="85.0252%" y="437" width="0.0123%" height="15" fill="rgb(244,64,35)" fg:x="20781" fg:w="3"/><text x="85.2752%" y="447.50"></text></g><g><title>`0x7FF96B55424F (3 samples, 0.01%)</title><rect x="85.0620%" y="437" width="0.0123%" height="15" fill="rgb(216,46,15)" fg:x="20790" fg:w="3"/><text x="85.3120%" y="447.50"></text></g><g><title>`0x7FF96D77C5F4 (3 samples, 0.01%)</title><rect x="85.0620%" y="421" width="0.0123%" height="15" fill="rgb(250,74,19)" fg:x="20790" fg:w="3"/><text x="85.3120%" y="431.50"></text></g><g><title>`0x7FF96B554932 (3 samples, 0.01%)</title><rect x="85.0784%" y="421" width="0.0123%" height="15" fill="rgb(249,42,33)" fg:x="20794" fg:w="3"/><text x="85.3284%" y="431.50"></text></g><g><title>`0x7FF96D77C294 (3 samples, 0.01%)</title><rect x="85.0784%" y="405" width="0.0123%" height="15" fill="rgb(242,149,17)" fg:x="20794" fg:w="3"/><text x="85.3284%" y="415.50"></text></g><g><title>`0x7FF96B554A57 (3 samples, 0.01%)</title><rect x="85.0947%" y="421" width="0.0123%" height="15" fill="rgb(244,29,21)" fg:x="20798" fg:w="3"/><text x="85.3447%" y="431.50"></text></g><g><title>`0x7FF96D77C294 (3 samples, 0.01%)</title><rect x="85.0947%" y="405" width="0.0123%" height="15" fill="rgb(220,130,37)" fg:x="20798" fg:w="3"/><text x="85.3447%" y="415.50"></text></g><g><title>`0x7FF96B554CAD (9 samples, 0.04%)</title><rect x="85.1070%" y="421" width="0.0368%" height="15" fill="rgb(211,67,2)" fg:x="20801" fg:w="9"/><text x="85.3570%" y="431.50"></text></g><g><title>`0x7FF96D77C1F4 (9 samples, 0.04%)</title><rect x="85.1070%" y="405" width="0.0368%" height="15" fill="rgb(235,68,52)" fg:x="20801" fg:w="9"/><text x="85.3570%" y="415.50"></text></g><g><title>`0x7FF96B554D5A (7 samples, 0.03%)</title><rect x="85.1438%" y="421" width="0.0286%" height="15" fill="rgb(246,142,3)" fg:x="20810" fg:w="7"/><text x="85.3938%" y="431.50"></text></g><g><title>`0x7FF96D77C294 (7 samples, 0.03%)</title><rect x="85.1438%" y="405" width="0.0286%" height="15" fill="rgb(241,25,7)" fg:x="20810" fg:w="7"/><text x="85.3938%" y="415.50"></text></g><g><title>`0x7FF96B554F50 (6 samples, 0.02%)</title><rect x="85.1806%" y="421" width="0.0245%" height="15" fill="rgb(242,119,39)" fg:x="20819" fg:w="6"/><text x="85.4306%" y="431.50"></text></g><g><title>`0x7FF96D77C294 (6 samples, 0.02%)</title><rect x="85.1806%" y="405" width="0.0245%" height="15" fill="rgb(241,98,45)" fg:x="20819" fg:w="6"/><text x="85.4306%" y="415.50"></text></g><g><title>`0x7FF96B555046 (7 samples, 0.03%)</title><rect x="85.2052%" y="421" width="0.0286%" height="15" fill="rgb(254,28,30)" fg:x="20825" fg:w="7"/><text x="85.4552%" y="431.50"></text></g><g><title>`0x7FF96D77C294 (7 samples, 0.03%)</title><rect x="85.2052%" y="405" width="0.0286%" height="15" fill="rgb(241,142,54)" fg:x="20825" fg:w="7"/><text x="85.4552%" y="415.50"></text></g><g><title>`0x7FF96B55513D (5 samples, 0.02%)</title><rect x="85.2338%" y="421" width="0.0205%" height="15" fill="rgb(222,85,15)" fg:x="20832" fg:w="5"/><text x="85.4838%" y="431.50"></text></g><g><title>`0x7FF96D77C294 (5 samples, 0.02%)</title><rect x="85.2338%" y="405" width="0.0205%" height="15" fill="rgb(210,85,47)" fg:x="20832" fg:w="5"/><text x="85.4838%" y="415.50"></text></g><g><title>`0x7FF96B555260 (3 samples, 0.01%)</title><rect x="85.2543%" y="421" width="0.0123%" height="15" fill="rgb(224,206,25)" fg:x="20837" fg:w="3"/><text x="85.5043%" y="431.50"></text></g><g><title>`0x7FF96D77C294 (3 samples, 0.01%)</title><rect x="85.2543%" y="405" width="0.0123%" height="15" fill="rgb(243,201,19)" fg:x="20837" fg:w="3"/><text x="85.5043%" y="415.50"></text></g><g><title>`0x7FF96B554271 (49 samples, 0.20%)</title><rect x="85.0743%" y="437" width="0.2005%" height="15" fill="rgb(236,59,4)" fg:x="20793" fg:w="49"/><text x="85.3243%" y="447.50"></text></g><g><title>`0x7FF94BFF5503 (67 samples, 0.27%)</title><rect x="85.0088%" y="501" width="0.2741%" height="15" fill="rgb(254,179,45)" fg:x="20777" fg:w="67"/><text x="85.2588%" y="511.50"></text></g><g><title>`0x7FF96B57BCD9 (66 samples, 0.27%)</title><rect x="85.0129%" y="485" width="0.2700%" height="15" fill="rgb(226,14,10)" fg:x="20778" fg:w="66"/><text x="85.2629%" y="495.50"></text></g><g><title>`0x7FF96B57BDE6 (66 samples, 0.27%)</title><rect x="85.0129%" y="469" width="0.2700%" height="15" fill="rgb(244,27,41)" fg:x="20778" fg:w="66"/><text x="85.2629%" y="479.50"></text></g><g><title>`0x7FF96B559C17 (60 samples, 0.25%)</title><rect x="85.0374%" y="453" width="0.2455%" height="15" fill="rgb(235,35,32)" fg:x="20784" fg:w="60"/><text x="85.2874%" y="463.50"></text></g><g><title>`0x7FF96D6AA2AE (4 samples, 0.02%)</title><rect x="85.2911%" y="405" width="0.0164%" height="15" fill="rgb(218,68,31)" fg:x="20846" fg:w="4"/><text x="85.5411%" y="415.50"></text></g><g><title>`0x7FF96D6AD3BF (5 samples, 0.02%)</title><rect x="85.2911%" y="421" width="0.0205%" height="15" fill="rgb(207,120,37)" fg:x="20846" fg:w="5"/><text x="85.5411%" y="431.50"></text></g><g><title>`0x7FF94BFF58BC (11 samples, 0.05%)</title><rect x="85.2870%" y="453" width="0.0450%" height="15" fill="rgb(227,98,0)" fg:x="20845" fg:w="11"/><text x="85.5370%" y="463.50"></text></g><g><title>`0x7FF96A8F654B (11 samples, 0.05%)</title><rect x="85.2870%" y="437" width="0.0450%" height="15" fill="rgb(207,7,3)" fg:x="20845" fg:w="11"/><text x="85.5370%" y="447.50"></text></g><g><title>`0x7FF96D6AD3E6 (5 samples, 0.02%)</title><rect x="85.3116%" y="421" width="0.0205%" height="15" fill="rgb(206,98,19)" fg:x="20851" fg:w="5"/><text x="85.5616%" y="431.50"></text></g><g><title>`0x7FF94BFF570B (15 samples, 0.06%)</title><rect x="85.2870%" y="469" width="0.0614%" height="15" fill="rgb(217,5,26)" fg:x="20845" fg:w="15"/><text x="85.5370%" y="479.50"></text></g><g><title>`0x7FF94BFF591C (4 samples, 0.02%)</title><rect x="85.3320%" y="453" width="0.0164%" height="15" fill="rgb(235,190,38)" fg:x="20856" fg:w="4"/><text x="85.5820%" y="463.50"></text></g><g><title>`0x7FF96A8F654B (4 samples, 0.02%)</title><rect x="85.3320%" y="437" width="0.0164%" height="15" fill="rgb(247,86,24)" fg:x="20856" fg:w="4"/><text x="85.5820%" y="447.50"></text></g><g><title>`0x7FF96D6AD3E6 (3 samples, 0.01%)</title><rect x="85.3361%" y="421" width="0.0123%" height="15" fill="rgb(205,101,16)" fg:x="20857" fg:w="3"/><text x="85.5861%" y="431.50"></text></g><g><title>`0x7FF96D642EE8 (3 samples, 0.01%)</title><rect x="85.3525%" y="389" width="0.0123%" height="15" fill="rgb(246,168,33)" fg:x="20861" fg:w="3"/><text x="85.6025%" y="399.50"></text></g><g><title>`0x7FF96D77C4F4 (3 samples, 0.01%)</title><rect x="85.3525%" y="373" width="0.0123%" height="15" fill="rgb(231,114,1)" fg:x="20861" fg:w="3"/><text x="85.6025%" y="383.50"></text></g><g><title>`0x7FF96A8125D0 (14 samples, 0.06%)</title><rect x="85.3525%" y="405" width="0.0573%" height="15" fill="rgb(207,184,53)" fg:x="20861" fg:w="14"/><text x="85.6025%" y="415.50"></text></g><g><title>`0x7FF96D642EF6 (11 samples, 0.05%)</title><rect x="85.3648%" y="389" width="0.0450%" height="15" fill="rgb(224,95,51)" fg:x="20864" fg:w="11"/><text x="85.6148%" y="399.50"></text></g><g><title>`0x7FF96D77C194 (11 samples, 0.05%)</title><rect x="85.3648%" y="373" width="0.0450%" height="15" fill="rgb(212,188,45)" fg:x="20864" fg:w="11"/><text x="85.6148%" y="383.50"></text></g><g><title>`0x7FF96B558FE0 (25 samples, 0.10%)</title><rect x="85.3525%" y="421" width="0.1023%" height="15" fill="rgb(223,154,38)" fg:x="20861" fg:w="25"/><text x="85.6025%" y="431.50"></text></g><g><title>`0x7FF96A812608 (11 samples, 0.05%)</title><rect x="85.4098%" y="405" width="0.0450%" height="15" fill="rgb(251,22,52)" fg:x="20875" fg:w="11"/><text x="85.6598%" y="415.50"></text></g><g><title>`0x7FF96D77C4F4 (11 samples, 0.05%)</title><rect x="85.4098%" y="389" width="0.0450%" height="15" fill="rgb(229,209,22)" fg:x="20875" fg:w="11"/><text x="85.6598%" y="399.50"></text></g><g><title>`0x7FF96D64A485 (9 samples, 0.04%)</title><rect x="85.4670%" y="309" width="0.0368%" height="15" fill="rgb(234,138,34)" fg:x="20889" fg:w="9"/><text x="85.7170%" y="319.50"></text></g><g><title>`0x7FF96D64A914 (9 samples, 0.04%)</title><rect x="85.4670%" y="293" width="0.0368%" height="15" fill="rgb(212,95,11)" fg:x="20889" fg:w="9"/><text x="85.7170%" y="303.50"></text></g><g><title>`0x7FF96D77C1F4 (9 samples, 0.04%)</title><rect x="85.4670%" y="277" width="0.0368%" height="15" fill="rgb(240,179,47)" fg:x="20889" fg:w="9"/><text x="85.7170%" y="287.50"></text></g><g><title>`0x7FF96D64A49E (3 samples, 0.01%)</title><rect x="85.5039%" y="309" width="0.0123%" height="15" fill="rgb(240,163,11)" fg:x="20898" fg:w="3"/><text x="85.7539%" y="319.50"></text></g><g><title>`0x7FF96D64AB71 (3 samples, 0.01%)</title><rect x="85.5039%" y="293" width="0.0123%" height="15" fill="rgb(236,37,12)" fg:x="20898" fg:w="3"/><text x="85.7539%" y="303.50"></text></g><g><title>`0x7FF96D77C294 (3 samples, 0.01%)</title><rect x="85.5039%" y="277" width="0.0123%" height="15" fill="rgb(232,164,16)" fg:x="20898" fg:w="3"/><text x="85.7539%" y="287.50"></text></g><g><title>`0x7FF96D64B20B (5 samples, 0.02%)</title><rect x="85.5161%" y="277" width="0.0205%" height="15" fill="rgb(244,205,15)" fg:x="20901" fg:w="5"/><text x="85.7661%" y="287.50"></text></g><g><title>`0x7FF96D77C294 (5 samples, 0.02%)</title><rect x="85.5161%" y="261" width="0.0205%" height="15" fill="rgb(223,117,47)" fg:x="20901" fg:w="5"/><text x="85.7661%" y="271.50"></text></g><g><title>`0x7FF96D64A4B6 (6 samples, 0.02%)</title><rect x="85.5161%" y="309" width="0.0245%" height="15" fill="rgb(244,107,35)" fg:x="20901" fg:w="6"/><text x="85.7661%" y="319.50"></text></g><g><title>`0x7FF96D64AC8D (6 samples, 0.02%)</title><rect x="85.5161%" y="293" width="0.0245%" height="15" fill="rgb(205,140,8)" fg:x="20901" fg:w="6"/><text x="85.7661%" y="303.50"></text></g><g><title>`0x7FF96D640ECB (21 samples, 0.09%)</title><rect x="85.4670%" y="325" width="0.0859%" height="15" fill="rgb(228,84,46)" fg:x="20889" fg:w="21"/><text x="85.7170%" y="335.50"></text></g><g><title>`0x7FF96D669DC9 (44 samples, 0.18%)</title><rect x="85.5571%" y="309" width="0.1800%" height="15" fill="rgb(254,188,9)" fg:x="20911" fg:w="44"/><text x="85.8071%" y="319.50"></text></g><g><title>`0x7FF96D77C614 (44 samples, 0.18%)</title><rect x="85.5571%" y="293" width="0.1800%" height="15" fill="rgb(206,112,54)" fg:x="20911" fg:w="44"/><text x="85.8071%" y="303.50"></text></g><g><title>`0x7FF96D669E21 (3 samples, 0.01%)</title><rect x="85.7371%" y="309" width="0.0123%" height="15" fill="rgb(216,84,49)" fg:x="20955" fg:w="3"/><text x="85.9871%" y="319.50"></text></g><g><title>`0x7FF96D77C8F4 (3 samples, 0.01%)</title><rect x="85.7371%" y="293" width="0.0123%" height="15" fill="rgb(214,194,35)" fg:x="20955" fg:w="3"/><text x="85.9871%" y="303.50"></text></g><g><title>`0x7FF96D640F8F (51 samples, 0.21%)</title><rect x="85.5530%" y="325" width="0.2087%" height="15" fill="rgb(249,28,3)" fg:x="20910" fg:w="51"/><text x="85.8030%" y="335.50"></text></g><g><title>`0x7FF96D63FF6E (76 samples, 0.31%)</title><rect x="85.4630%" y="341" width="0.3110%" height="15" fill="rgb(222,56,52)" fg:x="20888" fg:w="76"/><text x="85.7130%" y="351.50"></text></g><g><title>`0x7FF96D6C28DC (77 samples, 0.32%)</title><rect x="85.4630%" y="357" width="0.3150%" height="15" fill="rgb(245,217,50)" fg:x="20888" fg:w="77"/><text x="85.7130%" y="367.50"></text></g><g><title>`0x7FF96D64A485 (8 samples, 0.03%)</title><rect x="85.7780%" y="309" width="0.0327%" height="15" fill="rgb(213,201,24)" fg:x="20965" fg:w="8"/><text x="86.0280%" y="319.50"></text></g><g><title>`0x7FF96D64A914 (8 samples, 0.03%)</title><rect x="85.7780%" y="293" width="0.0327%" height="15" fill="rgb(248,116,28)" fg:x="20965" fg:w="8"/><text x="86.0280%" y="303.50"></text></g><g><title>`0x7FF96D77C1F4 (8 samples, 0.03%)</title><rect x="85.7780%" y="277" width="0.0327%" height="15" fill="rgb(219,72,43)" fg:x="20965" fg:w="8"/><text x="86.0280%" y="287.50"></text></g><g><title>`0x7FF96D64A49E (4 samples, 0.02%)</title><rect x="85.8107%" y="309" width="0.0164%" height="15" fill="rgb(209,138,14)" fg:x="20973" fg:w="4"/><text x="86.0607%" y="319.50"></text></g><g><title>`0x7FF96D64AB71 (4 samples, 0.02%)</title><rect x="85.8107%" y="293" width="0.0164%" height="15" fill="rgb(222,18,33)" fg:x="20973" fg:w="4"/><text x="86.0607%" y="303.50"></text></g><g><title>`0x7FF96D77C294 (4 samples, 0.02%)</title><rect x="85.8107%" y="277" width="0.0164%" height="15" fill="rgb(213,199,7)" fg:x="20973" fg:w="4"/><text x="86.0607%" y="287.50"></text></g><g><title>`0x7FF96D640ECB (16 samples, 0.07%)</title><rect x="85.7780%" y="325" width="0.0655%" height="15" fill="rgb(250,110,10)" fg:x="20965" fg:w="16"/><text x="86.0280%" y="335.50"></text></g><g><title>`0x7FF96D64A4B6 (4 samples, 0.02%)</title><rect x="85.8271%" y="309" width="0.0164%" height="15" fill="rgb(248,123,6)" fg:x="20977" fg:w="4"/><text x="86.0771%" y="319.50"></text></g><g><title>`0x7FF96D64AC8D (4 samples, 0.02%)</title><rect x="85.8271%" y="293" width="0.0164%" height="15" fill="rgb(206,91,31)" fg:x="20977" fg:w="4"/><text x="86.0771%" y="303.50"></text></g><g><title>`0x7FF96D64B20B (3 samples, 0.01%)</title><rect x="85.8312%" y="277" width="0.0123%" height="15" fill="rgb(211,154,13)" fg:x="20978" fg:w="3"/><text x="86.0812%" y="287.50"></text></g><g><title>`0x7FF96D77C294 (3 samples, 0.01%)</title><rect x="85.8312%" y="261" width="0.0123%" height="15" fill="rgb(225,148,7)" fg:x="20978" fg:w="3"/><text x="86.0812%" y="271.50"></text></g><g><title>`0x7FF96D669DC9 (32 samples, 0.13%)</title><rect x="85.8435%" y="309" width="0.1309%" height="15" fill="rgb(220,160,43)" fg:x="20981" fg:w="32"/><text x="86.0935%" y="319.50"></text></g><g><title>`0x7FF96D77C614 (32 samples, 0.13%)</title><rect x="85.8435%" y="293" width="0.1309%" height="15" fill="rgb(213,52,39)" fg:x="20981" fg:w="32"/><text x="86.0935%" y="303.50"></text></g><g><title>`0x7FF96D669E21 (3 samples, 0.01%)</title><rect x="85.9744%" y="309" width="0.0123%" height="15" fill="rgb(243,137,7)" fg:x="21013" fg:w="3"/><text x="86.2244%" y="319.50"></text></g><g><title>`0x7FF96D77C8F4 (3 samples, 0.01%)</title><rect x="85.9744%" y="293" width="0.0123%" height="15" fill="rgb(230,79,13)" fg:x="21013" fg:w="3"/><text x="86.2244%" y="303.50"></text></g><g><title>`0x7FF96D640F8F (36 samples, 0.15%)</title><rect x="85.8435%" y="325" width="0.1473%" height="15" fill="rgb(247,105,23)" fg:x="20981" fg:w="36"/><text x="86.0935%" y="335.50"></text></g><g><title>`0x7FF96D669DC9 (28 samples, 0.11%)</title><rect x="85.9989%" y="309" width="0.1146%" height="15" fill="rgb(223,179,41)" fg:x="21019" fg:w="28"/><text x="86.2489%" y="319.50"></text></g><g><title>`0x7FF96D77C614 (28 samples, 0.11%)</title><rect x="85.9989%" y="293" width="0.1146%" height="15" fill="rgb(218,9,34)" fg:x="21019" fg:w="28"/><text x="86.2489%" y="303.50"></text></g><g><title>`0x7FF96D64137C (32 samples, 0.13%)</title><rect x="85.9908%" y="325" width="0.1309%" height="15" fill="rgb(222,106,8)" fg:x="21017" fg:w="32"/><text x="86.2408%" y="335.50"></text></g><g><title>`0x7FF96D63FF6E (85 samples, 0.35%)</title><rect x="85.7780%" y="341" width="0.3478%" height="15" fill="rgb(211,220,0)" fg:x="20965" fg:w="85"/><text x="86.0280%" y="351.50"></text></g><g><title>`0x7FF96D6C4EC8 (21 samples, 0.09%)</title><rect x="86.1340%" y="325" width="0.0859%" height="15" fill="rgb(229,52,16)" fg:x="21052" fg:w="21"/><text x="86.3840%" y="335.50"></text></g><g><title>`0x7FF96D77C754 (21 samples, 0.09%)</title><rect x="86.1340%" y="309" width="0.0859%" height="15" fill="rgb(212,155,18)" fg:x="21052" fg:w="21"/><text x="86.3840%" y="319.50"></text></g><g><title>`0x7FF96D6C319C (109 samples, 0.45%)</title><rect x="85.7780%" y="357" width="0.4460%" height="15" fill="rgb(242,21,14)" fg:x="20965" fg:w="109"/><text x="86.0280%" y="367.50"></text></g><g><title>`0x7FF96D640406 (22 samples, 0.09%)</title><rect x="86.1340%" y="341" width="0.0900%" height="15" fill="rgb(222,19,48)" fg:x="21052" fg:w="22"/><text x="86.3840%" y="351.50"></text></g><g><title>`0x7FF96D6C3B08 (4 samples, 0.02%)</title><rect x="86.2240%" y="357" width="0.0164%" height="15" fill="rgb(232,45,27)" fg:x="21074" fg:w="4"/><text x="86.4740%" y="367.50"></text></g><g><title>`0x7FF96D6C3B31 (3 samples, 0.01%)</title><rect x="86.2403%" y="357" width="0.0123%" height="15" fill="rgb(249,103,42)" fg:x="21078" fg:w="3"/><text x="86.4903%" y="367.50"></text></g><g><title>`0x7FF96D6C4128 (3 samples, 0.01%)</title><rect x="86.2403%" y="341" width="0.0123%" height="15" fill="rgb(246,81,33)" fg:x="21078" fg:w="3"/><text x="86.4903%" y="351.50"></text></g><g><title>`0x7FF96B5578F0 (195 samples, 0.80%)</title><rect x="85.4589%" y="405" width="0.7978%" height="15" fill="rgb(252,33,42)" fg:x="20887" fg:w="195"/><text x="85.7089%" y="415.50"></text></g><g><title>`0x7FF96A886DE7 (194 samples, 0.79%)</title><rect x="85.4630%" y="389" width="0.7937%" height="15" fill="rgb(209,212,41)" fg:x="20888" fg:w="194"/><text x="85.7130%" y="399.50"></text></g><g><title>`0x7FF96D6C1D86 (194 samples, 0.79%)</title><rect x="85.4630%" y="373" width="0.7937%" height="15" fill="rgb(207,154,6)" fg:x="20888" fg:w="194"/><text x="85.7130%" y="383.50"></text></g><g><title>`0x7FF96D66A24A (79 samples, 0.32%)</title><rect x="86.2731%" y="357" width="0.3232%" height="15" fill="rgb(223,64,47)" fg:x="21086" fg:w="79"/><text x="86.5231%" y="367.50"></text></g><g><title>`0x7FF96D66A0B6 (78 samples, 0.32%)</title><rect x="86.2772%" y="341" width="0.3191%" height="15" fill="rgb(211,161,38)" fg:x="21087" fg:w="78"/><text x="86.5272%" y="351.50"></text></g><g><title>`0x7FF96D77C754 (78 samples, 0.32%)</title><rect x="86.2772%" y="325" width="0.3191%" height="15" fill="rgb(219,138,40)" fg:x="21087" fg:w="78"/><text x="86.5272%" y="335.50"></text></g><g><title>`0x7FF96D66A634 (22 samples, 0.09%)</title><rect x="86.6086%" y="357" width="0.0900%" height="15" fill="rgb(241,228,46)" fg:x="21168" fg:w="22"/><text x="86.8586%" y="367.50"></text></g><g><title>`0x7FF96D77C754 (22 samples, 0.09%)</title><rect x="86.6086%" y="341" width="0.0900%" height="15" fill="rgb(223,209,38)" fg:x="21168" fg:w="22"/><text x="86.8586%" y="351.50"></text></g><g><title>`0x7FF96A8C95A8 (105 samples, 0.43%)</title><rect x="86.2731%" y="373" width="0.4296%" height="15" fill="rgb(236,164,45)" fg:x="21086" fg:w="105"/><text x="86.5231%" y="383.50"></text></g><g><title>`0x7FF96A86CDBB (92 samples, 0.38%)</title><rect x="86.7068%" y="341" width="0.3764%" height="15" fill="rgb(231,15,5)" fg:x="21192" fg:w="92"/><text x="86.9568%" y="351.50"></text></g><g><title>`0x7FF96D77CA54 (92 samples, 0.38%)</title><rect x="86.7068%" y="325" width="0.3764%" height="15" fill="rgb(252,35,15)" fg:x="21192" fg:w="92"/><text x="86.9568%" y="335.50"></text></g><g><title>`0x7FF96A8C9616 (93 samples, 0.38%)</title><rect x="86.7068%" y="373" width="0.3805%" height="15" fill="rgb(248,181,18)" fg:x="21192" fg:w="93"/><text x="86.9568%" y="383.50"></text></g><g><title>`0x7FF96A86CA5B (93 samples, 0.38%)</title><rect x="86.7068%" y="357" width="0.3805%" height="15" fill="rgb(233,39,42)" fg:x="21192" fg:w="93"/><text x="86.9568%" y="367.50"></text></g><g><title>`0x7FF96A8C9662 (17 samples, 0.07%)</title><rect x="87.0873%" y="373" width="0.0696%" height="15" fill="rgb(238,110,33)" fg:x="21285" fg:w="17"/><text x="87.3373%" y="383.50"></text></g><g><title>`0x7FF96D77C8F4 (17 samples, 0.07%)</title><rect x="87.0873%" y="357" width="0.0696%" height="15" fill="rgb(233,195,10)" fg:x="21285" fg:w="17"/><text x="87.3373%" y="367.50"></text></g><g><title>`0x7FF96A8C96DB (6 samples, 0.02%)</title><rect x="87.1650%" y="373" width="0.0245%" height="15" fill="rgb(254,105,3)" fg:x="21304" fg:w="6"/><text x="87.4150%" y="383.50"></text></g><g><title>`0x7FF96D639906 (6 samples, 0.02%)</title><rect x="87.1650%" y="357" width="0.0245%" height="15" fill="rgb(221,225,9)" fg:x="21304" fg:w="6"/><text x="87.4150%" y="367.50"></text></g><g><title>`0x7FF96A8C9726 (10 samples, 0.04%)</title><rect x="87.1937%" y="373" width="0.0409%" height="15" fill="rgb(224,227,45)" fg:x="21311" fg:w="10"/><text x="87.4437%" y="383.50"></text></g><g><title>`0x7FF96D77C194 (10 samples, 0.04%)</title><rect x="87.1937%" y="357" width="0.0409%" height="15" fill="rgb(229,198,43)" fg:x="21311" fg:w="10"/><text x="87.4437%" y="367.50"></text></g><g><title>`0x7FF94BFF5A69 (464 samples, 1.90%)</title><rect x="85.3484%" y="453" width="1.8984%" height="15" fill="rgb(206,209,35)" fg:x="20860" fg:w="464"/><text x="85.5984%" y="463.50">`..</text></g><g><title>`0x7FF96B556E66 (464 samples, 1.90%)</title><rect x="85.3484%" y="437" width="1.8984%" height="15" fill="rgb(245,195,53)" fg:x="20860" fg:w="464"/><text x="85.5984%" y="447.50">`..</text></g><g><title>`0x7FF96B5591FB (437 samples, 1.79%)</title><rect x="85.4589%" y="421" width="1.7880%" height="15" fill="rgb(240,92,26)" fg:x="20887" fg:w="437"/><text x="85.7089%" y="431.50">`..</text></g><g><title>`0x7FF96B557A18 (240 samples, 0.98%)</title><rect x="86.2649%" y="405" width="0.9820%" height="15" fill="rgb(207,40,23)" fg:x="21084" fg:w="240"/><text x="86.5149%" y="415.50"></text></g><g><title>`0x7FF96A8124BB (239 samples, 0.98%)</title><rect x="86.2690%" y="389" width="0.9779%" height="15" fill="rgb(223,111,35)" fg:x="21085" fg:w="239"/><text x="86.5190%" y="399.50"></text></g><g><title>`0x7FF94BFF5758 (465 samples, 1.90%)</title><rect x="85.3484%" y="469" width="1.9025%" height="15" fill="rgb(229,147,28)" fg:x="20860" fg:w="465"/><text x="85.5984%" y="479.50">`..</text></g><g><title>`0x7FF96B558FE0 (4 samples, 0.02%)</title><rect x="87.2509%" y="421" width="0.0164%" height="15" fill="rgb(211,29,28)" fg:x="21325" fg:w="4"/><text x="87.5009%" y="431.50"></text></g><g><title>`0x7FF96D640ECB (3 samples, 0.01%)</title><rect x="87.2714%" y="325" width="0.0123%" height="15" fill="rgb(228,72,33)" fg:x="21330" fg:w="3"/><text x="87.5214%" y="335.50"></text></g><g><title>`0x7FF96D64A485 (3 samples, 0.01%)</title><rect x="87.2714%" y="309" width="0.0123%" height="15" fill="rgb(205,214,31)" fg:x="21330" fg:w="3"/><text x="87.5214%" y="319.50"></text></g><g><title>`0x7FF96D63FF6E (15 samples, 0.06%)</title><rect x="87.2673%" y="341" width="0.0614%" height="15" fill="rgb(224,111,15)" fg:x="21329" fg:w="15"/><text x="87.5173%" y="351.50"></text></g><g><title>`0x7FF96D64137C (11 samples, 0.05%)</title><rect x="87.2837%" y="325" width="0.0450%" height="15" fill="rgb(253,21,26)" fg:x="21333" fg:w="11"/><text x="87.5337%" y="335.50"></text></g><g><title>`0x7FF96D669DC9 (11 samples, 0.05%)</title><rect x="87.2837%" y="309" width="0.0450%" height="15" fill="rgb(245,139,43)" fg:x="21333" fg:w="11"/><text x="87.5337%" y="319.50"></text></g><g><title>`0x7FF96D77C614 (11 samples, 0.05%)</title><rect x="87.2837%" y="293" width="0.0450%" height="15" fill="rgb(252,170,7)" fg:x="21333" fg:w="11"/><text x="87.5337%" y="303.50"></text></g><g><title>`0x7FF96B5578F0 (25 samples, 0.10%)</title><rect x="87.2673%" y="405" width="0.1023%" height="15" fill="rgb(231,118,14)" fg:x="21329" fg:w="25"/><text x="87.5173%" y="415.50"></text></g><g><title>`0x7FF96A886DE7 (25 samples, 0.10%)</title><rect x="87.2673%" y="389" width="0.1023%" height="15" fill="rgb(238,83,0)" fg:x="21329" fg:w="25"/><text x="87.5173%" y="399.50"></text></g><g><title>`0x7FF96D6C1D86 (25 samples, 0.10%)</title><rect x="87.2673%" y="373" width="0.1023%" height="15" fill="rgb(221,39,39)" fg:x="21329" fg:w="25"/><text x="87.5173%" y="383.50"></text></g><g><title>`0x7FF96D6C319C (25 samples, 0.10%)</title><rect x="87.2673%" y="357" width="0.1023%" height="15" fill="rgb(222,119,46)" fg:x="21329" fg:w="25"/><text x="87.5173%" y="367.50"></text></g><g><title>`0x7FF96D640406 (10 samples, 0.04%)</title><rect x="87.3287%" y="341" width="0.0409%" height="15" fill="rgb(222,165,49)" fg:x="21344" fg:w="10"/><text x="87.5787%" y="351.50"></text></g><g><title>`0x7FF96D6C4EC8 (10 samples, 0.04%)</title><rect x="87.3287%" y="325" width="0.0409%" height="15" fill="rgb(219,113,52)" fg:x="21344" fg:w="10"/><text x="87.5787%" y="335.50"></text></g><g><title>`0x7FF96D77C754 (10 samples, 0.04%)</title><rect x="87.3287%" y="309" width="0.0409%" height="15" fill="rgb(214,7,15)" fg:x="21344" fg:w="10"/><text x="87.5787%" y="319.50"></text></g><g><title>`0x7FF96D66A24A (17 samples, 0.07%)</title><rect x="87.3696%" y="357" width="0.0696%" height="15" fill="rgb(235,32,4)" fg:x="21354" fg:w="17"/><text x="87.6196%" y="367.50"></text></g><g><title>`0x7FF96D66A0B6 (16 samples, 0.07%)</title><rect x="87.3737%" y="341" width="0.0655%" height="15" fill="rgb(238,90,54)" fg:x="21355" fg:w="16"/><text x="87.6237%" y="351.50"></text></g><g><title>`0x7FF96D77C754 (16 samples, 0.07%)</title><rect x="87.3737%" y="325" width="0.0655%" height="15" fill="rgb(213,208,19)" fg:x="21355" fg:w="16"/><text x="87.6237%" y="335.50"></text></g><g><title>`0x7FF96A8C95A8 (21 samples, 0.09%)</title><rect x="87.3696%" y="373" width="0.0859%" height="15" fill="rgb(233,156,4)" fg:x="21354" fg:w="21"/><text x="87.6196%" y="383.50"></text></g><g><title>`0x7FF96A8C9616 (10 samples, 0.04%)</title><rect x="87.4555%" y="373" width="0.0409%" height="15" fill="rgb(207,194,5)" fg:x="21375" fg:w="10"/><text x="87.7055%" y="383.50"></text></g><g><title>`0x7FF96A86CA5B (10 samples, 0.04%)</title><rect x="87.4555%" y="357" width="0.0409%" height="15" fill="rgb(206,111,30)" fg:x="21375" fg:w="10"/><text x="87.7055%" y="367.50"></text></g><g><title>`0x7FF96A86CDBB (10 samples, 0.04%)</title><rect x="87.4555%" y="341" width="0.0409%" height="15" fill="rgb(243,70,54)" fg:x="21375" fg:w="10"/><text x="87.7055%" y="351.50"></text></g><g><title>`0x7FF96D77CA54 (10 samples, 0.04%)</title><rect x="87.4555%" y="325" width="0.0409%" height="15" fill="rgb(242,28,8)" fg:x="21375" fg:w="10"/><text x="87.7055%" y="335.50"></text></g><g><title>`0x7FF94BFEA465 (545 samples, 2.23%)</title><rect x="85.2870%" y="485" width="2.2299%" height="15" fill="rgb(219,106,18)" fg:x="20845" fg:w="545"/><text x="85.5370%" y="495.50">`..</text></g><g><title>`0x7FF94BFF5797 (65 samples, 0.27%)</title><rect x="87.2509%" y="469" width="0.2659%" height="15" fill="rgb(244,222,10)" fg:x="21325" fg:w="65"/><text x="87.5009%" y="479.50"></text></g><g><title>`0x7FF94BFF5A69 (65 samples, 0.27%)</title><rect x="87.2509%" y="453" width="0.2659%" height="15" fill="rgb(236,179,52)" fg:x="21325" fg:w="65"/><text x="87.5009%" y="463.50"></text></g><g><title>`0x7FF96B556E66 (65 samples, 0.27%)</title><rect x="87.2509%" y="437" width="0.2659%" height="15" fill="rgb(213,23,39)" fg:x="21325" fg:w="65"/><text x="87.5009%" y="447.50"></text></g><g><title>`0x7FF96B5591FB (61 samples, 0.25%)</title><rect x="87.2673%" y="421" width="0.2496%" height="15" fill="rgb(238,48,10)" fg:x="21329" fg:w="61"/><text x="87.5173%" y="431.50"></text></g><g><title>`0x7FF96B557A18 (36 samples, 0.15%)</title><rect x="87.3696%" y="405" width="0.1473%" height="15" fill="rgb(251,196,23)" fg:x="21354" fg:w="36"/><text x="87.6196%" y="415.50"></text></g><g><title>`0x7FF96A8124BB (36 samples, 0.15%)</title><rect x="87.3696%" y="389" width="0.1473%" height="15" fill="rgb(250,152,24)" fg:x="21354" fg:w="36"/><text x="87.6196%" y="399.50"></text></g><g><title>`0x7FF94BFF55E9 (548 samples, 2.24%)</title><rect x="85.2829%" y="501" width="2.2421%" height="15" fill="rgb(209,150,17)" fg:x="20844" fg:w="548"/><text x="85.5329%" y="511.50">`..</text></g><g><title>`0x7FF94BFE6EE5 (616 samples, 2.52%)</title><rect x="85.0088%" y="517" width="2.5204%" height="15" fill="rgb(234,202,34)" fg:x="20777" fg:w="616"/><text x="85.2588%" y="527.50">`0..</text></g><g><title>`0x7FF96D642EE8 (8 samples, 0.03%)</title><rect x="87.5414%" y="405" width="0.0327%" height="15" fill="rgb(253,148,53)" fg:x="21396" fg:w="8"/><text x="87.7914%" y="415.50"></text></g><g><title>`0x7FF96D77C4F4 (8 samples, 0.03%)</title><rect x="87.5414%" y="389" width="0.0327%" height="15" fill="rgb(218,129,16)" fg:x="21396" fg:w="8"/><text x="87.7914%" y="399.50"></text></g><g><title>`0x7FF96A8125D0 (18 samples, 0.07%)</title><rect x="87.5414%" y="421" width="0.0736%" height="15" fill="rgb(216,85,19)" fg:x="21396" fg:w="18"/><text x="87.7914%" y="431.50"></text></g><g><title>`0x7FF96D642EF6 (10 samples, 0.04%)</title><rect x="87.5742%" y="405" width="0.0409%" height="15" fill="rgb(235,228,7)" fg:x="21404" fg:w="10"/><text x="87.8242%" y="415.50"></text></g><g><title>`0x7FF96D77C194 (10 samples, 0.04%)</title><rect x="87.5742%" y="389" width="0.0409%" height="15" fill="rgb(245,175,0)" fg:x="21404" fg:w="10"/><text x="87.8242%" y="399.50"></text></g><g><title>`0x7FF96B558FE0 (26 samples, 0.11%)</title><rect x="87.5414%" y="437" width="0.1064%" height="15" fill="rgb(208,168,36)" fg:x="21396" fg:w="26"/><text x="87.7914%" y="447.50"></text></g><g><title>`0x7FF96A812608 (7 samples, 0.03%)</title><rect x="87.6192%" y="421" width="0.0286%" height="15" fill="rgb(246,171,24)" fg:x="21415" fg:w="7"/><text x="87.8692%" y="431.50"></text></g><g><title>`0x7FF96D77C4F4 (7 samples, 0.03%)</title><rect x="87.6192%" y="405" width="0.0286%" height="15" fill="rgb(215,142,24)" fg:x="21415" fg:w="7"/><text x="87.8692%" y="415.50"></text></g><g><title>`0x7FF96D64A485 (11 samples, 0.05%)</title><rect x="87.6560%" y="325" width="0.0450%" height="15" fill="rgb(250,187,7)" fg:x="21424" fg:w="11"/><text x="87.9060%" y="335.50"></text></g><g><title>`0x7FF96D64A914 (11 samples, 0.05%)</title><rect x="87.6560%" y="309" width="0.0450%" height="15" fill="rgb(228,66,33)" fg:x="21424" fg:w="11"/><text x="87.9060%" y="319.50"></text></g><g><title>`0x7FF96D77C1F4 (11 samples, 0.05%)</title><rect x="87.6560%" y="293" width="0.0450%" height="15" fill="rgb(234,215,21)" fg:x="21424" fg:w="11"/><text x="87.9060%" y="303.50"></text></g><g><title>`0x7FF96D64A49E (4 samples, 0.02%)</title><rect x="87.7010%" y="325" width="0.0164%" height="15" fill="rgb(222,191,20)" fg:x="21435" fg:w="4"/><text x="87.9510%" y="335.50"></text></g><g><title>`0x7FF96D64AB71 (4 samples, 0.02%)</title><rect x="87.7010%" y="309" width="0.0164%" height="15" fill="rgb(245,79,54)" fg:x="21435" fg:w="4"/><text x="87.9510%" y="319.50"></text></g><g><title>`0x7FF96D77C294 (4 samples, 0.02%)</title><rect x="87.7010%" y="293" width="0.0164%" height="15" fill="rgb(240,10,37)" fg:x="21435" fg:w="4"/><text x="87.9510%" y="303.50"></text></g><g><title>`0x7FF96D64B20B (4 samples, 0.02%)</title><rect x="87.7174%" y="293" width="0.0164%" height="15" fill="rgb(214,192,32)" fg:x="21439" fg:w="4"/><text x="87.9674%" y="303.50"></text></g><g><title>`0x7FF96D77C294 (4 samples, 0.02%)</title><rect x="87.7174%" y="277" width="0.0164%" height="15" fill="rgb(209,36,54)" fg:x="21439" fg:w="4"/><text x="87.9674%" y="287.50"></text></g><g><title>`0x7FF96D64A4B6 (5 samples, 0.02%)</title><rect x="87.7174%" y="325" width="0.0205%" height="15" fill="rgb(220,10,11)" fg:x="21439" fg:w="5"/><text x="87.9674%" y="335.50"></text></g><g><title>`0x7FF96D64AC8D (5 samples, 0.02%)</title><rect x="87.7174%" y="309" width="0.0205%" height="15" fill="rgb(221,106,17)" fg:x="21439" fg:w="5"/><text x="87.9674%" y="319.50"></text></g><g><title>`0x7FF96D640ECB (23 samples, 0.09%)</title><rect x="87.6560%" y="341" width="0.0941%" height="15" fill="rgb(251,142,44)" fg:x="21424" fg:w="23"/><text x="87.9060%" y="351.50"></text></g><g><title>`0x7FF96D64A4CC (3 samples, 0.01%)</title><rect x="87.7378%" y="325" width="0.0123%" height="15" fill="rgb(238,13,15)" fg:x="21444" fg:w="3"/><text x="87.9878%" y="335.50"></text></g><g><title>`0x7FF96D77C194 (3 samples, 0.01%)</title><rect x="87.7378%" y="309" width="0.0123%" height="15" fill="rgb(208,107,27)" fg:x="21444" fg:w="3"/><text x="87.9878%" y="319.50"></text></g><g><title>`0x7FF96D669DC9 (37 samples, 0.15%)</title><rect x="87.7501%" y="325" width="0.1514%" height="15" fill="rgb(205,136,37)" fg:x="21447" fg:w="37"/><text x="88.0001%" y="335.50"></text></g><g><title>`0x7FF96D77C614 (37 samples, 0.15%)</title><rect x="87.7501%" y="309" width="0.1514%" height="15" fill="rgb(250,205,27)" fg:x="21447" fg:w="37"/><text x="88.0001%" y="319.50"></text></g><g><title>`0x7FF96D669E21 (5 samples, 0.02%)</title><rect x="87.9015%" y="325" width="0.0205%" height="15" fill="rgb(210,80,43)" fg:x="21484" fg:w="5"/><text x="88.1515%" y="335.50"></text></g><g><title>`0x7FF96D77C8F4 (5 samples, 0.02%)</title><rect x="87.9015%" y="309" width="0.0205%" height="15" fill="rgb(247,160,36)" fg:x="21484" fg:w="5"/><text x="88.1515%" y="319.50"></text></g><g><title>`0x7FF96D640F8F (45 samples, 0.18%)</title><rect x="87.7501%" y="341" width="0.1841%" height="15" fill="rgb(234,13,49)" fg:x="21447" fg:w="45"/><text x="88.0001%" y="351.50"></text></g><g><title>`0x7FF96D669E9B (3 samples, 0.01%)</title><rect x="87.9219%" y="325" width="0.0123%" height="15" fill="rgb(234,122,0)" fg:x="21489" fg:w="3"/><text x="88.1719%" y="335.50"></text></g><g><title>`0x7FF96D6C28DC (70 samples, 0.29%)</title><rect x="87.6560%" y="373" width="0.2864%" height="15" fill="rgb(207,146,38)" fg:x="21424" fg:w="70"/><text x="87.9060%" y="383.50"></text></g><g><title>`0x7FF96D63FF6E (70 samples, 0.29%)</title><rect x="87.6560%" y="357" width="0.2864%" height="15" fill="rgb(207,177,25)" fg:x="21424" fg:w="70"/><text x="87.9060%" y="367.50"></text></g><g><title>`0x7FF96D64A485 (6 samples, 0.02%)</title><rect x="87.9465%" y="325" width="0.0245%" height="15" fill="rgb(211,178,42)" fg:x="21495" fg:w="6"/><text x="88.1965%" y="335.50"></text></g><g><title>`0x7FF96D64A914 (5 samples, 0.02%)</title><rect x="87.9506%" y="309" width="0.0205%" height="15" fill="rgb(230,69,54)" fg:x="21496" fg:w="5"/><text x="88.2006%" y="319.50"></text></g><g><title>`0x7FF96D77C1F4 (5 samples, 0.02%)</title><rect x="87.9506%" y="293" width="0.0205%" height="15" fill="rgb(214,135,41)" fg:x="21496" fg:w="5"/><text x="88.2006%" y="303.50"></text></g><g><title>`0x7FF96D640ECB (10 samples, 0.04%)</title><rect x="87.9465%" y="341" width="0.0409%" height="15" fill="rgb(237,67,25)" fg:x="21495" fg:w="10"/><text x="88.1965%" y="351.50"></text></g><g><title>`0x7FF96D669DC9 (29 samples, 0.12%)</title><rect x="87.9874%" y="325" width="0.1187%" height="15" fill="rgb(222,189,50)" fg:x="21505" fg:w="29"/><text x="88.2374%" y="335.50"></text></g><g><title>`0x7FF96D77C614 (29 samples, 0.12%)</title><rect x="87.9874%" y="309" width="0.1187%" height="15" fill="rgb(245,148,34)" fg:x="21505" fg:w="29"/><text x="88.2374%" y="319.50"></text></g><g><title>`0x7FF96D640F8F (32 samples, 0.13%)</title><rect x="87.9874%" y="341" width="0.1309%" height="15" fill="rgb(222,29,6)" fg:x="21505" fg:w="32"/><text x="88.2374%" y="351.50"></text></g><g><title>`0x7FF96D669DC9 (23 samples, 0.09%)</title><rect x="88.1224%" y="325" width="0.0941%" height="15" fill="rgb(221,189,43)" fg:x="21538" fg:w="23"/><text x="88.3724%" y="335.50"></text></g><g><title>`0x7FF96D77C614 (23 samples, 0.09%)</title><rect x="88.1224%" y="309" width="0.0941%" height="15" fill="rgb(207,36,27)" fg:x="21538" fg:w="23"/><text x="88.3724%" y="319.50"></text></g><g><title>`0x7FF96D63FF6E (68 samples, 0.28%)</title><rect x="87.9465%" y="357" width="0.2782%" height="15" fill="rgb(217,90,24)" fg:x="21495" fg:w="68"/><text x="88.1965%" y="367.50"></text></g><g><title>`0x7FF96D64137C (25 samples, 0.10%)</title><rect x="88.1224%" y="341" width="0.1023%" height="15" fill="rgb(224,66,35)" fg:x="21538" fg:w="25"/><text x="88.3724%" y="351.50"></text></g><g><title>`0x7FF96D6C319C (75 samples, 0.31%)</title><rect x="87.9465%" y="373" width="0.3069%" height="15" fill="rgb(221,13,50)" fg:x="21495" fg:w="75"/><text x="88.1965%" y="383.50"></text></g><g><title>`0x7FF96D640406 (7 samples, 0.03%)</title><rect x="88.2247%" y="357" width="0.0286%" height="15" fill="rgb(236,68,49)" fg:x="21563" fg:w="7"/><text x="88.4747%" y="367.50"></text></g><g><title>`0x7FF96D6C4EC8 (7 samples, 0.03%)</title><rect x="88.2247%" y="341" width="0.0286%" height="15" fill="rgb(229,146,28)" fg:x="21563" fg:w="7"/><text x="88.4747%" y="351.50"></text></g><g><title>`0x7FF96D77C754 (7 samples, 0.03%)</title><rect x="88.2247%" y="325" width="0.0286%" height="15" fill="rgb(225,31,38)" fg:x="21563" fg:w="7"/><text x="88.4747%" y="335.50"></text></g><g><title>`0x7FF96D6C3B08 (3 samples, 0.01%)</title><rect x="88.2533%" y="373" width="0.0123%" height="15" fill="rgb(250,208,3)" fg:x="21570" fg:w="3"/><text x="88.5033%" y="383.50"></text></g><g><title>`0x7FF96D6C2A16 (3 samples, 0.01%)</title><rect x="88.2533%" y="357" width="0.0123%" height="15" fill="rgb(246,54,23)" fg:x="21570" fg:w="3"/><text x="88.5033%" y="367.50"></text></g><g><title>`0x7FF96B5578F0 (153 samples, 0.63%)</title><rect x="87.6519%" y="421" width="0.6260%" height="15" fill="rgb(243,76,11)" fg:x="21423" fg:w="153"/><text x="87.9019%" y="431.50"></text></g><g><title>`0x7FF96A886DE7 (152 samples, 0.62%)</title><rect x="87.6560%" y="405" width="0.6219%" height="15" fill="rgb(245,21,50)" fg:x="21424" fg:w="152"/><text x="87.9060%" y="415.50"></text></g><g><title>`0x7FF96D6C1D86 (152 samples, 0.62%)</title><rect x="87.6560%" y="389" width="0.6219%" height="15" fill="rgb(228,9,43)" fg:x="21424" fg:w="152"/><text x="87.9060%" y="399.50"></text></g><g><title>`0x7FF96A812495 (3 samples, 0.01%)</title><rect x="88.2861%" y="405" width="0.0123%" height="15" fill="rgb(208,100,47)" fg:x="21578" fg:w="3"/><text x="88.5361%" y="415.50"></text></g><g><title>`0x7FF96D6B824D (3 samples, 0.01%)</title><rect x="88.2861%" y="389" width="0.0123%" height="15" fill="rgb(232,26,8)" fg:x="21578" fg:w="3"/><text x="88.5361%" y="399.50"></text></g><g><title>`0x7FF96D6B830D (3 samples, 0.01%)</title><rect x="88.2861%" y="373" width="0.0123%" height="15" fill="rgb(216,166,38)" fg:x="21578" fg:w="3"/><text x="88.5361%" y="383.50"></text></g><g><title>`0x7FF96D6B86E3 (3 samples, 0.01%)</title><rect x="88.2861%" y="357" width="0.0123%" height="15" fill="rgb(251,202,51)" fg:x="21578" fg:w="3"/><text x="88.5361%" y="367.50"></text></g><g><title>`0x7FF96D66A24A (55 samples, 0.23%)</title><rect x="88.2984%" y="373" width="0.2250%" height="15" fill="rgb(254,216,34)" fg:x="21581" fg:w="55"/><text x="88.5484%" y="383.50"></text></g><g><title>`0x7FF96D66A0B6 (55 samples, 0.23%)</title><rect x="88.2984%" y="357" width="0.2250%" height="15" fill="rgb(251,32,27)" fg:x="21581" fg:w="55"/><text x="88.5484%" y="367.50"></text></g><g><title>`0x7FF96D77C754 (55 samples, 0.23%)</title><rect x="88.2984%" y="341" width="0.2250%" height="15" fill="rgb(208,127,28)" fg:x="21581" fg:w="55"/><text x="88.5484%" y="351.50"></text></g><g><title>`0x7FF96D66A634 (28 samples, 0.11%)</title><rect x="88.5234%" y="373" width="0.1146%" height="15" fill="rgb(224,137,22)" fg:x="21636" fg:w="28"/><text x="88.7734%" y="383.50"></text></g><g><title>`0x7FF96D77C754 (28 samples, 0.11%)</title><rect x="88.5234%" y="357" width="0.1146%" height="15" fill="rgb(254,70,32)" fg:x="21636" fg:w="28"/><text x="88.7734%" y="367.50"></text></g><g><title>`0x7FF96A8C95A8 (84 samples, 0.34%)</title><rect x="88.2984%" y="389" width="0.3437%" height="15" fill="rgb(229,75,37)" fg:x="21581" fg:w="84"/><text x="88.5484%" y="399.50"></text></g><g><title>`0x7FF96A86CDBB (70 samples, 0.29%)</title><rect x="88.6461%" y="357" width="0.2864%" height="15" fill="rgb(252,64,23)" fg:x="21666" fg:w="70"/><text x="88.8961%" y="367.50"></text></g><g><title>`0x7FF96D77CA54 (70 samples, 0.29%)</title><rect x="88.6461%" y="341" width="0.2864%" height="15" fill="rgb(232,162,48)" fg:x="21666" fg:w="70"/><text x="88.8961%" y="351.50"></text></g><g><title>`0x7FF96A8C9616 (72 samples, 0.29%)</title><rect x="88.6420%" y="389" width="0.2946%" height="15" fill="rgb(246,160,12)" fg:x="21665" fg:w="72"/><text x="88.8920%" y="399.50"></text></g><g><title>`0x7FF96A86CA5B (72 samples, 0.29%)</title><rect x="88.6420%" y="373" width="0.2946%" height="15" fill="rgb(247,166,0)" fg:x="21665" fg:w="72"/><text x="88.8920%" y="383.50"></text></g><g><title>`0x7FF96A8C9662 (14 samples, 0.06%)</title><rect x="88.9366%" y="389" width="0.0573%" height="15" fill="rgb(249,219,21)" fg:x="21737" fg:w="14"/><text x="89.1866%" y="399.50"></text></g><g><title>`0x7FF96D77C8F4 (14 samples, 0.06%)</title><rect x="88.9366%" y="373" width="0.0573%" height="15" fill="rgb(205,209,3)" fg:x="21737" fg:w="14"/><text x="89.1866%" y="383.50"></text></g><g><title>`0x7FF96A8C96B5 (4 samples, 0.02%)</title><rect x="88.9939%" y="389" width="0.0164%" height="15" fill="rgb(243,44,1)" fg:x="21751" fg:w="4"/><text x="89.2439%" y="399.50"></text></g><g><title>`0x7FF96D77C4B4 (3 samples, 0.01%)</title><rect x="88.9980%" y="373" width="0.0123%" height="15" fill="rgb(206,159,16)" fg:x="21752" fg:w="3"/><text x="89.2480%" y="383.50"></text></g><g><title>`0x7FF96A8C9726 (5 samples, 0.02%)</title><rect x="89.0225%" y="389" width="0.0205%" height="15" fill="rgb(244,77,30)" fg:x="21758" fg:w="5"/><text x="89.2725%" y="399.50"></text></g><g><title>`0x7FF96D77C194 (5 samples, 0.02%)</title><rect x="89.0225%" y="373" width="0.0205%" height="15" fill="rgb(218,69,12)" fg:x="21758" fg:w="5"/><text x="89.2725%" y="383.50"></text></g><g><title>`0x7FF96A8124BB (183 samples, 0.75%)</title><rect x="88.2984%" y="405" width="0.7487%" height="15" fill="rgb(212,87,7)" fg:x="21581" fg:w="183"/><text x="88.5484%" y="415.50"></text></g><g><title>`0x7FF96B5591FB (342 samples, 1.40%)</title><rect x="87.6519%" y="437" width="1.3993%" height="15" fill="rgb(245,114,25)" fg:x="21423" fg:w="342"/><text x="87.9019%" y="447.50"></text></g><g><title>`0x7FF96B557A18 (188 samples, 0.77%)</title><rect x="88.2820%" y="421" width="0.7692%" height="15" fill="rgb(210,61,42)" fg:x="21577" fg:w="188"/><text x="88.5320%" y="431.50"></text></g><g><title>`0x7FF94BFE6EEF (374 samples, 1.53%)</title><rect x="87.5292%" y="517" width="1.5302%" height="15" fill="rgb(211,52,33)" fg:x="21393" fg:w="374"/><text x="87.7792%" y="527.50"></text></g><g><title>`0x7FF94BFF55E9 (372 samples, 1.52%)</title><rect x="87.5373%" y="501" width="1.5220%" height="15" fill="rgb(234,58,33)" fg:x="21395" fg:w="372"/><text x="87.7873%" y="511.50"></text></g><g><title>`0x7FF94BFEA4A5 (372 samples, 1.52%)</title><rect x="87.5373%" y="485" width="1.5220%" height="15" fill="rgb(220,115,36)" fg:x="21395" fg:w="372"/><text x="87.7873%" y="495.50"></text></g><g><title>`0x7FF94BFF5A69 (372 samples, 1.52%)</title><rect x="87.5373%" y="469" width="1.5220%" height="15" fill="rgb(243,153,54)" fg:x="21395" fg:w="372"/><text x="87.7873%" y="479.50"></text></g><g><title>`0x7FF96B556E66 (372 samples, 1.52%)</title><rect x="87.5373%" y="453" width="1.5220%" height="15" fill="rgb(251,47,18)" fg:x="21395" fg:w="372"/><text x="87.7873%" y="463.50"></text></g><g><title>`0x7FF96B558E1E (4 samples, 0.02%)</title><rect x="89.0635%" y="389" width="0.0164%" height="15" fill="rgb(242,102,42)" fg:x="21768" fg:w="4"/><text x="89.3135%" y="399.50"></text></g><g><title>`0x7FF96B55973B (3 samples, 0.01%)</title><rect x="89.0676%" y="373" width="0.0123%" height="15" fill="rgb(234,31,38)" fg:x="21769" fg:w="3"/><text x="89.3176%" y="383.50"></text></g><g><title>`0x7FF96D640ECB (5 samples, 0.02%)</title><rect x="89.0921%" y="293" width="0.0205%" height="15" fill="rgb(221,117,51)" fg:x="21775" fg:w="5"/><text x="89.3421%" y="303.50"></text></g><g><title>`0x7FF96D63FF6E (15 samples, 0.06%)</title><rect x="89.0880%" y="309" width="0.0614%" height="15" fill="rgb(212,20,18)" fg:x="21774" fg:w="15"/><text x="89.3380%" y="319.50"></text></g><g><title>`0x7FF96D64137C (8 samples, 0.03%)</title><rect x="89.1166%" y="293" width="0.0327%" height="15" fill="rgb(245,133,36)" fg:x="21781" fg:w="8"/><text x="89.3666%" y="303.50"></text></g><g><title>`0x7FF96D669DC9 (8 samples, 0.03%)</title><rect x="89.1166%" y="277" width="0.0327%" height="15" fill="rgb(212,6,19)" fg:x="21781" fg:w="8"/><text x="89.3666%" y="287.50"></text></g><g><title>`0x7FF96D77C614 (8 samples, 0.03%)</title><rect x="89.1166%" y="261" width="0.0327%" height="15" fill="rgb(218,1,36)" fg:x="21781" fg:w="8"/><text x="89.3666%" y="271.50"></text></g><g><title>`0x7FF96D6C319C (22 samples, 0.09%)</title><rect x="89.0880%" y="325" width="0.0900%" height="15" fill="rgb(246,84,54)" fg:x="21774" fg:w="22"/><text x="89.3380%" y="335.50"></text></g><g><title>`0x7FF96D640406 (7 samples, 0.03%)</title><rect x="89.1494%" y="309" width="0.0286%" height="15" fill="rgb(242,110,6)" fg:x="21789" fg:w="7"/><text x="89.3994%" y="319.50"></text></g><g><title>`0x7FF96D6C4EC8 (7 samples, 0.03%)</title><rect x="89.1494%" y="293" width="0.0286%" height="15" fill="rgb(214,47,5)" fg:x="21789" fg:w="7"/><text x="89.3994%" y="303.50"></text></g><g><title>`0x7FF96D77C754 (7 samples, 0.03%)</title><rect x="89.1494%" y="277" width="0.0286%" height="15" fill="rgb(218,159,25)" fg:x="21789" fg:w="7"/><text x="89.3994%" y="287.50"></text></g><g><title>`0x7FF96B5578F0 (24 samples, 0.10%)</title><rect x="89.0880%" y="373" width="0.0982%" height="15" fill="rgb(215,211,28)" fg:x="21774" fg:w="24"/><text x="89.3380%" y="383.50"></text></g><g><title>`0x7FF96A886DE7 (24 samples, 0.10%)</title><rect x="89.0880%" y="357" width="0.0982%" height="15" fill="rgb(238,59,32)" fg:x="21774" fg:w="24"/><text x="89.3380%" y="367.50"></text></g><g><title>`0x7FF96D6C1D86 (24 samples, 0.10%)</title><rect x="89.0880%" y="341" width="0.0982%" height="15" fill="rgb(226,82,3)" fg:x="21774" fg:w="24"/><text x="89.3380%" y="351.50"></text></g><g><title>`0x7FF96D66A24A (6 samples, 0.02%)</title><rect x="89.1862%" y="325" width="0.0245%" height="15" fill="rgb(240,164,32)" fg:x="21798" fg:w="6"/><text x="89.4362%" y="335.50"></text></g><g><title>`0x7FF96D66A0B6 (6 samples, 0.02%)</title><rect x="89.1862%" y="309" width="0.0245%" height="15" fill="rgb(232,46,7)" fg:x="21798" fg:w="6"/><text x="89.4362%" y="319.50"></text></g><g><title>`0x7FF96D77C754 (6 samples, 0.02%)</title><rect x="89.1862%" y="293" width="0.0245%" height="15" fill="rgb(229,129,53)" fg:x="21798" fg:w="6"/><text x="89.4362%" y="303.50"></text></g><g><title>`0x7FF96A8C95A8 (8 samples, 0.03%)</title><rect x="89.1862%" y="341" width="0.0327%" height="15" fill="rgb(234,188,29)" fg:x="21798" fg:w="8"/><text x="89.4362%" y="351.50"></text></g><g><title>`0x7FF96A8C9616 (5 samples, 0.02%)</title><rect x="89.2189%" y="341" width="0.0205%" height="15" fill="rgb(246,141,4)" fg:x="21806" fg:w="5"/><text x="89.4689%" y="351.50"></text></g><g><title>`0x7FF96A86CA5B (5 samples, 0.02%)</title><rect x="89.2189%" y="325" width="0.0205%" height="15" fill="rgb(229,23,39)" fg:x="21806" fg:w="5"/><text x="89.4689%" y="335.50"></text></g><g><title>`0x7FF96A86CDBB (5 samples, 0.02%)</title><rect x="89.2189%" y="309" width="0.0205%" height="15" fill="rgb(206,12,3)" fg:x="21806" fg:w="5"/><text x="89.4689%" y="319.50"></text></g><g><title>`0x7FF96D77CA54 (5 samples, 0.02%)</title><rect x="89.2189%" y="293" width="0.0205%" height="15" fill="rgb(252,226,20)" fg:x="21806" fg:w="5"/><text x="89.4689%" y="303.50"></text></g><g><title>`0x7FF96A8C9662 (3 samples, 0.01%)</title><rect x="89.2394%" y="341" width="0.0123%" height="15" fill="rgb(216,123,35)" fg:x="21811" fg:w="3"/><text x="89.4894%" y="351.50"></text></g><g><title>`0x7FF96D77C8F4 (3 samples, 0.01%)</title><rect x="89.2394%" y="325" width="0.0123%" height="15" fill="rgb(212,68,40)" fg:x="21811" fg:w="3"/><text x="89.4894%" y="335.50"></text></g><g><title>`0x7FF96B55833F (47 samples, 0.19%)</title><rect x="89.0635%" y="405" width="0.1923%" height="15" fill="rgb(254,125,32)" fg:x="21768" fg:w="47"/><text x="89.3135%" y="415.50"></text></g><g><title>`0x7FF96B5591FB (41 samples, 0.17%)</title><rect x="89.0880%" y="389" width="0.1678%" height="15" fill="rgb(253,97,22)" fg:x="21774" fg:w="41"/><text x="89.3380%" y="399.50"></text></g><g><title>`0x7FF96B557A18 (17 samples, 0.07%)</title><rect x="89.1862%" y="373" width="0.0696%" height="15" fill="rgb(241,101,14)" fg:x="21798" fg:w="17"/><text x="89.4362%" y="383.50"></text></g><g><title>`0x7FF96A8124BB (17 samples, 0.07%)</title><rect x="89.1862%" y="357" width="0.0696%" height="15" fill="rgb(238,103,29)" fg:x="21798" fg:w="17"/><text x="89.4362%" y="367.50"></text></g><g><title>`0x7FF96D642EE8 (6 samples, 0.02%)</title><rect x="89.2558%" y="357" width="0.0245%" height="15" fill="rgb(233,195,47)" fg:x="21815" fg:w="6"/><text x="89.5058%" y="367.50"></text></g><g><title>`0x7FF96D77C4F4 (6 samples, 0.02%)</title><rect x="89.2558%" y="341" width="0.0245%" height="15" fill="rgb(246,218,30)" fg:x="21815" fg:w="6"/><text x="89.5058%" y="351.50"></text></g><g><title>`0x7FF96A8125D0 (17 samples, 0.07%)</title><rect x="89.2558%" y="373" width="0.0696%" height="15" fill="rgb(219,145,47)" fg:x="21815" fg:w="17"/><text x="89.5058%" y="383.50"></text></g><g><title>`0x7FF96D642EF6 (11 samples, 0.05%)</title><rect x="89.2803%" y="357" width="0.0450%" height="15" fill="rgb(243,12,26)" fg:x="21821" fg:w="11"/><text x="89.5303%" y="367.50"></text></g><g><title>`0x7FF96D77C194 (11 samples, 0.05%)</title><rect x="89.2803%" y="341" width="0.0450%" height="15" fill="rgb(214,87,16)" fg:x="21821" fg:w="11"/><text x="89.5303%" y="351.50"></text></g><g><title>`0x7FF96B558FE0 (27 samples, 0.11%)</title><rect x="89.2558%" y="389" width="0.1105%" height="15" fill="rgb(208,99,42)" fg:x="21815" fg:w="27"/><text x="89.5058%" y="399.50"></text></g><g><title>`0x7FF96A812608 (10 samples, 0.04%)</title><rect x="89.3253%" y="373" width="0.0409%" height="15" fill="rgb(253,99,2)" fg:x="21832" fg:w="10"/><text x="89.5753%" y="383.50"></text></g><g><title>`0x7FF96D77C4F4 (10 samples, 0.04%)</title><rect x="89.3253%" y="357" width="0.0409%" height="15" fill="rgb(220,168,23)" fg:x="21832" fg:w="10"/><text x="89.5753%" y="367.50"></text></g><g><title>`0x7FF96B5578C2 (4 samples, 0.02%)</title><rect x="89.3662%" y="373" width="0.0164%" height="15" fill="rgb(242,38,24)" fg:x="21842" fg:w="4"/><text x="89.6162%" y="383.50"></text></g><g><title>`0x7FF96BF2BEAC (4 samples, 0.02%)</title><rect x="89.3662%" y="357" width="0.0164%" height="15" fill="rgb(225,182,9)" fg:x="21842" fg:w="4"/><text x="89.6162%" y="367.50"></text></g><g><title>`0x7FF96D64A485 (10 samples, 0.04%)</title><rect x="89.3949%" y="277" width="0.0409%" height="15" fill="rgb(243,178,37)" fg:x="21849" fg:w="10"/><text x="89.6449%" y="287.50"></text></g><g><title>`0x7FF96D64A914 (10 samples, 0.04%)</title><rect x="89.3949%" y="261" width="0.0409%" height="15" fill="rgb(232,139,19)" fg:x="21849" fg:w="10"/><text x="89.6449%" y="271.50"></text></g><g><title>`0x7FF96D77C1F4 (10 samples, 0.04%)</title><rect x="89.3949%" y="245" width="0.0409%" height="15" fill="rgb(225,201,24)" fg:x="21849" fg:w="10"/><text x="89.6449%" y="255.50"></text></g><g><title>`0x7FF96D64A49E (7 samples, 0.03%)</title><rect x="89.4358%" y="277" width="0.0286%" height="15" fill="rgb(221,47,46)" fg:x="21859" fg:w="7"/><text x="89.6858%" y="287.50"></text></g><g><title>`0x7FF96D64AB71 (6 samples, 0.02%)</title><rect x="89.4399%" y="261" width="0.0245%" height="15" fill="rgb(249,23,13)" fg:x="21860" fg:w="6"/><text x="89.6899%" y="271.50"></text></g><g><title>`0x7FF96D77C294 (6 samples, 0.02%)</title><rect x="89.4399%" y="245" width="0.0245%" height="15" fill="rgb(219,9,5)" fg:x="21860" fg:w="6"/><text x="89.6899%" y="255.50"></text></g><g><title>`0x7FF96D64B20B (3 samples, 0.01%)</title><rect x="89.4644%" y="245" width="0.0123%" height="15" fill="rgb(254,171,16)" fg:x="21866" fg:w="3"/><text x="89.7144%" y="255.50"></text></g><g><title>`0x7FF96D77C294 (3 samples, 0.01%)</title><rect x="89.4644%" y="229" width="0.0123%" height="15" fill="rgb(230,171,20)" fg:x="21866" fg:w="3"/><text x="89.7144%" y="239.50"></text></g><g><title>`0x7FF96D64A4B6 (4 samples, 0.02%)</title><rect x="89.4644%" y="277" width="0.0164%" height="15" fill="rgb(210,71,41)" fg:x="21866" fg:w="4"/><text x="89.7144%" y="287.50"></text></g><g><title>`0x7FF96D64AC8D (4 samples, 0.02%)</title><rect x="89.4644%" y="261" width="0.0164%" height="15" fill="rgb(206,173,20)" fg:x="21866" fg:w="4"/><text x="89.7144%" y="271.50"></text></g><g><title>`0x7FF96D640ECB (22 samples, 0.09%)</title><rect x="89.3949%" y="293" width="0.0900%" height="15" fill="rgb(233,88,34)" fg:x="21849" fg:w="22"/><text x="89.6449%" y="303.50"></text></g><g><title>`0x7FF96D669DC9 (41 samples, 0.17%)</title><rect x="89.4890%" y="277" width="0.1678%" height="15" fill="rgb(223,209,46)" fg:x="21872" fg:w="41"/><text x="89.7390%" y="287.50"></text></g><g><title>`0x7FF96D77C614 (41 samples, 0.17%)</title><rect x="89.4890%" y="261" width="0.1678%" height="15" fill="rgb(250,43,18)" fg:x="21872" fg:w="41"/><text x="89.7390%" y="271.50"></text></g><g><title>`0x7FF96D640F8F (47 samples, 0.19%)</title><rect x="89.4849%" y="293" width="0.1923%" height="15" fill="rgb(208,13,10)" fg:x="21871" fg:w="47"/><text x="89.7349%" y="303.50"></text></g><g><title>`0x7FF96D669E9B (3 samples, 0.01%)</title><rect x="89.6649%" y="277" width="0.0123%" height="15" fill="rgb(212,200,36)" fg:x="21915" fg:w="3"/><text x="89.9149%" y="287.50"></text></g><g><title>`0x7FF96D639906 (3 samples, 0.01%)</title><rect x="89.6649%" y="261" width="0.0123%" height="15" fill="rgb(225,90,30)" fg:x="21915" fg:w="3"/><text x="89.9149%" y="271.50"></text></g><g><title>`0x7FF96D641C53 (5 samples, 0.02%)</title><rect x="89.6772%" y="261" width="0.0205%" height="15" fill="rgb(236,182,39)" fg:x="21918" fg:w="5"/><text x="89.9272%" y="271.50"></text></g><g><title>`0x7FF96D640FD2 (6 samples, 0.02%)</title><rect x="89.6772%" y="293" width="0.0245%" height="15" fill="rgb(212,144,35)" fg:x="21918" fg:w="6"/><text x="89.9272%" y="303.50"></text></g><g><title>`0x7FF96D66AF83 (6 samples, 0.02%)</title><rect x="89.6772%" y="277" width="0.0245%" height="15" fill="rgb(228,63,44)" fg:x="21918" fg:w="6"/><text x="89.9272%" y="287.50"></text></g><g><title>`0x7FF96D63FF6E (79 samples, 0.32%)</title><rect x="89.3908%" y="309" width="0.3232%" height="15" fill="rgb(228,109,6)" fg:x="21848" fg:w="79"/><text x="89.6408%" y="319.50"></text></g><g><title>`0x7FF96D64137C (3 samples, 0.01%)</title><rect x="89.7017%" y="293" width="0.0123%" height="15" fill="rgb(238,117,24)" fg:x="21924" fg:w="3"/><text x="89.9517%" y="303.50"></text></g><g><title>`0x7FF96D669DC9 (3 samples, 0.01%)</title><rect x="89.7017%" y="277" width="0.0123%" height="15" fill="rgb(242,26,26)" fg:x="21924" fg:w="3"/><text x="89.9517%" y="287.50"></text></g><g><title>`0x7FF96D77C614 (3 samples, 0.01%)</title><rect x="89.7017%" y="261" width="0.0123%" height="15" fill="rgb(221,92,48)" fg:x="21924" fg:w="3"/><text x="89.9517%" y="271.50"></text></g><g><title>`0x7FF96D6C284D (4 samples, 0.02%)</title><rect x="89.7181%" y="293" width="0.0164%" height="15" fill="rgb(209,209,32)" fg:x="21928" fg:w="4"/><text x="89.9681%" y="303.50"></text></g><g><title>`0x7FF96D6F1503 (4 samples, 0.02%)</title><rect x="89.7181%" y="277" width="0.0164%" height="15" fill="rgb(221,70,22)" fg:x="21928" fg:w="4"/><text x="89.9681%" y="287.50"></text></g><g><title>`0x7FF96D77C414 (4 samples, 0.02%)</title><rect x="89.7181%" y="261" width="0.0164%" height="15" fill="rgb(248,145,5)" fg:x="21928" fg:w="4"/><text x="89.9681%" y="271.50"></text></g><g><title>`0x7FF96D6C28DC (85 samples, 0.35%)</title><rect x="89.3908%" y="325" width="0.3478%" height="15" fill="rgb(226,116,26)" fg:x="21848" fg:w="85"/><text x="89.6408%" y="335.50"></text></g><g><title>`0x7FF96D63FFA7 (6 samples, 0.02%)</title><rect x="89.7140%" y="309" width="0.0245%" height="15" fill="rgb(244,5,17)" fg:x="21927" fg:w="6"/><text x="89.9640%" y="319.50"></text></g><g><title>`0x7FF96D64A49E (6 samples, 0.02%)</title><rect x="89.7508%" y="277" width="0.0245%" height="15" fill="rgb(252,159,33)" fg:x="21936" fg:w="6"/><text x="90.0008%" y="287.50"></text></g><g><title>`0x7FF96D64AB71 (6 samples, 0.02%)</title><rect x="89.7508%" y="261" width="0.0245%" height="15" fill="rgb(206,71,0)" fg:x="21936" fg:w="6"/><text x="90.0008%" y="271.50"></text></g><g><title>`0x7FF96D77C294 (6 samples, 0.02%)</title><rect x="89.7508%" y="245" width="0.0245%" height="15" fill="rgb(233,118,54)" fg:x="21936" fg:w="6"/><text x="90.0008%" y="255.50"></text></g><g><title>`0x7FF96D640ECB (12 samples, 0.05%)</title><rect x="89.7386%" y="293" width="0.0491%" height="15" fill="rgb(234,83,48)" fg:x="21933" fg:w="12"/><text x="89.9886%" y="303.50"></text></g><g><title>`0x7FF96D669DC9 (20 samples, 0.08%)</title><rect x="89.7917%" y="277" width="0.0818%" height="15" fill="rgb(228,3,54)" fg:x="21946" fg:w="20"/><text x="90.0417%" y="287.50"></text></g><g><title>`0x7FF96D77C614 (20 samples, 0.08%)</title><rect x="89.7917%" y="261" width="0.0818%" height="15" fill="rgb(226,155,13)" fg:x="21946" fg:w="20"/><text x="90.0417%" y="271.50"></text></g><g><title>`0x7FF96D640F8F (27 samples, 0.11%)</title><rect x="89.7877%" y="293" width="0.1105%" height="15" fill="rgb(241,28,37)" fg:x="21945" fg:w="27"/><text x="90.0377%" y="303.50"></text></g><g><title>`0x7FF96D669E21 (6 samples, 0.02%)</title><rect x="89.8736%" y="277" width="0.0245%" height="15" fill="rgb(233,93,10)" fg:x="21966" fg:w="6"/><text x="90.1236%" y="287.50"></text></g><g><title>`0x7FF96D77C8F4 (6 samples, 0.02%)</title><rect x="89.8736%" y="261" width="0.0245%" height="15" fill="rgb(225,113,19)" fg:x="21966" fg:w="6"/><text x="90.1236%" y="271.50"></text></g><g><title>`0x7FF96D64137C (6 samples, 0.02%)</title><rect x="89.9022%" y="293" width="0.0245%" height="15" fill="rgb(241,2,18)" fg:x="21973" fg:w="6"/><text x="90.1522%" y="303.50"></text></g><g><title>`0x7FF96D669DC9 (6 samples, 0.02%)</title><rect x="89.9022%" y="277" width="0.0245%" height="15" fill="rgb(228,207,21)" fg:x="21973" fg:w="6"/><text x="90.1522%" y="287.50"></text></g><g><title>`0x7FF96D77C614 (6 samples, 0.02%)</title><rect x="89.9022%" y="261" width="0.0245%" height="15" fill="rgb(213,211,35)" fg:x="21973" fg:w="6"/><text x="90.1522%" y="271.50"></text></g><g><title>`0x7FF96D63FF6E (48 samples, 0.20%)</title><rect x="89.7386%" y="309" width="0.1964%" height="15" fill="rgb(209,83,10)" fg:x="21933" fg:w="48"/><text x="89.9886%" y="319.50"></text></g><g><title>`0x7FF96D6C319C (50 samples, 0.20%)</title><rect x="89.7386%" y="325" width="0.2046%" height="15" fill="rgb(209,164,1)" fg:x="21933" fg:w="50"/><text x="89.9886%" y="335.50"></text></g><g><title>`0x7FF96A886DE7 (139 samples, 0.57%)</title><rect x="89.3826%" y="357" width="0.5687%" height="15" fill="rgb(213,184,43)" fg:x="21846" fg:w="139"/><text x="89.6326%" y="367.50"></text></g><g><title>`0x7FF96D6C1D86 (139 samples, 0.57%)</title><rect x="89.3826%" y="341" width="0.5687%" height="15" fill="rgb(231,61,34)" fg:x="21846" fg:w="139"/><text x="89.6326%" y="351.50"></text></g><g><title>`0x7FF96B5578F0 (140 samples, 0.57%)</title><rect x="89.3826%" y="373" width="0.5728%" height="15" fill="rgb(235,75,3)" fg:x="21846" fg:w="140"/><text x="89.6326%" y="383.50"></text></g><g><title>`0x7FF96B55790E (9 samples, 0.04%)</title><rect x="89.9554%" y="373" width="0.0368%" height="15" fill="rgb(220,106,47)" fg:x="21986" fg:w="9"/><text x="90.2054%" y="383.50"></text></g><g><title>`0x7FF96A8E6482 (9 samples, 0.04%)</title><rect x="89.9554%" y="357" width="0.0368%" height="15" fill="rgb(210,196,33)" fg:x="21986" fg:w="9"/><text x="90.2054%" y="367.50"></text></g><g><title>`0x7FF96D6C23C4 (9 samples, 0.04%)</title><rect x="89.9554%" y="341" width="0.0368%" height="15" fill="rgb(229,154,42)" fg:x="21986" fg:w="9"/><text x="90.2054%" y="351.50"></text></g><g><title>`0x7FF96D6C3F8F (9 samples, 0.04%)</title><rect x="89.9554%" y="325" width="0.0368%" height="15" fill="rgb(228,114,26)" fg:x="21986" fg:w="9"/><text x="90.2054%" y="335.50"></text></g><g><title>`0x7FF96D77C414 (9 samples, 0.04%)</title><rect x="89.9554%" y="309" width="0.0368%" height="15" fill="rgb(208,144,1)" fg:x="21986" fg:w="9"/><text x="90.2054%" y="319.50"></text></g><g><title>`0x7FF96B557922 (13 samples, 0.05%)</title><rect x="89.9922%" y="373" width="0.0532%" height="15" fill="rgb(239,112,37)" fg:x="21995" fg:w="13"/><text x="90.2422%" y="383.50"></text></g><g><title>`0x7FF96A8871E3 (13 samples, 0.05%)</title><rect x="89.9922%" y="357" width="0.0532%" height="15" fill="rgb(210,96,50)" fg:x="21995" fg:w="13"/><text x="90.2422%" y="367.50"></text></g><g><title>`0x7FF96D6C23C4 (13 samples, 0.05%)</title><rect x="89.9922%" y="341" width="0.0532%" height="15" fill="rgb(222,178,2)" fg:x="21995" fg:w="13"/><text x="90.2422%" y="351.50"></text></g><g><title>`0x7FF96D6C3F8F (13 samples, 0.05%)</title><rect x="89.9922%" y="325" width="0.0532%" height="15" fill="rgb(226,74,18)" fg:x="21995" fg:w="13"/><text x="90.2422%" y="335.50"></text></g><g><title>`0x7FF96D77C414 (13 samples, 0.05%)</title><rect x="89.9922%" y="309" width="0.0532%" height="15" fill="rgb(225,67,54)" fg:x="21995" fg:w="13"/><text x="90.2422%" y="319.50"></text></g><g><title>`0x7FF96B55795A (4 samples, 0.02%)</title><rect x="90.0495%" y="373" width="0.0164%" height="15" fill="rgb(251,92,32)" fg:x="22009" fg:w="4"/><text x="90.2995%" y="383.50"></text></g><g><title>`0x7FF96A812495 (3 samples, 0.01%)</title><rect x="90.0741%" y="357" width="0.0123%" height="15" fill="rgb(228,149,22)" fg:x="22015" fg:w="3"/><text x="90.3241%" y="367.50"></text></g><g><title>`0x7FF96D6B824D (3 samples, 0.01%)</title><rect x="90.0741%" y="341" width="0.0123%" height="15" fill="rgb(243,54,13)" fg:x="22015" fg:w="3"/><text x="90.3241%" y="351.50"></text></g><g><title>`0x7FF96D6B830D (3 samples, 0.01%)</title><rect x="90.0741%" y="325" width="0.0123%" height="15" fill="rgb(243,180,28)" fg:x="22015" fg:w="3"/><text x="90.3241%" y="335.50"></text></g><g><title>`0x7FF96D6B86E3 (3 samples, 0.01%)</title><rect x="90.0741%" y="309" width="0.0123%" height="15" fill="rgb(208,167,24)" fg:x="22015" fg:w="3"/><text x="90.3241%" y="319.50"></text></g><g><title>`0x7FF96D6B88EF (3 samples, 0.01%)</title><rect x="90.0741%" y="293" width="0.0123%" height="15" fill="rgb(245,73,45)" fg:x="22015" fg:w="3"/><text x="90.3241%" y="303.50"></text></g><g><title>`0x7FF96D66A24A (47 samples, 0.19%)</title><rect x="90.0863%" y="325" width="0.1923%" height="15" fill="rgb(237,203,48)" fg:x="22018" fg:w="47"/><text x="90.3363%" y="335.50"></text></g><g><title>`0x7FF96D66A0B6 (47 samples, 0.19%)</title><rect x="90.0863%" y="309" width="0.1923%" height="15" fill="rgb(211,197,16)" fg:x="22018" fg:w="47"/><text x="90.3363%" y="319.50"></text></g><g><title>`0x7FF96D77C754 (47 samples, 0.19%)</title><rect x="90.0863%" y="293" width="0.1923%" height="15" fill="rgb(243,99,51)" fg:x="22018" fg:w="47"/><text x="90.3363%" y="303.50"></text></g><g><title>`0x7FF96A8C95A8 (80 samples, 0.33%)</title><rect x="90.0863%" y="341" width="0.3273%" height="15" fill="rgb(215,123,29)" fg:x="22018" fg:w="80"/><text x="90.3363%" y="351.50"></text></g><g><title>`0x7FF96D66A634 (32 samples, 0.13%)</title><rect x="90.2827%" y="325" width="0.1309%" height="15" fill="rgb(239,186,37)" fg:x="22066" fg:w="32"/><text x="90.5327%" y="335.50"></text></g><g><title>`0x7FF96D77C754 (32 samples, 0.13%)</title><rect x="90.2827%" y="309" width="0.1309%" height="15" fill="rgb(252,136,39)" fg:x="22066" fg:w="32"/><text x="90.5327%" y="319.50"></text></g><g><title>`0x7FF96A8C9616 (57 samples, 0.23%)</title><rect x="90.4177%" y="341" width="0.2332%" height="15" fill="rgb(223,213,32)" fg:x="22099" fg:w="57"/><text x="90.6677%" y="351.50"></text></g><g><title>`0x7FF96A86CA5B (57 samples, 0.23%)</title><rect x="90.4177%" y="325" width="0.2332%" height="15" fill="rgb(233,115,5)" fg:x="22099" fg:w="57"/><text x="90.6677%" y="335.50"></text></g><g><title>`0x7FF96A86CDBB (57 samples, 0.23%)</title><rect x="90.4177%" y="309" width="0.2332%" height="15" fill="rgb(207,226,44)" fg:x="22099" fg:w="57"/><text x="90.6677%" y="319.50"></text></g><g><title>`0x7FF96D77CA54 (57 samples, 0.23%)</title><rect x="90.4177%" y="293" width="0.2332%" height="15" fill="rgb(208,126,0)" fg:x="22099" fg:w="57"/><text x="90.6677%" y="303.50"></text></g><g><title>`0x7FF96A8C9662 (13 samples, 0.05%)</title><rect x="90.6510%" y="341" width="0.0532%" height="15" fill="rgb(244,66,21)" fg:x="22156" fg:w="13"/><text x="90.9010%" y="351.50"></text></g><g><title>`0x7FF96D77C8F4 (13 samples, 0.05%)</title><rect x="90.6510%" y="325" width="0.0532%" height="15" fill="rgb(222,97,12)" fg:x="22156" fg:w="13"/><text x="90.9010%" y="335.50"></text></g><g><title>`0x7FF96A8C96DB (4 samples, 0.02%)</title><rect x="90.7123%" y="341" width="0.0164%" height="15" fill="rgb(219,213,19)" fg:x="22171" fg:w="4"/><text x="90.9623%" y="351.50"></text></g><g><title>`0x7FF96D639906 (4 samples, 0.02%)</title><rect x="90.7123%" y="325" width="0.0164%" height="15" fill="rgb(252,169,30)" fg:x="22171" fg:w="4"/><text x="90.9623%" y="335.50"></text></g><g><title>`0x7FF96A8124BB (173 samples, 0.71%)</title><rect x="90.0863%" y="357" width="0.7078%" height="15" fill="rgb(206,32,51)" fg:x="22018" fg:w="173"/><text x="90.3363%" y="367.50"></text></g><g><title>`0x7FF96A8C9726 (15 samples, 0.06%)</title><rect x="90.7328%" y="341" width="0.0614%" height="15" fill="rgb(250,172,42)" fg:x="22176" fg:w="15"/><text x="90.9828%" y="351.50"></text></g><g><title>`0x7FF96D77C194 (15 samples, 0.06%)</title><rect x="90.7328%" y="325" width="0.0614%" height="15" fill="rgb(209,34,43)" fg:x="22176" fg:w="15"/><text x="90.9828%" y="335.50"></text></g><g><title>`0x7FF96B5590D1 (350 samples, 1.43%)</title><rect x="89.3662%" y="389" width="1.4320%" height="15" fill="rgb(223,11,35)" fg:x="21842" fg:w="350"/><text x="89.6162%" y="399.50"></text></g><g><title>`0x7FF96B557A18 (177 samples, 0.72%)</title><rect x="90.0741%" y="373" width="0.7242%" height="15" fill="rgb(251,219,26)" fg:x="22015" fg:w="177"/><text x="90.3241%" y="383.50"></text></g><g><title>`0x7FF96B5584E2 (378 samples, 1.55%)</title><rect x="89.2558%" y="405" width="1.5466%" height="15" fill="rgb(231,119,3)" fg:x="21815" fg:w="378"/><text x="89.5058%" y="415.50"></text></g><g><title>`0x7FF96B558702 (3 samples, 0.01%)</title><rect x="90.8023%" y="405" width="0.0123%" height="15" fill="rgb(216,97,11)" fg:x="22193" fg:w="3"/><text x="91.0523%" y="415.50"></text></g><g><title>`0x7FF96B558D0C (3 samples, 0.01%)</title><rect x="90.8023%" y="389" width="0.0123%" height="15" fill="rgb(223,59,9)" fg:x="22193" fg:w="3"/><text x="91.0523%" y="399.50"></text></g><g><title>`0x7FF96BEFF761 (3 samples, 0.01%)</title><rect x="90.8023%" y="373" width="0.0123%" height="15" fill="rgb(233,93,31)" fg:x="22193" fg:w="3"/><text x="91.0523%" y="383.50"></text></g><g><title>`0x7FF96BEFF80C (3 samples, 0.01%)</title><rect x="90.8023%" y="357" width="0.0123%" height="15" fill="rgb(239,81,33)" fg:x="22193" fg:w="3"/><text x="91.0523%" y="367.50"></text></g><g><title>`0x7FF96B55CAE7 (436 samples, 1.78%)</title><rect x="89.0635%" y="421" width="1.7839%" height="15" fill="rgb(213,120,34)" fg:x="21768" fg:w="436"/><text x="89.3135%" y="431.50">`..</text></g><g><title>`0x7FF94BFE6305 (439 samples, 1.80%)</title><rect x="89.0594%" y="501" width="1.7962%" height="15" fill="rgb(243,49,53)" fg:x="21767" fg:w="439"/><text x="89.3094%" y="511.50">`..</text></g><g><title>`0x7FF96A82C64B (439 samples, 1.80%)</title><rect x="89.0594%" y="485" width="1.7962%" height="15" fill="rgb(247,216,33)" fg:x="21767" fg:w="439"/><text x="89.3094%" y="495.50">`..</text></g><g><title>`0x7FF96A84217F (439 samples, 1.80%)</title><rect x="89.0594%" y="469" width="1.7962%" height="15" fill="rgb(226,26,14)" fg:x="21767" fg:w="439"/><text x="89.3094%" y="479.50">`..</text></g><g><title>`0x7FF96B57D15B (439 samples, 1.80%)</title><rect x="89.0594%" y="453" width="1.7962%" height="15" fill="rgb(215,49,53)" fg:x="21767" fg:w="439"/><text x="89.3094%" y="463.50">`..</text></g><g><title>`0x7FF96B57D4C2 (439 samples, 1.80%)</title><rect x="89.0594%" y="437" width="1.7962%" height="15" fill="rgb(245,162,40)" fg:x="21767" fg:w="439"/><text x="89.3094%" y="447.50">`..</text></g><g><title>`0x7FF96B55833F (3 samples, 0.01%)</title><rect x="90.8596%" y="405" width="0.0123%" height="15" fill="rgb(229,68,17)" fg:x="22207" fg:w="3"/><text x="91.1096%" y="415.50"></text></g><g><title>`0x7FF96A8125D0 (14 samples, 0.06%)</title><rect x="90.8760%" y="373" width="0.0573%" height="15" fill="rgb(213,182,10)" fg:x="22211" fg:w="14"/><text x="91.1260%" y="383.50"></text></g><g><title>`0x7FF96D642EF6 (12 samples, 0.05%)</title><rect x="90.8842%" y="357" width="0.0491%" height="15" fill="rgb(245,125,30)" fg:x="22213" fg:w="12"/><text x="91.1342%" y="367.50"></text></g><g><title>`0x7FF96D77C194 (12 samples, 0.05%)</title><rect x="90.8842%" y="341" width="0.0491%" height="15" fill="rgb(232,202,2)" fg:x="22213" fg:w="12"/><text x="91.1342%" y="351.50"></text></g><g><title>`0x7FF96B558FE0 (26 samples, 0.11%)</title><rect x="90.8760%" y="389" width="0.1064%" height="15" fill="rgb(237,140,51)" fg:x="22211" fg:w="26"/><text x="91.1260%" y="399.50"></text></g><g><title>`0x7FF96A812608 (12 samples, 0.05%)</title><rect x="90.9333%" y="373" width="0.0491%" height="15" fill="rgb(236,157,25)" fg:x="22225" fg:w="12"/><text x="91.1833%" y="383.50"></text></g><g><title>`0x7FF96D77C4F4 (11 samples, 0.05%)</title><rect x="90.9374%" y="357" width="0.0450%" height="15" fill="rgb(219,209,0)" fg:x="22226" fg:w="11"/><text x="91.1874%" y="367.50"></text></g><g><title>`0x7FF96BF2BEAC (5 samples, 0.02%)</title><rect x="90.9865%" y="357" width="0.0205%" height="15" fill="rgb(240,116,54)" fg:x="22238" fg:w="5"/><text x="91.2365%" y="367.50"></text></g><g><title>`0x7FF96B5578C2 (6 samples, 0.02%)</title><rect x="90.9865%" y="373" width="0.0245%" height="15" fill="rgb(216,10,36)" fg:x="22238" fg:w="6"/><text x="91.2365%" y="383.50"></text></g><g><title>`0x7FF96D64A485 (4 samples, 0.02%)</title><rect x="91.0396%" y="277" width="0.0164%" height="15" fill="rgb(222,72,44)" fg:x="22251" fg:w="4"/><text x="91.2896%" y="287.50"></text></g><g><title>`0x7FF96D64A914 (4 samples, 0.02%)</title><rect x="91.0396%" y="261" width="0.0164%" height="15" fill="rgb(232,159,9)" fg:x="22251" fg:w="4"/><text x="91.2896%" y="271.50"></text></g><g><title>`0x7FF96D77C1F4 (4 samples, 0.02%)</title><rect x="91.0396%" y="245" width="0.0164%" height="15" fill="rgb(210,39,32)" fg:x="22251" fg:w="4"/><text x="91.2896%" y="255.50"></text></g><g><title>`0x7FF96D64A49E (5 samples, 0.02%)</title><rect x="91.0560%" y="277" width="0.0205%" height="15" fill="rgb(216,194,45)" fg:x="22255" fg:w="5"/><text x="91.3060%" y="287.50"></text></g><g><title>`0x7FF96D64AB71 (5 samples, 0.02%)</title><rect x="91.0560%" y="261" width="0.0205%" height="15" fill="rgb(218,18,35)" fg:x="22255" fg:w="5"/><text x="91.3060%" y="271.50"></text></g><g><title>`0x7FF96D77C294 (5 samples, 0.02%)</title><rect x="91.0560%" y="245" width="0.0205%" height="15" fill="rgb(207,83,51)" fg:x="22255" fg:w="5"/><text x="91.3060%" y="255.50"></text></g><g><title>`0x7FF96D64A4B6 (7 samples, 0.03%)</title><rect x="91.0765%" y="277" width="0.0286%" height="15" fill="rgb(225,63,43)" fg:x="22260" fg:w="7"/><text x="91.3265%" y="287.50"></text></g><g><title>`0x7FF96D64AC8D (7 samples, 0.03%)</title><rect x="91.0765%" y="261" width="0.0286%" height="15" fill="rgb(207,57,36)" fg:x="22260" fg:w="7"/><text x="91.3265%" y="271.50"></text></g><g><title>`0x7FF96D64B20B (7 samples, 0.03%)</title><rect x="91.0765%" y="245" width="0.0286%" height="15" fill="rgb(216,99,33)" fg:x="22260" fg:w="7"/><text x="91.3265%" y="255.50"></text></g><g><title>`0x7FF96D77C294 (7 samples, 0.03%)</title><rect x="91.0765%" y="229" width="0.0286%" height="15" fill="rgb(225,42,16)" fg:x="22260" fg:w="7"/><text x="91.3265%" y="239.50"></text></g><g><title>`0x7FF96D640ECB (18 samples, 0.07%)</title><rect x="91.0396%" y="293" width="0.0736%" height="15" fill="rgb(220,201,45)" fg:x="22251" fg:w="18"/><text x="91.2896%" y="303.50"></text></g><g><title>`0x7FF96D669DC9 (43 samples, 0.18%)</title><rect x="91.1133%" y="277" width="0.1759%" height="15" fill="rgb(225,33,4)" fg:x="22269" fg:w="43"/><text x="91.3633%" y="287.50"></text></g><g><title>`0x7FF96D77C614 (43 samples, 0.18%)</title><rect x="91.1133%" y="261" width="0.1759%" height="15" fill="rgb(224,33,50)" fg:x="22269" fg:w="43"/><text x="91.3633%" y="271.50"></text></g><g><title>`0x7FF96D640F8F (45 samples, 0.18%)</title><rect x="91.1133%" y="293" width="0.1841%" height="15" fill="rgb(246,198,51)" fg:x="22269" fg:w="45"/><text x="91.3633%" y="303.50"></text></g><g><title>`0x7FF96D640FD2 (5 samples, 0.02%)</title><rect x="91.2974%" y="293" width="0.0205%" height="15" fill="rgb(205,22,4)" fg:x="22314" fg:w="5"/><text x="91.5474%" y="303.50"></text></g><g><title>`0x7FF96D66AF83 (5 samples, 0.02%)</title><rect x="91.2974%" y="277" width="0.0205%" height="15" fill="rgb(206,3,8)" fg:x="22314" fg:w="5"/><text x="91.5474%" y="287.50"></text></g><g><title>`0x7FF96D641C6E (4 samples, 0.02%)</title><rect x="91.3015%" y="261" width="0.0164%" height="15" fill="rgb(251,23,15)" fg:x="22315" fg:w="4"/><text x="91.5515%" y="271.50"></text></g><g><title>`0x7FF96D63FF6E (74 samples, 0.30%)</title><rect x="91.0315%" y="309" width="0.3028%" height="15" fill="rgb(252,88,28)" fg:x="22249" fg:w="74"/><text x="91.2815%" y="319.50"></text></g><g><title>`0x7FF96D64137C (4 samples, 0.02%)</title><rect x="91.3179%" y="293" width="0.0164%" height="15" fill="rgb(212,127,14)" fg:x="22319" fg:w="4"/><text x="91.5679%" y="303.50"></text></g><g><title>`0x7FF96D6C28DC (85 samples, 0.35%)</title><rect x="91.0315%" y="325" width="0.3478%" height="15" fill="rgb(247,145,37)" fg:x="22249" fg:w="85"/><text x="91.2815%" y="335.50"></text></g><g><title>`0x7FF96D63FFA7 (11 samples, 0.05%)</title><rect x="91.3342%" y="309" width="0.0450%" height="15" fill="rgb(209,117,53)" fg:x="22323" fg:w="11"/><text x="91.5842%" y="319.50"></text></g><g><title>`0x7FF96D6C284D (10 samples, 0.04%)</title><rect x="91.3383%" y="293" width="0.0409%" height="15" fill="rgb(212,90,42)" fg:x="22324" fg:w="10"/><text x="91.5883%" y="303.50"></text></g><g><title>`0x7FF96D6F1503 (10 samples, 0.04%)</title><rect x="91.3383%" y="277" width="0.0409%" height="15" fill="rgb(218,164,37)" fg:x="22324" fg:w="10"/><text x="91.5883%" y="287.50"></text></g><g><title>`0x7FF96D77C414 (10 samples, 0.04%)</title><rect x="91.3383%" y="261" width="0.0409%" height="15" fill="rgb(246,65,34)" fg:x="22324" fg:w="10"/><text x="91.5883%" y="271.50"></text></g><g><title>`0x7FF96D64A485 (6 samples, 0.02%)</title><rect x="91.3915%" y="277" width="0.0245%" height="15" fill="rgb(231,100,33)" fg:x="22337" fg:w="6"/><text x="91.6415%" y="287.50"></text></g><g><title>`0x7FF96D64A914 (6 samples, 0.02%)</title><rect x="91.3915%" y="261" width="0.0245%" height="15" fill="rgb(228,126,14)" fg:x="22337" fg:w="6"/><text x="91.6415%" y="271.50"></text></g><g><title>`0x7FF96D77C1F4 (6 samples, 0.02%)</title><rect x="91.3915%" y="245" width="0.0245%" height="15" fill="rgb(215,173,21)" fg:x="22337" fg:w="6"/><text x="91.6415%" y="255.50"></text></g><g><title>`0x7FF96D640ECB (10 samples, 0.04%)</title><rect x="91.3915%" y="293" width="0.0409%" height="15" fill="rgb(210,6,40)" fg:x="22337" fg:w="10"/><text x="91.6415%" y="303.50"></text></g><g><title>`0x7FF96D669DC9 (33 samples, 0.14%)</title><rect x="91.4324%" y="277" width="0.1350%" height="15" fill="rgb(212,48,18)" fg:x="22347" fg:w="33"/><text x="91.6824%" y="287.50"></text></g><g><title>`0x7FF96D77C614 (33 samples, 0.14%)</title><rect x="91.4324%" y="261" width="0.1350%" height="15" fill="rgb(230,214,11)" fg:x="22347" fg:w="33"/><text x="91.6824%" y="271.50"></text></g><g><title>`0x7FF96D640F8F (34 samples, 0.14%)</title><rect x="91.4324%" y="293" width="0.1391%" height="15" fill="rgb(254,105,39)" fg:x="22347" fg:w="34"/><text x="91.6824%" y="303.50"></text></g><g><title>`0x7FF96D669DC9 (21 samples, 0.09%)</title><rect x="91.5756%" y="277" width="0.0859%" height="15" fill="rgb(245,158,5)" fg:x="22382" fg:w="21"/><text x="91.8256%" y="287.50"></text></g><g><title>`0x7FF96D77C614 (21 samples, 0.09%)</title><rect x="91.5756%" y="261" width="0.0859%" height="15" fill="rgb(249,208,11)" fg:x="22382" fg:w="21"/><text x="91.8256%" y="271.50"></text></g><g><title>`0x7FF96D63FF6E (68 samples, 0.28%)</title><rect x="91.3874%" y="309" width="0.2782%" height="15" fill="rgb(210,39,28)" fg:x="22336" fg:w="68"/><text x="91.6374%" y="319.50"></text></g><g><title>`0x7FF96D64137C (23 samples, 0.09%)</title><rect x="91.5715%" y="293" width="0.0941%" height="15" fill="rgb(211,56,53)" fg:x="22381" fg:w="23"/><text x="91.8215%" y="303.50"></text></g><g><title>`0x7FF96D6C319C (154 samples, 0.63%)</title><rect x="91.3874%" y="325" width="0.6301%" height="15" fill="rgb(226,201,30)" fg:x="22336" fg:w="154"/><text x="91.6374%" y="335.50"></text></g><g><title>`0x7FF96D640406 (85 samples, 0.35%)</title><rect x="91.6697%" y="309" width="0.3478%" height="15" fill="rgb(239,101,34)" fg:x="22405" fg:w="85"/><text x="91.9197%" y="319.50"></text></g><g><title>`0x7FF96D6C4EC8 (84 samples, 0.34%)</title><rect x="91.6738%" y="293" width="0.3437%" height="15" fill="rgb(226,209,5)" fg:x="22406" fg:w="84"/><text x="91.9238%" y="303.50"></text></g><g><title>`0x7FF96D77C754 (84 samples, 0.34%)</title><rect x="91.6738%" y="277" width="0.3437%" height="15" fill="rgb(250,105,47)" fg:x="22406" fg:w="84"/><text x="91.9238%" y="287.50"></text></g><g><title>`0x7FF96B5578F0 (248 samples, 1.01%)</title><rect x="91.0110%" y="373" width="1.0147%" height="15" fill="rgb(230,72,3)" fg:x="22244" fg:w="248"/><text x="91.2610%" y="383.50"></text></g><g><title>`0x7FF96A886DE7 (248 samples, 1.01%)</title><rect x="91.0110%" y="357" width="1.0147%" height="15" fill="rgb(232,218,39)" fg:x="22244" fg:w="248"/><text x="91.2610%" y="367.50"></text></g><g><title>`0x7FF96D6C1D86 (248 samples, 1.01%)</title><rect x="91.0110%" y="341" width="1.0147%" height="15" fill="rgb(248,166,6)" fg:x="22244" fg:w="248"/><text x="91.2610%" y="351.50"></text></g><g><title>`0x7FF96B55790E (7 samples, 0.03%)</title><rect x="92.0257%" y="373" width="0.0286%" height="15" fill="rgb(247,89,20)" fg:x="22492" fg:w="7"/><text x="92.2757%" y="383.50"></text></g><g><title>`0x7FF96A8E6482 (7 samples, 0.03%)</title><rect x="92.0257%" y="357" width="0.0286%" height="15" fill="rgb(248,130,54)" fg:x="22492" fg:w="7"/><text x="92.2757%" y="367.50"></text></g><g><title>`0x7FF96D6C23C4 (7 samples, 0.03%)</title><rect x="92.0257%" y="341" width="0.0286%" height="15" fill="rgb(234,196,4)" fg:x="22492" fg:w="7"/><text x="92.2757%" y="351.50"></text></g><g><title>`0x7FF96D6C3F8F (6 samples, 0.02%)</title><rect x="92.0298%" y="325" width="0.0245%" height="15" fill="rgb(250,143,31)" fg:x="22493" fg:w="6"/><text x="92.2798%" y="335.50"></text></g><g><title>`0x7FF96D77C414 (6 samples, 0.02%)</title><rect x="92.0298%" y="309" width="0.0245%" height="15" fill="rgb(211,110,34)" fg:x="22493" fg:w="6"/><text x="92.2798%" y="319.50"></text></g><g><title>`0x7FF96B557922 (7 samples, 0.03%)</title><rect x="92.0543%" y="373" width="0.0286%" height="15" fill="rgb(215,124,48)" fg:x="22499" fg:w="7"/><text x="92.3043%" y="383.50"></text></g><g><title>`0x7FF96A8871E3 (7 samples, 0.03%)</title><rect x="92.0543%" y="357" width="0.0286%" height="15" fill="rgb(216,46,13)" fg:x="22499" fg:w="7"/><text x="92.3043%" y="367.50"></text></g><g><title>`0x7FF96D6C23C4 (7 samples, 0.03%)</title><rect x="92.0543%" y="341" width="0.0286%" height="15" fill="rgb(205,184,25)" fg:x="22499" fg:w="7"/><text x="92.3043%" y="351.50"></text></g><g><title>`0x7FF96D6C3F8F (4 samples, 0.02%)</title><rect x="92.0666%" y="325" width="0.0164%" height="15" fill="rgb(228,1,10)" fg:x="22502" fg:w="4"/><text x="92.3166%" y="335.50"></text></g><g><title>`0x7FF96D77C414 (4 samples, 0.02%)</title><rect x="92.0666%" y="309" width="0.0164%" height="15" fill="rgb(213,116,27)" fg:x="22502" fg:w="4"/><text x="92.3166%" y="319.50"></text></g><g><title>`0x7FF96D66A24A (51 samples, 0.21%)</title><rect x="92.0952%" y="325" width="0.2087%" height="15" fill="rgb(241,95,50)" fg:x="22509" fg:w="51"/><text x="92.3452%" y="335.50"></text></g><g><title>`0x7FF96D66A0B6 (50 samples, 0.20%)</title><rect x="92.0993%" y="309" width="0.2046%" height="15" fill="rgb(238,48,32)" fg:x="22510" fg:w="50"/><text x="92.3493%" y="319.50"></text></g><g><title>`0x7FF96D77C754 (50 samples, 0.20%)</title><rect x="92.0993%" y="293" width="0.2046%" height="15" fill="rgb(235,113,49)" fg:x="22510" fg:w="50"/><text x="92.3493%" y="303.50"></text></g><g><title>`0x7FF96A8C95A8 (80 samples, 0.33%)</title><rect x="92.0952%" y="341" width="0.3273%" height="15" fill="rgb(205,127,43)" fg:x="22509" fg:w="80"/><text x="92.3452%" y="351.50"></text></g><g><title>`0x7FF96D66A634 (28 samples, 0.11%)</title><rect x="92.3080%" y="325" width="0.1146%" height="15" fill="rgb(250,162,2)" fg:x="22561" fg:w="28"/><text x="92.5580%" y="335.50"></text></g><g><title>`0x7FF96D77C754 (28 samples, 0.11%)</title><rect x="92.3080%" y="309" width="0.1146%" height="15" fill="rgb(220,13,41)" fg:x="22561" fg:w="28"/><text x="92.5580%" y="319.50"></text></g><g><title>`0x7FF96A8C9616 (71 samples, 0.29%)</title><rect x="92.4226%" y="341" width="0.2905%" height="15" fill="rgb(249,221,25)" fg:x="22589" fg:w="71"/><text x="92.6726%" y="351.50"></text></g><g><title>`0x7FF96A86CA5B (71 samples, 0.29%)</title><rect x="92.4226%" y="325" width="0.2905%" height="15" fill="rgb(215,208,19)" fg:x="22589" fg:w="71"/><text x="92.6726%" y="335.50"></text></g><g><title>`0x7FF96A86CDBB (70 samples, 0.29%)</title><rect x="92.4267%" y="309" width="0.2864%" height="15" fill="rgb(236,175,2)" fg:x="22590" fg:w="70"/><text x="92.6767%" y="319.50"></text></g><g><title>`0x7FF96D77CA54 (70 samples, 0.29%)</title><rect x="92.4267%" y="293" width="0.2864%" height="15" fill="rgb(241,52,2)" fg:x="22590" fg:w="70"/><text x="92.6767%" y="303.50"></text></g><g><title>`0x7FF96A8C9662 (13 samples, 0.05%)</title><rect x="92.7131%" y="341" width="0.0532%" height="15" fill="rgb(248,140,14)" fg:x="22660" fg:w="13"/><text x="92.9631%" y="351.50"></text></g><g><title>`0x7FF96D77C8F4 (13 samples, 0.05%)</title><rect x="92.7131%" y="325" width="0.0532%" height="15" fill="rgb(253,22,42)" fg:x="22660" fg:w="13"/><text x="92.9631%" y="335.50"></text></g><g><title>`0x7FF96A8C96DB (6 samples, 0.02%)</title><rect x="92.7663%" y="341" width="0.0245%" height="15" fill="rgb(234,61,47)" fg:x="22673" fg:w="6"/><text x="93.0163%" y="351.50"></text></g><g><title>`0x7FF96D639906 (6 samples, 0.02%)</title><rect x="92.7663%" y="325" width="0.0245%" height="15" fill="rgb(208,226,15)" fg:x="22673" fg:w="6"/><text x="93.0163%" y="335.50"></text></g><g><title>`0x7FF96A8C9726 (9 samples, 0.04%)</title><rect x="92.7990%" y="341" width="0.0368%" height="15" fill="rgb(217,221,4)" fg:x="22681" fg:w="9"/><text x="93.0490%" y="351.50"></text></g><g><title>`0x7FF96D77C194 (9 samples, 0.04%)</title><rect x="92.7990%" y="325" width="0.0368%" height="15" fill="rgb(212,174,34)" fg:x="22681" fg:w="9"/><text x="93.0490%" y="335.50"></text></g><g><title>`0x7FF96A8124BB (182 samples, 0.74%)</title><rect x="92.0952%" y="357" width="0.7447%" height="15" fill="rgb(253,83,4)" fg:x="22509" fg:w="182"/><text x="92.3452%" y="367.50"></text></g><g><title>`0x7FF96B5590D1 (455 samples, 1.86%)</title><rect x="90.9824%" y="389" width="1.8616%" height="15" fill="rgb(250,195,49)" fg:x="22237" fg:w="455"/><text x="91.2324%" y="399.50">`..</text></g><g><title>`0x7FF96B557A18 (184 samples, 0.75%)</title><rect x="92.0912%" y="373" width="0.7528%" height="15" fill="rgb(241,192,25)" fg:x="22508" fg:w="184"/><text x="92.3412%" y="383.50"></text></g><g><title>`0x7FF96B5584E2 (485 samples, 1.98%)</title><rect x="90.8719%" y="405" width="1.9844%" height="15" fill="rgb(208,124,10)" fg:x="22210" fg:w="485"/><text x="91.1219%" y="415.50">`..</text></g><g><title>`0x7FF96B55928A (3 samples, 0.01%)</title><rect x="92.8440%" y="389" width="0.0123%" height="15" fill="rgb(222,33,0)" fg:x="22692" fg:w="3"/><text x="93.0940%" y="399.50"></text></g><g><title>`0x7FF96BEFF80C (5 samples, 0.02%)</title><rect x="92.8604%" y="357" width="0.0205%" height="15" fill="rgb(234,209,28)" fg:x="22696" fg:w="5"/><text x="93.1104%" y="367.50"></text></g><g><title>`0x7FF96B558702 (7 samples, 0.03%)</title><rect x="92.8563%" y="405" width="0.0286%" height="15" fill="rgb(224,11,23)" fg:x="22695" fg:w="7"/><text x="93.1063%" y="415.50"></text></g><g><title>`0x7FF96B558D0C (7 samples, 0.03%)</title><rect x="92.8563%" y="389" width="0.0286%" height="15" fill="rgb(232,99,1)" fg:x="22695" fg:w="7"/><text x="93.1063%" y="399.50"></text></g><g><title>`0x7FF96BEFF761 (6 samples, 0.02%)</title><rect x="92.8604%" y="373" width="0.0245%" height="15" fill="rgb(237,95,45)" fg:x="22696" fg:w="6"/><text x="93.1104%" y="383.50"></text></g><g><title>`0x7FF96B5587F1 (5 samples, 0.02%)</title><rect x="92.8931%" y="405" width="0.0205%" height="15" fill="rgb(208,109,11)" fg:x="22704" fg:w="5"/><text x="93.1431%" y="415.50"></text></g><g><title>`0x7FF96BF2BEAC (5 samples, 0.02%)</title><rect x="92.8931%" y="389" width="0.0205%" height="15" fill="rgb(216,190,48)" fg:x="22704" fg:w="5"/><text x="93.1431%" y="399.50"></text></g><g><title>`0x7FF96B55CAE7 (508 samples, 2.08%)</title><rect x="90.8555%" y="421" width="2.0785%" height="15" fill="rgb(251,171,36)" fg:x="22206" fg:w="508"/><text x="91.1055%" y="431.50">`..</text></g><g><title>`0x7FF94BFE6405 (510 samples, 2.09%)</title><rect x="90.8555%" y="501" width="2.0867%" height="15" fill="rgb(230,62,22)" fg:x="22206" fg:w="510"/><text x="91.1055%" y="511.50">`..</text></g><g><title>`0x7FF96A82C64B (510 samples, 2.09%)</title><rect x="90.8555%" y="485" width="2.0867%" height="15" fill="rgb(225,114,35)" fg:x="22206" fg:w="510"/><text x="91.1055%" y="495.50">`..</text></g><g><title>`0x7FF96A84217F (510 samples, 2.09%)</title><rect x="90.8555%" y="469" width="2.0867%" height="15" fill="rgb(215,118,42)" fg:x="22206" fg:w="510"/><text x="91.1055%" y="479.50">`..</text></g><g><title>`0x7FF96B57D15B (510 samples, 2.09%)</title><rect x="90.8555%" y="453" width="2.0867%" height="15" fill="rgb(243,119,21)" fg:x="22206" fg:w="510"/><text x="91.1055%" y="463.50">`..</text></g><g><title>`0x7FF96B57D4C2 (510 samples, 2.09%)</title><rect x="90.8555%" y="437" width="2.0867%" height="15" fill="rgb(252,177,53)" fg:x="22206" fg:w="510"/><text x="91.1055%" y="447.50">`..</text></g><g><title>`0x7FF96D640ECB (3 samples, 0.01%)</title><rect x="92.9504%" y="293" width="0.0123%" height="15" fill="rgb(237,209,29)" fg:x="22718" fg:w="3"/><text x="93.2004%" y="303.50"></text></g><g><title>`0x7FF96D63FF6E (14 samples, 0.06%)</title><rect x="92.9504%" y="309" width="0.0573%" height="15" fill="rgb(212,65,23)" fg:x="22718" fg:w="14"/><text x="93.2004%" y="319.50"></text></g><g><title>`0x7FF96D64137C (9 samples, 0.04%)</title><rect x="92.9708%" y="293" width="0.0368%" height="15" fill="rgb(230,222,46)" fg:x="22723" fg:w="9"/><text x="93.2208%" y="303.50"></text></g><g><title>`0x7FF96D669DC9 (9 samples, 0.04%)</title><rect x="92.9708%" y="277" width="0.0368%" height="15" fill="rgb(215,135,32)" fg:x="22723" fg:w="9"/><text x="93.2208%" y="287.50"></text></g><g><title>`0x7FF96D77C614 (9 samples, 0.04%)</title><rect x="92.9708%" y="261" width="0.0368%" height="15" fill="rgb(246,101,22)" fg:x="22723" fg:w="9"/><text x="93.2208%" y="271.50"></text></g><g><title>`0x7FF96A886DE7 (19 samples, 0.08%)</title><rect x="92.9504%" y="357" width="0.0777%" height="15" fill="rgb(206,107,13)" fg:x="22718" fg:w="19"/><text x="93.2004%" y="367.50"></text></g><g><title>`0x7FF96D6C1D86 (19 samples, 0.08%)</title><rect x="92.9504%" y="341" width="0.0777%" height="15" fill="rgb(250,100,44)" fg:x="22718" fg:w="19"/><text x="93.2004%" y="351.50"></text></g><g><title>`0x7FF96D6C319C (19 samples, 0.08%)</title><rect x="92.9504%" y="325" width="0.0777%" height="15" fill="rgb(231,147,38)" fg:x="22718" fg:w="19"/><text x="93.2004%" y="335.50"></text></g><g><title>`0x7FF96D640406 (5 samples, 0.02%)</title><rect x="93.0077%" y="309" width="0.0205%" height="15" fill="rgb(229,8,40)" fg:x="22732" fg:w="5"/><text x="93.2577%" y="319.50"></text></g><g><title>`0x7FF96D6C4EC8 (5 samples, 0.02%)</title><rect x="93.0077%" y="293" width="0.0205%" height="15" fill="rgb(221,135,30)" fg:x="22732" fg:w="5"/><text x="93.2577%" y="303.50"></text></g><g><title>`0x7FF96D77C754 (5 samples, 0.02%)</title><rect x="93.0077%" y="277" width="0.0205%" height="15" fill="rgb(249,193,18)" fg:x="22732" fg:w="5"/><text x="93.2577%" y="287.50"></text></g><g><title>`0x7FF96B5578F0 (20 samples, 0.08%)</title><rect x="92.9504%" y="373" width="0.0818%" height="15" fill="rgb(209,133,39)" fg:x="22718" fg:w="20"/><text x="93.2004%" y="383.50"></text></g><g><title>`0x7FF96D66A24A (8 samples, 0.03%)</title><rect x="93.0322%" y="325" width="0.0327%" height="15" fill="rgb(232,100,14)" fg:x="22738" fg:w="8"/><text x="93.2822%" y="335.50"></text></g><g><title>`0x7FF96D66A0B6 (8 samples, 0.03%)</title><rect x="93.0322%" y="309" width="0.0327%" height="15" fill="rgb(224,185,1)" fg:x="22738" fg:w="8"/><text x="93.2822%" y="319.50"></text></g><g><title>`0x7FF96D77C754 (8 samples, 0.03%)</title><rect x="93.0322%" y="293" width="0.0327%" height="15" fill="rgb(223,139,8)" fg:x="22738" fg:w="8"/><text x="93.2822%" y="303.50"></text></g><g><title>`0x7FF96A8C95A8 (10 samples, 0.04%)</title><rect x="93.0322%" y="341" width="0.0409%" height="15" fill="rgb(232,213,38)" fg:x="22738" fg:w="10"/><text x="93.2822%" y="351.50"></text></g><g><title>`0x7FF96A8C9616 (5 samples, 0.02%)</title><rect x="93.0731%" y="341" width="0.0205%" height="15" fill="rgb(207,94,22)" fg:x="22748" fg:w="5"/><text x="93.3231%" y="351.50"></text></g><g><title>`0x7FF96A86CA5B (5 samples, 0.02%)</title><rect x="93.0731%" y="325" width="0.0205%" height="15" fill="rgb(219,183,54)" fg:x="22748" fg:w="5"/><text x="93.3231%" y="335.50"></text></g><g><title>`0x7FF96A86CDBB (5 samples, 0.02%)</title><rect x="93.0731%" y="309" width="0.0205%" height="15" fill="rgb(216,185,54)" fg:x="22748" fg:w="5"/><text x="93.3231%" y="319.50"></text></g><g><title>`0x7FF96D77CA54 (5 samples, 0.02%)</title><rect x="93.0731%" y="293" width="0.0205%" height="15" fill="rgb(254,217,39)" fg:x="22748" fg:w="5"/><text x="93.3231%" y="303.50"></text></g><g><title>`0x7FF96A8124BB (19 samples, 0.08%)</title><rect x="93.0322%" y="357" width="0.0777%" height="15" fill="rgb(240,178,23)" fg:x="22738" fg:w="19"/><text x="93.2822%" y="367.50"></text></g><g><title>`0x7FF96B55833F (41 samples, 0.17%)</title><rect x="92.9463%" y="405" width="0.1678%" height="15" fill="rgb(218,11,47)" fg:x="22717" fg:w="41"/><text x="93.1963%" y="415.50"></text></g><g><title>`0x7FF96B5591FB (40 samples, 0.16%)</title><rect x="92.9504%" y="389" width="0.1637%" height="15" fill="rgb(218,51,51)" fg:x="22718" fg:w="40"/><text x="93.2004%" y="399.50"></text></g><g><title>`0x7FF96B557A18 (20 samples, 0.08%)</title><rect x="93.0322%" y="373" width="0.0818%" height="15" fill="rgb(238,126,27)" fg:x="22738" fg:w="20"/><text x="93.2822%" y="383.50"></text></g><g><title>`0x7FF96B55CAE7 (48 samples, 0.20%)</title><rect x="92.9463%" y="421" width="0.1964%" height="15" fill="rgb(249,202,22)" fg:x="22717" fg:w="48"/><text x="93.1963%" y="431.50"></text></g><g><title>`0x7FF94BFE66DC (51 samples, 0.21%)</title><rect x="92.9422%" y="501" width="0.2087%" height="15" fill="rgb(254,195,49)" fg:x="22716" fg:w="51"/><text x="93.1922%" y="511.50"></text></g><g><title>`0x7FF96A82C64B (51 samples, 0.21%)</title><rect x="92.9422%" y="485" width="0.2087%" height="15" fill="rgb(208,123,14)" fg:x="22716" fg:w="51"/><text x="93.1922%" y="495.50"></text></g><g><title>`0x7FF96A84217F (51 samples, 0.21%)</title><rect x="92.9422%" y="469" width="0.2087%" height="15" fill="rgb(224,200,8)" fg:x="22716" fg:w="51"/><text x="93.1922%" y="479.50"></text></g><g><title>`0x7FF96B57D15B (51 samples, 0.21%)</title><rect x="92.9422%" y="453" width="0.2087%" height="15" fill="rgb(217,61,36)" fg:x="22716" fg:w="51"/><text x="93.1922%" y="463.50"></text></g><g><title>`0x7FF96B57D4C2 (51 samples, 0.21%)</title><rect x="92.9422%" y="437" width="0.2087%" height="15" fill="rgb(206,35,45)" fg:x="22716" fg:w="51"/><text x="93.1922%" y="447.50"></text></g><g><title>`0x7FF96B55CAE7 (10 samples, 0.04%)</title><rect x="93.1509%" y="421" width="0.0409%" height="15" fill="rgb(217,65,33)" fg:x="22767" fg:w="10"/><text x="93.4009%" y="431.50"></text></g><g><title>`0x7FF94BFE6737 (12 samples, 0.05%)</title><rect x="93.1509%" y="501" width="0.0491%" height="15" fill="rgb(222,158,48)" fg:x="22767" fg:w="12"/><text x="93.4009%" y="511.50"></text></g><g><title>`0x7FF96A82C64B (12 samples, 0.05%)</title><rect x="93.1509%" y="485" width="0.0491%" height="15" fill="rgb(254,2,54)" fg:x="22767" fg:w="12"/><text x="93.4009%" y="495.50"></text></g><g><title>`0x7FF96A84217F (12 samples, 0.05%)</title><rect x="93.1509%" y="469" width="0.0491%" height="15" fill="rgb(250,143,38)" fg:x="22767" fg:w="12"/><text x="93.4009%" y="479.50"></text></g><g><title>`0x7FF96B57D15B (12 samples, 0.05%)</title><rect x="93.1509%" y="453" width="0.0491%" height="15" fill="rgb(248,25,0)" fg:x="22767" fg:w="12"/><text x="93.4009%" y="463.50"></text></g><g><title>`0x7FF96B57D4C2 (12 samples, 0.05%)</title><rect x="93.1509%" y="437" width="0.0491%" height="15" fill="rgb(206,152,27)" fg:x="22767" fg:w="12"/><text x="93.4009%" y="447.50"></text></g><g><title>`0x7FF96D642EE8 (6 samples, 0.02%)</title><rect x="93.2122%" y="357" width="0.0245%" height="15" fill="rgb(240,77,30)" fg:x="22782" fg:w="6"/><text x="93.4622%" y="367.50"></text></g><g><title>`0x7FF96D77C4F4 (6 samples, 0.02%)</title><rect x="93.2122%" y="341" width="0.0245%" height="15" fill="rgb(231,5,3)" fg:x="22782" fg:w="6"/><text x="93.4622%" y="351.50"></text></g><g><title>`0x7FF96A8125D0 (24 samples, 0.10%)</title><rect x="93.2122%" y="373" width="0.0982%" height="15" fill="rgb(207,226,32)" fg:x="22782" fg:w="24"/><text x="93.4622%" y="383.50"></text></g><g><title>`0x7FF96D642EF6 (18 samples, 0.07%)</title><rect x="93.2368%" y="357" width="0.0736%" height="15" fill="rgb(222,207,47)" fg:x="22788" fg:w="18"/><text x="93.4868%" y="367.50"></text></g><g><title>`0x7FF96D77C194 (18 samples, 0.07%)</title><rect x="93.2368%" y="341" width="0.0736%" height="15" fill="rgb(229,115,45)" fg:x="22788" fg:w="18"/><text x="93.4868%" y="351.50"></text></g><g><title>`0x7FF96B558FE0 (34 samples, 0.14%)</title><rect x="93.2122%" y="389" width="0.1391%" height="15" fill="rgb(224,191,6)" fg:x="22782" fg:w="34"/><text x="93.4622%" y="399.50"></text></g><g><title>`0x7FF96A812608 (10 samples, 0.04%)</title><rect x="93.3104%" y="373" width="0.0409%" height="15" fill="rgb(230,227,24)" fg:x="22806" fg:w="10"/><text x="93.5604%" y="383.50"></text></g><g><title>`0x7FF96D77C4F4 (10 samples, 0.04%)</title><rect x="93.3104%" y="357" width="0.0409%" height="15" fill="rgb(228,80,19)" fg:x="22806" fg:w="10"/><text x="93.5604%" y="367.50"></text></g><g><title>`0x7FF96D64A485 (7 samples, 0.03%)</title><rect x="93.3513%" y="277" width="0.0286%" height="15" fill="rgb(247,229,0)" fg:x="22816" fg:w="7"/><text x="93.6013%" y="287.50"></text></g><g><title>`0x7FF96D64A914 (7 samples, 0.03%)</title><rect x="93.3513%" y="261" width="0.0286%" height="15" fill="rgb(237,194,15)" fg:x="22816" fg:w="7"/><text x="93.6013%" y="271.50"></text></g><g><title>`0x7FF96D77C1F4 (7 samples, 0.03%)</title><rect x="93.3513%" y="245" width="0.0286%" height="15" fill="rgb(219,203,20)" fg:x="22816" fg:w="7"/><text x="93.6013%" y="255.50"></text></g><g><title>`0x7FF96D64A49E (7 samples, 0.03%)</title><rect x="93.3800%" y="277" width="0.0286%" height="15" fill="rgb(234,128,8)" fg:x="22823" fg:w="7"/><text x="93.6300%" y="287.50"></text></g><g><title>`0x7FF96D64AB71 (6 samples, 0.02%)</title><rect x="93.3841%" y="261" width="0.0245%" height="15" fill="rgb(248,202,8)" fg:x="22824" fg:w="6"/><text x="93.6341%" y="271.50"></text></g><g><title>`0x7FF96D77C294 (6 samples, 0.02%)</title><rect x="93.3841%" y="245" width="0.0245%" height="15" fill="rgb(206,104,37)" fg:x="22824" fg:w="6"/><text x="93.6341%" y="255.50"></text></g><g><title>`0x7FF96D64A4B6 (4 samples, 0.02%)</title><rect x="93.4086%" y="277" width="0.0164%" height="15" fill="rgb(223,8,27)" fg:x="22830" fg:w="4"/><text x="93.6586%" y="287.50"></text></g><g><title>`0x7FF96D64AC8D (4 samples, 0.02%)</title><rect x="93.4086%" y="261" width="0.0164%" height="15" fill="rgb(216,217,28)" fg:x="22830" fg:w="4"/><text x="93.6586%" y="271.50"></text></g><g><title>`0x7FF96D64B20B (4 samples, 0.02%)</title><rect x="93.4086%" y="245" width="0.0164%" height="15" fill="rgb(249,199,1)" fg:x="22830" fg:w="4"/><text x="93.6586%" y="255.50"></text></g><g><title>`0x7FF96D77C294 (4 samples, 0.02%)</title><rect x="93.4086%" y="229" width="0.0164%" height="15" fill="rgb(240,85,17)" fg:x="22830" fg:w="4"/><text x="93.6586%" y="239.50"></text></g><g><title>`0x7FF96D640ECB (20 samples, 0.08%)</title><rect x="93.3513%" y="293" width="0.0818%" height="15" fill="rgb(206,108,45)" fg:x="22816" fg:w="20"/><text x="93.6013%" y="303.50"></text></g><g><title>`0x7FF96D669DC9 (38 samples, 0.16%)</title><rect x="93.4373%" y="277" width="0.1555%" height="15" fill="rgb(245,210,41)" fg:x="22837" fg:w="38"/><text x="93.6873%" y="287.50"></text></g><g><title>`0x7FF96D77C614 (38 samples, 0.16%)</title><rect x="93.4373%" y="261" width="0.1555%" height="15" fill="rgb(206,13,37)" fg:x="22837" fg:w="38"/><text x="93.6873%" y="271.50"></text></g><g><title>`0x7FF96D669E21 (4 samples, 0.02%)</title><rect x="93.6009%" y="277" width="0.0164%" height="15" fill="rgb(250,61,18)" fg:x="22877" fg:w="4"/><text x="93.8509%" y="287.50"></text></g><g><title>`0x7FF96D77C8F4 (4 samples, 0.02%)</title><rect x="93.6009%" y="261" width="0.0164%" height="15" fill="rgb(235,172,48)" fg:x="22877" fg:w="4"/><text x="93.8509%" y="271.50"></text></g><g><title>`0x7FF96D640F8F (50 samples, 0.20%)</title><rect x="93.4332%" y="293" width="0.2046%" height="15" fill="rgb(249,201,17)" fg:x="22836" fg:w="50"/><text x="93.6832%" y="303.50"></text></g><g><title>`0x7FF96D669E9B (3 samples, 0.01%)</title><rect x="93.6255%" y="277" width="0.0123%" height="15" fill="rgb(219,208,6)" fg:x="22883" fg:w="3"/><text x="93.8755%" y="287.50"></text></g><g><title>`0x7FF96D639906 (3 samples, 0.01%)</title><rect x="93.6255%" y="261" width="0.0123%" height="15" fill="rgb(248,31,23)" fg:x="22883" fg:w="3"/><text x="93.8755%" y="271.50"></text></g><g><title>`0x7FF96D669DC9 (3 samples, 0.01%)</title><rect x="93.6377%" y="277" width="0.0123%" height="15" fill="rgb(245,15,42)" fg:x="22886" fg:w="3"/><text x="93.8877%" y="287.50"></text></g><g><title>`0x7FF96D77C614 (3 samples, 0.01%)</title><rect x="93.6377%" y="261" width="0.0123%" height="15" fill="rgb(222,217,39)" fg:x="22886" fg:w="3"/><text x="93.8877%" y="271.50"></text></g><g><title>`0x7FF96D6C28DC (74 samples, 0.30%)</title><rect x="93.3513%" y="325" width="0.3028%" height="15" fill="rgb(210,219,27)" fg:x="22816" fg:w="74"/><text x="93.6013%" y="335.50"></text></g><g><title>`0x7FF96D63FF6E (74 samples, 0.30%)</title><rect x="93.3513%" y="309" width="0.3028%" height="15" fill="rgb(252,166,36)" fg:x="22816" fg:w="74"/><text x="93.6013%" y="319.50"></text></g><g><title>`0x7FF96D64137C (4 samples, 0.02%)</title><rect x="93.6377%" y="293" width="0.0164%" height="15" fill="rgb(245,132,34)" fg:x="22886" fg:w="4"/><text x="93.8877%" y="303.50"></text></g><g><title>`0x7FF96D64A485 (7 samples, 0.03%)</title><rect x="93.6541%" y="277" width="0.0286%" height="15" fill="rgb(236,54,3)" fg:x="22890" fg:w="7"/><text x="93.9041%" y="287.50"></text></g><g><title>`0x7FF96D64A914 (7 samples, 0.03%)</title><rect x="93.6541%" y="261" width="0.0286%" height="15" fill="rgb(241,173,43)" fg:x="22890" fg:w="7"/><text x="93.9041%" y="271.50"></text></g><g><title>`0x7FF96D77C1F4 (7 samples, 0.03%)</title><rect x="93.6541%" y="245" width="0.0286%" height="15" fill="rgb(215,190,9)" fg:x="22890" fg:w="7"/><text x="93.9041%" y="255.50"></text></g><g><title>`0x7FF96D64A49E (4 samples, 0.02%)</title><rect x="93.6827%" y="277" width="0.0164%" height="15" fill="rgb(242,101,16)" fg:x="22897" fg:w="4"/><text x="93.9327%" y="287.50"></text></g><g><title>`0x7FF96D64AB71 (3 samples, 0.01%)</title><rect x="93.6868%" y="261" width="0.0123%" height="15" fill="rgb(223,190,21)" fg:x="22898" fg:w="3"/><text x="93.9368%" y="271.50"></text></g><g><title>`0x7FF96D77C294 (3 samples, 0.01%)</title><rect x="93.6868%" y="245" width="0.0123%" height="15" fill="rgb(215,228,25)" fg:x="22898" fg:w="3"/><text x="93.9368%" y="255.50"></text></g><g><title>`0x7FF96D640ECB (15 samples, 0.06%)</title><rect x="93.6541%" y="293" width="0.0614%" height="15" fill="rgb(225,36,22)" fg:x="22890" fg:w="15"/><text x="93.9041%" y="303.50"></text></g><g><title>`0x7FF96D669DC9 (28 samples, 0.11%)</title><rect x="93.7196%" y="277" width="0.1146%" height="15" fill="rgb(251,106,46)" fg:x="22906" fg:w="28"/><text x="93.9696%" y="287.50"></text></g><g><title>`0x7FF96D77C614 (28 samples, 0.11%)</title><rect x="93.7196%" y="261" width="0.1146%" height="15" fill="rgb(208,90,1)" fg:x="22906" fg:w="28"/><text x="93.9696%" y="271.50"></text></g><g><title>`0x7FF96D669E21 (3 samples, 0.01%)</title><rect x="93.8341%" y="277" width="0.0123%" height="15" fill="rgb(243,10,4)" fg:x="22934" fg:w="3"/><text x="94.0841%" y="287.50"></text></g><g><title>`0x7FF96D77C8F4 (3 samples, 0.01%)</title><rect x="93.8341%" y="261" width="0.0123%" height="15" fill="rgb(212,137,27)" fg:x="22934" fg:w="3"/><text x="94.0841%" y="271.50"></text></g><g><title>`0x7FF96D640F8F (33 samples, 0.14%)</title><rect x="93.7155%" y="293" width="0.1350%" height="15" fill="rgb(231,220,49)" fg:x="22905" fg:w="33"/><text x="93.9655%" y="303.50"></text></g><g><title>`0x7FF96D63FF6E (64 samples, 0.26%)</title><rect x="93.6541%" y="309" width="0.2619%" height="15" fill="rgb(237,96,20)" fg:x="22890" fg:w="64"/><text x="93.9041%" y="319.50"></text></g><g><title>`0x7FF96D64137C (14 samples, 0.06%)</title><rect x="93.8587%" y="293" width="0.0573%" height="15" fill="rgb(239,229,30)" fg:x="22940" fg:w="14"/><text x="94.1087%" y="303.50"></text></g><g><title>`0x7FF96D669DC9 (14 samples, 0.06%)</title><rect x="93.8587%" y="277" width="0.0573%" height="15" fill="rgb(219,65,33)" fg:x="22940" fg:w="14"/><text x="94.1087%" y="287.50"></text></g><g><title>`0x7FF96D77C614 (14 samples, 0.06%)</title><rect x="93.8587%" y="261" width="0.0573%" height="15" fill="rgb(243,134,7)" fg:x="22940" fg:w="14"/><text x="94.1087%" y="271.50"></text></g><g><title>`0x7FF96D6C319C (68 samples, 0.28%)</title><rect x="93.6541%" y="325" width="0.2782%" height="15" fill="rgb(216,177,54)" fg:x="22890" fg:w="68"/><text x="93.9041%" y="335.50"></text></g><g><title>`0x7FF96D640406 (4 samples, 0.02%)</title><rect x="93.9160%" y="309" width="0.0164%" height="15" fill="rgb(211,160,20)" fg:x="22954" fg:w="4"/><text x="94.1660%" y="319.50"></text></g><g><title>`0x7FF96D6C4EC8 (4 samples, 0.02%)</title><rect x="93.9160%" y="293" width="0.0164%" height="15" fill="rgb(239,85,39)" fg:x="22954" fg:w="4"/><text x="94.1660%" y="303.50"></text></g><g><title>`0x7FF96D77C754 (4 samples, 0.02%)</title><rect x="93.9160%" y="277" width="0.0164%" height="15" fill="rgb(232,125,22)" fg:x="22954" fg:w="4"/><text x="94.1660%" y="287.50"></text></g><g><title>`0x7FF96B5578F0 (144 samples, 0.59%)</title><rect x="93.3513%" y="373" width="0.5892%" height="15" fill="rgb(244,57,34)" fg:x="22816" fg:w="144"/><text x="93.6013%" y="383.50"></text></g><g><title>`0x7FF96A886DE7 (144 samples, 0.59%)</title><rect x="93.3513%" y="357" width="0.5892%" height="15" fill="rgb(214,203,32)" fg:x="22816" fg:w="144"/><text x="93.6013%" y="367.50"></text></g><g><title>`0x7FF96D6C1D86 (144 samples, 0.59%)</title><rect x="93.3513%" y="341" width="0.5892%" height="15" fill="rgb(207,58,43)" fg:x="22816" fg:w="144"/><text x="93.6013%" y="351.50"></text></g><g><title>`0x7FF96A812495 (4 samples, 0.02%)</title><rect x="93.9405%" y="357" width="0.0164%" height="15" fill="rgb(215,193,15)" fg:x="22960" fg:w="4"/><text x="94.1905%" y="367.50"></text></g><g><title>`0x7FF96D6B824D (4 samples, 0.02%)</title><rect x="93.9405%" y="341" width="0.0164%" height="15" fill="rgb(232,15,44)" fg:x="22960" fg:w="4"/><text x="94.1905%" y="351.50"></text></g><g><title>`0x7FF96D6B830D (4 samples, 0.02%)</title><rect x="93.9405%" y="325" width="0.0164%" height="15" fill="rgb(212,3,48)" fg:x="22960" fg:w="4"/><text x="94.1905%" y="335.50"></text></g><g><title>`0x7FF96D6B86E3 (4 samples, 0.02%)</title><rect x="93.9405%" y="309" width="0.0164%" height="15" fill="rgb(218,128,7)" fg:x="22960" fg:w="4"/><text x="94.1905%" y="319.50"></text></g><g><title>`0x7FF96D6B88EF (4 samples, 0.02%)</title><rect x="93.9405%" y="293" width="0.0164%" height="15" fill="rgb(226,216,39)" fg:x="22960" fg:w="4"/><text x="94.1905%" y="303.50"></text></g><g><title>`0x7FF96D66A24A (55 samples, 0.23%)</title><rect x="93.9651%" y="325" width="0.2250%" height="15" fill="rgb(243,47,51)" fg:x="22966" fg:w="55"/><text x="94.2151%" y="335.50"></text></g><g><title>`0x7FF96D66A0B6 (55 samples, 0.23%)</title><rect x="93.9651%" y="309" width="0.2250%" height="15" fill="rgb(241,183,40)" fg:x="22966" fg:w="55"/><text x="94.2151%" y="319.50"></text></g><g><title>`0x7FF96D77C754 (55 samples, 0.23%)</title><rect x="93.9651%" y="293" width="0.2250%" height="15" fill="rgb(231,217,32)" fg:x="22966" fg:w="55"/><text x="94.2151%" y="303.50"></text></g><g><title>`0x7FF96A8C95A8 (83 samples, 0.34%)</title><rect x="93.9651%" y="341" width="0.3396%" height="15" fill="rgb(229,61,38)" fg:x="22966" fg:w="83"/><text x="94.2151%" y="351.50"></text></g><g><title>`0x7FF96D66A634 (27 samples, 0.11%)</title><rect x="94.1942%" y="325" width="0.1105%" height="15" fill="rgb(225,210,5)" fg:x="23022" fg:w="27"/><text x="94.4442%" y="335.50"></text></g><g><title>`0x7FF96D77C754 (27 samples, 0.11%)</title><rect x="94.1942%" y="309" width="0.1105%" height="15" fill="rgb(231,79,45)" fg:x="23022" fg:w="27"/><text x="94.4442%" y="319.50"></text></g><g><title>`0x7FF96A8C9616 (74 samples, 0.30%)</title><rect x="94.3047%" y="341" width="0.3028%" height="15" fill="rgb(224,100,7)" fg:x="23049" fg:w="74"/><text x="94.5547%" y="351.50"></text></g><g><title>`0x7FF96A86CA5B (74 samples, 0.30%)</title><rect x="94.3047%" y="325" width="0.3028%" height="15" fill="rgb(241,198,18)" fg:x="23049" fg:w="74"/><text x="94.5547%" y="335.50"></text></g><g><title>`0x7FF96A86CDBB (73 samples, 0.30%)</title><rect x="94.3087%" y="309" width="0.2987%" height="15" fill="rgb(252,97,53)" fg:x="23050" fg:w="73"/><text x="94.5587%" y="319.50"></text></g><g><title>`0x7FF96D77CA54 (73 samples, 0.30%)</title><rect x="94.3087%" y="293" width="0.2987%" height="15" fill="rgb(220,88,7)" fg:x="23050" fg:w="73"/><text x="94.5587%" y="303.50"></text></g><g><title>`0x7FF96A8C9662 (10 samples, 0.04%)</title><rect x="94.6074%" y="341" width="0.0409%" height="15" fill="rgb(213,176,14)" fg:x="23123" fg:w="10"/><text x="94.8574%" y="351.50"></text></g><g><title>`0x7FF96D77C8F4 (10 samples, 0.04%)</title><rect x="94.6074%" y="325" width="0.0409%" height="15" fill="rgb(246,73,7)" fg:x="23123" fg:w="10"/><text x="94.8574%" y="335.50"></text></g><g><title>`0x7FF96A8C96B5 (3 samples, 0.01%)</title><rect x="94.6483%" y="341" width="0.0123%" height="15" fill="rgb(245,64,36)" fg:x="23133" fg:w="3"/><text x="94.8983%" y="351.50"></text></g><g><title>`0x7FF96D77C4B4 (3 samples, 0.01%)</title><rect x="94.6483%" y="325" width="0.0123%" height="15" fill="rgb(245,80,10)" fg:x="23133" fg:w="3"/><text x="94.8983%" y="335.50"></text></g><g><title>`0x7FF96B5591FB (336 samples, 1.37%)</title><rect x="93.3513%" y="389" width="1.3747%" height="15" fill="rgb(232,107,50)" fg:x="22816" fg:w="336"/><text x="93.6013%" y="399.50"></text></g><g><title>`0x7FF96B557A18 (192 samples, 0.79%)</title><rect x="93.9405%" y="373" width="0.7856%" height="15" fill="rgb(253,3,0)" fg:x="22960" fg:w="192"/><text x="94.1905%" y="383.50"></text></g><g><title>`0x7FF96A8124BB (188 samples, 0.77%)</title><rect x="93.9569%" y="357" width="0.7692%" height="15" fill="rgb(212,99,53)" fg:x="22964" fg:w="188"/><text x="94.2069%" y="367.50"></text></g><g><title>`0x7FF96A8C9726 (14 samples, 0.06%)</title><rect x="94.6688%" y="341" width="0.0573%" height="15" fill="rgb(249,111,54)" fg:x="23138" fg:w="14"/><text x="94.9188%" y="351.50"></text></g><g><title>`0x7FF96D77C194 (14 samples, 0.06%)</title><rect x="94.6688%" y="325" width="0.0573%" height="15" fill="rgb(249,55,30)" fg:x="23138" fg:w="14"/><text x="94.9188%" y="335.50"></text></g><g><title>`0x7FF96B55833F (374 samples, 1.53%)</title><rect x="93.2000%" y="405" width="1.5302%" height="15" fill="rgb(237,47,42)" fg:x="22779" fg:w="374"/><text x="93.4500%" y="415.50"></text></g><g><title>`0x7FF96B558E1E (3 samples, 0.01%)</title><rect x="94.7302%" y="389" width="0.0123%" height="15" fill="rgb(211,20,18)" fg:x="23153" fg:w="3"/><text x="94.9802%" y="399.50"></text></g><g><title>`0x7FF96D642EE8 (5 samples, 0.02%)</title><rect x="94.7424%" y="357" width="0.0205%" height="15" fill="rgb(231,203,46)" fg:x="23156" fg:w="5"/><text x="94.9924%" y="367.50"></text></g><g><title>`0x7FF96D77C4F4 (5 samples, 0.02%)</title><rect x="94.7424%" y="341" width="0.0205%" height="15" fill="rgb(237,142,3)" fg:x="23156" fg:w="5"/><text x="94.9924%" y="351.50"></text></g><g><title>`0x7FF96A8125D0 (24 samples, 0.10%)</title><rect x="94.7424%" y="373" width="0.0982%" height="15" fill="rgb(241,107,1)" fg:x="23156" fg:w="24"/><text x="94.9924%" y="383.50"></text></g><g><title>`0x7FF96D642EF6 (19 samples, 0.08%)</title><rect x="94.7629%" y="357" width="0.0777%" height="15" fill="rgb(229,83,13)" fg:x="23161" fg:w="19"/><text x="95.0129%" y="367.50"></text></g><g><title>`0x7FF96D77C194 (19 samples, 0.08%)</title><rect x="94.7629%" y="341" width="0.0777%" height="15" fill="rgb(241,91,40)" fg:x="23161" fg:w="19"/><text x="95.0129%" y="351.50"></text></g><g><title>`0x7FF96B558FE0 (31 samples, 0.13%)</title><rect x="94.7424%" y="389" width="0.1268%" height="15" fill="rgb(225,3,45)" fg:x="23156" fg:w="31"/><text x="94.9924%" y="399.50"></text></g><g><title>`0x7FF96A812608 (7 samples, 0.03%)</title><rect x="94.8406%" y="373" width="0.0286%" height="15" fill="rgb(244,223,14)" fg:x="23180" fg:w="7"/><text x="95.0906%" y="383.50"></text></g><g><title>`0x7FF96D77C4F4 (7 samples, 0.03%)</title><rect x="94.8406%" y="357" width="0.0286%" height="15" fill="rgb(224,124,37)" fg:x="23180" fg:w="7"/><text x="95.0906%" y="367.50"></text></g><g><title>`0x7FF96B5578C2 (5 samples, 0.02%)</title><rect x="94.8693%" y="373" width="0.0205%" height="15" fill="rgb(251,171,30)" fg:x="23187" fg:w="5"/><text x="95.1193%" y="383.50"></text></g><g><title>`0x7FF96BF2BEAC (5 samples, 0.02%)</title><rect x="94.8693%" y="357" width="0.0205%" height="15" fill="rgb(236,46,54)" fg:x="23187" fg:w="5"/><text x="95.1193%" y="367.50"></text></g><g><title>`0x7FF96D64A485 (9 samples, 0.04%)</title><rect x="94.9102%" y="277" width="0.0368%" height="15" fill="rgb(245,213,5)" fg:x="23197" fg:w="9"/><text x="95.1602%" y="287.50"></text></g><g><title>`0x7FF96D64A914 (9 samples, 0.04%)</title><rect x="94.9102%" y="261" width="0.0368%" height="15" fill="rgb(230,144,27)" fg:x="23197" fg:w="9"/><text x="95.1602%" y="271.50"></text></g><g><title>`0x7FF96D77C1F4 (9 samples, 0.04%)</title><rect x="94.9102%" y="245" width="0.0368%" height="15" fill="rgb(220,86,6)" fg:x="23197" fg:w="9"/><text x="95.1602%" y="255.50"></text></g><g><title>`0x7FF96D64A49E (4 samples, 0.02%)</title><rect x="94.9470%" y="277" width="0.0164%" height="15" fill="rgb(240,20,13)" fg:x="23206" fg:w="4"/><text x="95.1970%" y="287.50"></text></g><g><title>`0x7FF96D64AB71 (4 samples, 0.02%)</title><rect x="94.9470%" y="261" width="0.0164%" height="15" fill="rgb(217,89,34)" fg:x="23206" fg:w="4"/><text x="95.1970%" y="271.50"></text></g><g><title>`0x7FF96D77C294 (4 samples, 0.02%)</title><rect x="94.9470%" y="245" width="0.0164%" height="15" fill="rgb(229,13,5)" fg:x="23206" fg:w="4"/><text x="95.1970%" y="255.50"></text></g><g><title>`0x7FF96D640ECB (17 samples, 0.07%)</title><rect x="94.9102%" y="293" width="0.0696%" height="15" fill="rgb(244,67,35)" fg:x="23197" fg:w="17"/><text x="95.1602%" y="303.50"></text></g><g><title>`0x7FF96D669D0E (3 samples, 0.01%)</title><rect x="94.9797%" y="277" width="0.0123%" height="15" fill="rgb(221,40,2)" fg:x="23214" fg:w="3"/><text x="95.2297%" y="287.50"></text></g><g><title>`0x7FF96D669DC9 (36 samples, 0.15%)</title><rect x="94.9920%" y="277" width="0.1473%" height="15" fill="rgb(237,157,21)" fg:x="23217" fg:w="36"/><text x="95.2420%" y="287.50"></text></g><g><title>`0x7FF96D77C614 (36 samples, 0.15%)</title><rect x="94.9920%" y="261" width="0.1473%" height="15" fill="rgb(222,94,11)" fg:x="23217" fg:w="36"/><text x="95.2420%" y="271.50"></text></g><g><title>`0x7FF96D669E21 (7 samples, 0.03%)</title><rect x="95.1393%" y="277" width="0.0286%" height="15" fill="rgb(249,113,6)" fg:x="23253" fg:w="7"/><text x="95.3893%" y="287.50"></text></g><g><title>`0x7FF96D77C8F4 (7 samples, 0.03%)</title><rect x="95.1393%" y="261" width="0.0286%" height="15" fill="rgb(238,137,36)" fg:x="23253" fg:w="7"/><text x="95.3893%" y="271.50"></text></g><g><title>`0x7FF96D669E77 (3 samples, 0.01%)</title><rect x="95.1680%" y="277" width="0.0123%" height="15" fill="rgb(210,102,26)" fg:x="23260" fg:w="3"/><text x="95.4180%" y="287.50"></text></g><g><title>`0x7FF96D77C194 (3 samples, 0.01%)</title><rect x="95.1680%" y="261" width="0.0123%" height="15" fill="rgb(218,30,30)" fg:x="23260" fg:w="3"/><text x="95.4180%" y="271.50"></text></g><g><title>`0x7FF96D640F8F (50 samples, 0.20%)</title><rect x="94.9797%" y="293" width="0.2046%" height="15" fill="rgb(214,67,26)" fg:x="23214" fg:w="50"/><text x="95.2297%" y="303.50"></text></g><g><title>`0x7FF96D63FF6E (71 samples, 0.29%)</title><rect x="94.9020%" y="309" width="0.2905%" height="15" fill="rgb(251,9,53)" fg:x="23195" fg:w="71"/><text x="95.1520%" y="319.50"></text></g><g><title>`0x7FF96D6C28DC (77 samples, 0.32%)</title><rect x="94.9020%" y="325" width="0.3150%" height="15" fill="rgb(228,204,25)" fg:x="23195" fg:w="77"/><text x="95.1520%" y="335.50"></text></g><g><title>`0x7FF96D63FFA7 (6 samples, 0.02%)</title><rect x="95.1925%" y="309" width="0.0245%" height="15" fill="rgb(207,153,8)" fg:x="23266" fg:w="6"/><text x="95.4425%" y="319.50"></text></g><g><title>`0x7FF96D6C284D (6 samples, 0.02%)</title><rect x="95.1925%" y="293" width="0.0245%" height="15" fill="rgb(242,9,16)" fg:x="23266" fg:w="6"/><text x="95.4425%" y="303.50"></text></g><g><title>`0x7FF96D6F1503 (5 samples, 0.02%)</title><rect x="95.1966%" y="277" width="0.0205%" height="15" fill="rgb(217,211,10)" fg:x="23267" fg:w="5"/><text x="95.4466%" y="287.50"></text></g><g><title>`0x7FF96D77C414 (5 samples, 0.02%)</title><rect x="95.1966%" y="261" width="0.0205%" height="15" fill="rgb(219,228,52)" fg:x="23267" fg:w="5"/><text x="95.4466%" y="271.50"></text></g><g><title>`0x7FF96D64A485 (4 samples, 0.02%)</title><rect x="95.2171%" y="277" width="0.0164%" height="15" fill="rgb(231,92,29)" fg:x="23272" fg:w="4"/><text x="95.4671%" y="287.50"></text></g><g><title>`0x7FF96D64A914 (4 samples, 0.02%)</title><rect x="95.2171%" y="261" width="0.0164%" height="15" fill="rgb(232,8,23)" fg:x="23272" fg:w="4"/><text x="95.4671%" y="271.50"></text></g><g><title>`0x7FF96D77C1F4 (4 samples, 0.02%)</title><rect x="95.2171%" y="245" width="0.0164%" height="15" fill="rgb(216,211,34)" fg:x="23272" fg:w="4"/><text x="95.4671%" y="255.50"></text></g><g><title>`0x7FF96D640ECB (8 samples, 0.03%)</title><rect x="95.2171%" y="293" width="0.0327%" height="15" fill="rgb(236,151,0)" fg:x="23272" fg:w="8"/><text x="95.4671%" y="303.50"></text></g><g><title>`0x7FF96D669DC9 (24 samples, 0.10%)</title><rect x="95.2498%" y="277" width="0.0982%" height="15" fill="rgb(209,168,3)" fg:x="23280" fg:w="24"/><text x="95.4998%" y="287.50"></text></g><g><title>`0x7FF96D77C614 (24 samples, 0.10%)</title><rect x="95.2498%" y="261" width="0.0982%" height="15" fill="rgb(208,129,28)" fg:x="23280" fg:w="24"/><text x="95.4998%" y="271.50"></text></g><g><title>`0x7FF96D640F8F (27 samples, 0.11%)</title><rect x="95.2498%" y="293" width="0.1105%" height="15" fill="rgb(229,78,22)" fg:x="23280" fg:w="27"/><text x="95.4998%" y="303.50"></text></g><g><title>`0x7FF96D669E21 (3 samples, 0.01%)</title><rect x="95.3480%" y="277" width="0.0123%" height="15" fill="rgb(228,187,13)" fg:x="23304" fg:w="3"/><text x="95.5980%" y="287.50"></text></g><g><title>`0x7FF96D77C8F4 (3 samples, 0.01%)</title><rect x="95.3480%" y="261" width="0.0123%" height="15" fill="rgb(240,119,24)" fg:x="23304" fg:w="3"/><text x="95.5980%" y="271.50"></text></g><g><title>`0x7FF96D64137C (6 samples, 0.02%)</title><rect x="95.3643%" y="293" width="0.0245%" height="15" fill="rgb(209,194,42)" fg:x="23308" fg:w="6"/><text x="95.6143%" y="303.50"></text></g><g><title>`0x7FF96D669DC9 (6 samples, 0.02%)</title><rect x="95.3643%" y="277" width="0.0245%" height="15" fill="rgb(247,200,46)" fg:x="23308" fg:w="6"/><text x="95.6143%" y="287.50"></text></g><g><title>`0x7FF96D77C614 (6 samples, 0.02%)</title><rect x="95.3643%" y="261" width="0.0245%" height="15" fill="rgb(218,76,16)" fg:x="23308" fg:w="6"/><text x="95.6143%" y="271.50"></text></g><g><title>`0x7FF96D63FF6E (43 samples, 0.18%)</title><rect x="95.2171%" y="309" width="0.1759%" height="15" fill="rgb(225,21,48)" fg:x="23272" fg:w="43"/><text x="95.4671%" y="319.50"></text></g><g><title>`0x7FF96D6C319C (46 samples, 0.19%)</title><rect x="95.2171%" y="325" width="0.1882%" height="15" fill="rgb(239,223,50)" fg:x="23272" fg:w="46"/><text x="95.4671%" y="335.50"></text></g><g><title>`0x7FF96D63FFA7 (3 samples, 0.01%)</title><rect x="95.3930%" y="309" width="0.0123%" height="15" fill="rgb(244,45,21)" fg:x="23315" fg:w="3"/><text x="95.6430%" y="319.50"></text></g><g><title>`0x7FF96D6C3B08 (5 samples, 0.02%)</title><rect x="95.4053%" y="325" width="0.0205%" height="15" fill="rgb(232,33,43)" fg:x="23318" fg:w="5"/><text x="95.6553%" y="335.50"></text></g><g><title>`0x7FF96D6C2A16 (3 samples, 0.01%)</title><rect x="95.4134%" y="309" width="0.0123%" height="15" fill="rgb(209,8,3)" fg:x="23320" fg:w="3"/><text x="95.6634%" y="319.50"></text></g><g><title>`0x7FF96B5578F0 (132 samples, 0.54%)</title><rect x="94.8897%" y="373" width="0.5401%" height="15" fill="rgb(214,25,53)" fg:x="23192" fg:w="132"/><text x="95.1397%" y="383.50"></text></g><g><title>`0x7FF96A886DE7 (132 samples, 0.54%)</title><rect x="94.8897%" y="357" width="0.5401%" height="15" fill="rgb(254,186,54)" fg:x="23192" fg:w="132"/><text x="95.1397%" y="367.50"></text></g><g><title>`0x7FF96D6C1D86 (132 samples, 0.54%)</title><rect x="94.8897%" y="341" width="0.5401%" height="15" fill="rgb(208,174,49)" fg:x="23192" fg:w="132"/><text x="95.1397%" y="351.50"></text></g><g><title>`0x7FF96A8E6482 (10 samples, 0.04%)</title><rect x="95.4298%" y="357" width="0.0409%" height="15" fill="rgb(233,191,51)" fg:x="23324" fg:w="10"/><text x="95.6798%" y="367.50"></text></g><g><title>`0x7FF96D6C23C4 (10 samples, 0.04%)</title><rect x="95.4298%" y="341" width="0.0409%" height="15" fill="rgb(222,134,10)" fg:x="23324" fg:w="10"/><text x="95.6798%" y="351.50"></text></g><g><title>`0x7FF96D6C3F8F (9 samples, 0.04%)</title><rect x="95.4339%" y="325" width="0.0368%" height="15" fill="rgb(230,226,20)" fg:x="23325" fg:w="9"/><text x="95.6839%" y="335.50"></text></g><g><title>`0x7FF96D77C414 (9 samples, 0.04%)</title><rect x="95.4339%" y="309" width="0.0368%" height="15" fill="rgb(251,111,25)" fg:x="23325" fg:w="9"/><text x="95.6839%" y="319.50"></text></g><g><title>`0x7FF96B55790E (11 samples, 0.05%)</title><rect x="95.4298%" y="373" width="0.0450%" height="15" fill="rgb(224,40,46)" fg:x="23324" fg:w="11"/><text x="95.6798%" y="383.50"></text></g><g><title>`0x7FF96B557922 (7 samples, 0.03%)</title><rect x="95.4748%" y="373" width="0.0286%" height="15" fill="rgb(236,108,47)" fg:x="23335" fg:w="7"/><text x="95.7248%" y="383.50"></text></g><g><title>`0x7FF96A8871E3 (6 samples, 0.02%)</title><rect x="95.4789%" y="357" width="0.0245%" height="15" fill="rgb(234,93,0)" fg:x="23336" fg:w="6"/><text x="95.7289%" y="367.50"></text></g><g><title>`0x7FF96D6C23C4 (5 samples, 0.02%)</title><rect x="95.4830%" y="341" width="0.0205%" height="15" fill="rgb(224,213,32)" fg:x="23337" fg:w="5"/><text x="95.7330%" y="351.50"></text></g><g><title>`0x7FF96D6C3F8F (5 samples, 0.02%)</title><rect x="95.4830%" y="325" width="0.0205%" height="15" fill="rgb(251,11,48)" fg:x="23337" fg:w="5"/><text x="95.7330%" y="335.50"></text></g><g><title>`0x7FF96D77C414 (5 samples, 0.02%)</title><rect x="95.4830%" y="309" width="0.0205%" height="15" fill="rgb(236,173,5)" fg:x="23337" fg:w="5"/><text x="95.7330%" y="319.50"></text></g><g><title>`0x7FF96A812495 (3 samples, 0.01%)</title><rect x="95.5198%" y="357" width="0.0123%" height="15" fill="rgb(230,95,12)" fg:x="23346" fg:w="3"/><text x="95.7698%" y="367.50"></text></g><g><title>`0x7FF96D6B824D (3 samples, 0.01%)</title><rect x="95.5198%" y="341" width="0.0123%" height="15" fill="rgb(232,209,1)" fg:x="23346" fg:w="3"/><text x="95.7698%" y="351.50"></text></g><g><title>`0x7FF96D6B830D (3 samples, 0.01%)</title><rect x="95.5198%" y="325" width="0.0123%" height="15" fill="rgb(232,6,1)" fg:x="23346" fg:w="3"/><text x="95.7698%" y="335.50"></text></g><g><title>`0x7FF96D6B86E3 (3 samples, 0.01%)</title><rect x="95.5198%" y="309" width="0.0123%" height="15" fill="rgb(210,224,50)" fg:x="23346" fg:w="3"/><text x="95.7698%" y="319.50"></text></g><g><title>`0x7FF96D6B88EF (3 samples, 0.01%)</title><rect x="95.5198%" y="293" width="0.0123%" height="15" fill="rgb(228,127,35)" fg:x="23346" fg:w="3"/><text x="95.7698%" y="303.50"></text></g><g><title>`0x7FF96D66A24A (40 samples, 0.16%)</title><rect x="95.5321%" y="325" width="0.1637%" height="15" fill="rgb(245,102,45)" fg:x="23349" fg:w="40"/><text x="95.7821%" y="335.50"></text></g><g><title>`0x7FF96D66A0B6 (40 samples, 0.16%)</title><rect x="95.5321%" y="309" width="0.1637%" height="15" fill="rgb(214,1,49)" fg:x="23349" fg:w="40"/><text x="95.7821%" y="319.50"></text></g><g><title>`0x7FF96D77C754 (40 samples, 0.16%)</title><rect x="95.5321%" y="293" width="0.1637%" height="15" fill="rgb(226,163,40)" fg:x="23349" fg:w="40"/><text x="95.7821%" y="303.50"></text></g><g><title>`0x7FF96A8C95A8 (68 samples, 0.28%)</title><rect x="95.5321%" y="341" width="0.2782%" height="15" fill="rgb(239,212,28)" fg:x="23349" fg:w="68"/><text x="95.7821%" y="351.50"></text></g><g><title>`0x7FF96D66A634 (28 samples, 0.11%)</title><rect x="95.6958%" y="325" width="0.1146%" height="15" fill="rgb(220,20,13)" fg:x="23389" fg:w="28"/><text x="95.9458%" y="335.50"></text></g><g><title>`0x7FF96D77C754 (28 samples, 0.11%)</title><rect x="95.6958%" y="309" width="0.1146%" height="15" fill="rgb(210,164,35)" fg:x="23389" fg:w="28"/><text x="95.9458%" y="319.50"></text></g><g><title>`0x7FF96A86CDBB (60 samples, 0.25%)</title><rect x="95.8185%" y="309" width="0.2455%" height="15" fill="rgb(248,109,41)" fg:x="23419" fg:w="60"/><text x="96.0685%" y="319.50"></text></g><g><title>`0x7FF96D77CA54 (60 samples, 0.25%)</title><rect x="95.8185%" y="293" width="0.2455%" height="15" fill="rgb(238,23,50)" fg:x="23419" fg:w="60"/><text x="96.0685%" y="303.50"></text></g><g><title>`0x7FF96A8C9616 (62 samples, 0.25%)</title><rect x="95.8144%" y="341" width="0.2537%" height="15" fill="rgb(211,48,49)" fg:x="23418" fg:w="62"/><text x="96.0644%" y="351.50"></text></g><g><title>`0x7FF96A86CA5B (62 samples, 0.25%)</title><rect x="95.8144%" y="325" width="0.2537%" height="15" fill="rgb(223,36,21)" fg:x="23418" fg:w="62"/><text x="96.0644%" y="335.50"></text></g><g><title>`0x7FF96A8C9662 (9 samples, 0.04%)</title><rect x="96.0681%" y="341" width="0.0368%" height="15" fill="rgb(207,123,46)" fg:x="23480" fg:w="9"/><text x="96.3181%" y="351.50"></text></g><g><title>`0x7FF96D77C8F4 (9 samples, 0.04%)</title><rect x="96.0681%" y="325" width="0.0368%" height="15" fill="rgb(240,218,32)" fg:x="23480" fg:w="9"/><text x="96.3181%" y="335.50"></text></g><g><title>`0x7FF96A8C96B5 (3 samples, 0.01%)</title><rect x="96.1049%" y="341" width="0.0123%" height="15" fill="rgb(252,5,43)" fg:x="23489" fg:w="3"/><text x="96.3549%" y="351.50"></text></g><g><title>`0x7FF96D77C4B4 (3 samples, 0.01%)</title><rect x="96.1049%" y="325" width="0.0123%" height="15" fill="rgb(252,84,19)" fg:x="23489" fg:w="3"/><text x="96.3549%" y="335.50"></text></g><g><title>`0x7FF96A8C96DB (6 samples, 0.02%)</title><rect x="96.1172%" y="341" width="0.0245%" height="15" fill="rgb(243,152,39)" fg:x="23492" fg:w="6"/><text x="96.3672%" y="351.50"></text></g><g><title>`0x7FF96D639906 (6 samples, 0.02%)</title><rect x="96.1172%" y="325" width="0.0245%" height="15" fill="rgb(234,160,15)" fg:x="23492" fg:w="6"/><text x="96.3672%" y="335.50"></text></g><g><title>`0x7FF96A8C9726 (6 samples, 0.02%)</title><rect x="96.1417%" y="341" width="0.0245%" height="15" fill="rgb(237,34,20)" fg:x="23498" fg:w="6"/><text x="96.3917%" y="351.50"></text></g><g><title>`0x7FF96D77C194 (6 samples, 0.02%)</title><rect x="96.1417%" y="325" width="0.0245%" height="15" fill="rgb(229,97,13)" fg:x="23498" fg:w="6"/><text x="96.3917%" y="335.50"></text></g><g><title>`0x7FF96B5590D1 (318 samples, 1.30%)</title><rect x="94.8693%" y="389" width="1.3011%" height="15" fill="rgb(234,71,50)" fg:x="23187" fg:w="318"/><text x="95.1193%" y="399.50"></text></g><g><title>`0x7FF96B557A18 (159 samples, 0.65%)</title><rect x="95.5198%" y="373" width="0.6505%" height="15" fill="rgb(253,155,4)" fg:x="23346" fg:w="159"/><text x="95.7698%" y="383.50"></text></g><g><title>`0x7FF96A8124BB (156 samples, 0.64%)</title><rect x="95.5321%" y="357" width="0.6383%" height="15" fill="rgb(222,185,37)" fg:x="23349" fg:w="156"/><text x="95.7821%" y="367.50"></text></g><g><title>`0x7FF96B5584E2 (355 samples, 1.45%)</title><rect x="94.7302%" y="405" width="1.4525%" height="15" fill="rgb(251,177,13)" fg:x="23153" fg:w="355"/><text x="94.9802%" y="415.50"></text></g><g><title>`0x7FF96B5587F1 (6 samples, 0.02%)</title><rect x="96.1908%" y="405" width="0.0245%" height="15" fill="rgb(250,179,40)" fg:x="23510" fg:w="6"/><text x="96.4408%" y="415.50"></text></g><g><title>`0x7FF96BF2BEAC (6 samples, 0.02%)</title><rect x="96.1908%" y="389" width="0.0245%" height="15" fill="rgb(242,44,2)" fg:x="23510" fg:w="6"/><text x="96.4408%" y="399.50"></text></g><g><title>`0x7FF96B55CAE7 (740 samples, 3.03%)</title><rect x="93.2000%" y="421" width="3.0277%" height="15" fill="rgb(216,177,13)" fg:x="22779" fg:w="740"/><text x="93.4500%" y="431.50">`0x..</text></g><g><title>`0x7FF94BFE6794 (741 samples, 3.03%)</title><rect x="93.2000%" y="501" width="3.0318%" height="15" fill="rgb(216,106,43)" fg:x="22779" fg:w="741"/><text x="93.4500%" y="511.50">`0x..</text></g><g><title>`0x7FF96A82C64B (741 samples, 3.03%)</title><rect x="93.2000%" y="485" width="3.0318%" height="15" fill="rgb(216,183,2)" fg:x="22779" fg:w="741"/><text x="93.4500%" y="495.50">`0x..</text></g><g><title>`0x7FF96A84217F (741 samples, 3.03%)</title><rect x="93.2000%" y="469" width="3.0318%" height="15" fill="rgb(249,75,3)" fg:x="22779" fg:w="741"/><text x="93.4500%" y="479.50">`0x..</text></g><g><title>`0x7FF96B57D15B (741 samples, 3.03%)</title><rect x="93.2000%" y="453" width="3.0318%" height="15" fill="rgb(219,67,39)" fg:x="22779" fg:w="741"/><text x="93.4500%" y="463.50">`0x..</text></g><g><title>`0x7FF96B57D4C2 (741 samples, 3.03%)</title><rect x="93.2000%" y="437" width="3.0318%" height="15" fill="rgb(253,228,2)" fg:x="22779" fg:w="741"/><text x="93.4500%" y="447.50">`0x..</text></g><g><title>`0x7FF96D640ECB (4 samples, 0.02%)</title><rect x="96.2481%" y="293" width="0.0164%" height="15" fill="rgb(235,138,27)" fg:x="23524" fg:w="4"/><text x="96.4981%" y="303.50"></text></g><g><title>`0x7FF96D640F8F (3 samples, 0.01%)</title><rect x="96.2645%" y="293" width="0.0123%" height="15" fill="rgb(236,97,51)" fg:x="23528" fg:w="3"/><text x="96.5145%" y="303.50"></text></g><g><title>`0x7FF96D669DC9 (3 samples, 0.01%)</title><rect x="96.2645%" y="277" width="0.0123%" height="15" fill="rgb(240,80,30)" fg:x="23528" fg:w="3"/><text x="96.5145%" y="287.50"></text></g><g><title>`0x7FF96D77C614 (3 samples, 0.01%)</title><rect x="96.2645%" y="261" width="0.0123%" height="15" fill="rgb(230,178,19)" fg:x="23528" fg:w="3"/><text x="96.5145%" y="271.50"></text></g><g><title>`0x7FF96D63FF6E (15 samples, 0.06%)</title><rect x="96.2481%" y="309" width="0.0614%" height="15" fill="rgb(210,190,27)" fg:x="23524" fg:w="15"/><text x="96.4981%" y="319.50"></text></g><g><title>`0x7FF96D64137C (8 samples, 0.03%)</title><rect x="96.2767%" y="293" width="0.0327%" height="15" fill="rgb(222,107,31)" fg:x="23531" fg:w="8"/><text x="96.5267%" y="303.50"></text></g><g><title>`0x7FF96D669DC9 (8 samples, 0.03%)</title><rect x="96.2767%" y="277" width="0.0327%" height="15" fill="rgb(216,127,34)" fg:x="23531" fg:w="8"/><text x="96.5267%" y="287.50"></text></g><g><title>`0x7FF96D77C614 (8 samples, 0.03%)</title><rect x="96.2767%" y="261" width="0.0327%" height="15" fill="rgb(234,116,52)" fg:x="23531" fg:w="8"/><text x="96.5267%" y="271.50"></text></g><g><title>`0x7FF96B5578F0 (23 samples, 0.09%)</title><rect x="96.2440%" y="373" width="0.0941%" height="15" fill="rgb(222,124,15)" fg:x="23523" fg:w="23"/><text x="96.4940%" y="383.50"></text></g><g><title>`0x7FF96A886DE7 (23 samples, 0.09%)</title><rect x="96.2440%" y="357" width="0.0941%" height="15" fill="rgb(231,179,28)" fg:x="23523" fg:w="23"/><text x="96.4940%" y="367.50"></text></g><g><title>`0x7FF96D6C1D86 (23 samples, 0.09%)</title><rect x="96.2440%" y="341" width="0.0941%" height="15" fill="rgb(226,93,45)" fg:x="23523" fg:w="23"/><text x="96.4940%" y="351.50"></text></g><g><title>`0x7FF96D6C319C (22 samples, 0.09%)</title><rect x="96.2481%" y="325" width="0.0900%" height="15" fill="rgb(215,8,51)" fg:x="23524" fg:w="22"/><text x="96.4981%" y="335.50"></text></g><g><title>`0x7FF96D640406 (7 samples, 0.03%)</title><rect x="96.3095%" y="309" width="0.0286%" height="15" fill="rgb(223,106,5)" fg:x="23539" fg:w="7"/><text x="96.5595%" y="319.50"></text></g><g><title>`0x7FF96D6C4EC8 (7 samples, 0.03%)</title><rect x="96.3095%" y="293" width="0.0286%" height="15" fill="rgb(250,191,5)" fg:x="23539" fg:w="7"/><text x="96.5595%" y="303.50"></text></g><g><title>`0x7FF96D77C754 (7 samples, 0.03%)</title><rect x="96.3095%" y="277" width="0.0286%" height="15" fill="rgb(242,132,44)" fg:x="23539" fg:w="7"/><text x="96.5595%" y="287.50"></text></g><g><title>`0x7FF96D66A24A (7 samples, 0.03%)</title><rect x="96.3422%" y="325" width="0.0286%" height="15" fill="rgb(251,152,29)" fg:x="23547" fg:w="7"/><text x="96.5922%" y="335.50"></text></g><g><title>`0x7FF96D66A0B6 (7 samples, 0.03%)</title><rect x="96.3422%" y="309" width="0.0286%" height="15" fill="rgb(218,179,5)" fg:x="23547" fg:w="7"/><text x="96.5922%" y="319.50"></text></g><g><title>`0x7FF96D77C754 (7 samples, 0.03%)</title><rect x="96.3422%" y="293" width="0.0286%" height="15" fill="rgb(227,67,19)" fg:x="23547" fg:w="7"/><text x="96.5922%" y="303.50"></text></g><g><title>`0x7FF96A8C95A8 (9 samples, 0.04%)</title><rect x="96.3422%" y="341" width="0.0368%" height="15" fill="rgb(233,119,31)" fg:x="23547" fg:w="9"/><text x="96.5922%" y="351.50"></text></g><g><title>`0x7FF96A8C9616 (8 samples, 0.03%)</title><rect x="96.3790%" y="341" width="0.0327%" height="15" fill="rgb(241,120,22)" fg:x="23556" fg:w="8"/><text x="96.6290%" y="351.50"></text></g><g><title>`0x7FF96A86CA5B (8 samples, 0.03%)</title><rect x="96.3790%" y="325" width="0.0327%" height="15" fill="rgb(224,102,30)" fg:x="23556" fg:w="8"/><text x="96.6290%" y="335.50"></text></g><g><title>`0x7FF96A86CDBB (8 samples, 0.03%)</title><rect x="96.3790%" y="309" width="0.0327%" height="15" fill="rgb(210,164,37)" fg:x="23556" fg:w="8"/><text x="96.6290%" y="319.50"></text></g><g><title>`0x7FF96D77CA54 (8 samples, 0.03%)</title><rect x="96.3790%" y="293" width="0.0327%" height="15" fill="rgb(226,191,16)" fg:x="23556" fg:w="8"/><text x="96.6290%" y="303.50"></text></g><g><title>`0x7FF96B55833F (47 samples, 0.19%)</title><rect x="96.2358%" y="405" width="0.1923%" height="15" fill="rgb(214,40,45)" fg:x="23521" fg:w="47"/><text x="96.4858%" y="415.50"></text></g><g><title>`0x7FF96B5591FB (45 samples, 0.18%)</title><rect x="96.2440%" y="389" width="0.1841%" height="15" fill="rgb(244,29,26)" fg:x="23523" fg:w="45"/><text x="96.4940%" y="399.50"></text></g><g><title>`0x7FF96B557A18 (22 samples, 0.09%)</title><rect x="96.3381%" y="373" width="0.0900%" height="15" fill="rgb(216,16,5)" fg:x="23546" fg:w="22"/><text x="96.5881%" y="383.50"></text></g><g><title>`0x7FF96A8124BB (22 samples, 0.09%)</title><rect x="96.3381%" y="357" width="0.0900%" height="15" fill="rgb(249,76,35)" fg:x="23546" fg:w="22"/><text x="96.5881%" y="367.50"></text></g><g><title>`0x7FF96B55CAE7 (56 samples, 0.23%)</title><rect x="96.2358%" y="421" width="0.2291%" height="15" fill="rgb(207,11,44)" fg:x="23521" fg:w="56"/><text x="96.4858%" y="431.50"></text></g><g><title>`0x7FF96B55880C (3 samples, 0.01%)</title><rect x="96.4527%" y="405" width="0.0123%" height="15" fill="rgb(228,190,49)" fg:x="23574" fg:w="3"/><text x="96.7027%" y="415.50"></text></g><g><title>`0x7FF94BFE67F1 (59 samples, 0.24%)</title><rect x="96.2317%" y="501" width="0.2414%" height="15" fill="rgb(214,173,12)" fg:x="23520" fg:w="59"/><text x="96.4817%" y="511.50"></text></g><g><title>`0x7FF96A82C64B (59 samples, 0.24%)</title><rect x="96.2317%" y="485" width="0.2414%" height="15" fill="rgb(218,26,35)" fg:x="23520" fg:w="59"/><text x="96.4817%" y="495.50"></text></g><g><title>`0x7FF96A84217F (59 samples, 0.24%)</title><rect x="96.2317%" y="469" width="0.2414%" height="15" fill="rgb(220,200,19)" fg:x="23520" fg:w="59"/><text x="96.4817%" y="479.50"></text></g><g><title>`0x7FF96B57D15B (59 samples, 0.24%)</title><rect x="96.2317%" y="453" width="0.2414%" height="15" fill="rgb(239,95,49)" fg:x="23520" fg:w="59"/><text x="96.4817%" y="463.50"></text></g><g><title>`0x7FF96B57D4C2 (59 samples, 0.24%)</title><rect x="96.2317%" y="437" width="0.2414%" height="15" fill="rgb(235,85,53)" fg:x="23520" fg:w="59"/><text x="96.4817%" y="447.50"></text></g><g><title>`0x7FF96D640ECB (3 samples, 0.01%)</title><rect x="96.4895%" y="293" width="0.0123%" height="15" fill="rgb(233,133,31)" fg:x="23583" fg:w="3"/><text x="96.7395%" y="303.50"></text></g><g><title>`0x7FF96D64A485 (3 samples, 0.01%)</title><rect x="96.4895%" y="277" width="0.0123%" height="15" fill="rgb(218,25,20)" fg:x="23583" fg:w="3"/><text x="96.7395%" y="287.50"></text></g><g><title>`0x7FF96D64A914 (3 samples, 0.01%)</title><rect x="96.4895%" y="261" width="0.0123%" height="15" fill="rgb(252,210,38)" fg:x="23583" fg:w="3"/><text x="96.7395%" y="271.50"></text></g><g><title>`0x7FF96D77C1F4 (3 samples, 0.01%)</title><rect x="96.4895%" y="245" width="0.0123%" height="15" fill="rgb(242,134,21)" fg:x="23583" fg:w="3"/><text x="96.7395%" y="255.50"></text></g><g><title>`0x7FF96D640F8F (6 samples, 0.02%)</title><rect x="96.5018%" y="293" width="0.0245%" height="15" fill="rgb(213,28,48)" fg:x="23586" fg:w="6"/><text x="96.7518%" y="303.50"></text></g><g><title>`0x7FF96D669DC9 (6 samples, 0.02%)</title><rect x="96.5018%" y="277" width="0.0245%" height="15" fill="rgb(250,196,2)" fg:x="23586" fg:w="6"/><text x="96.7518%" y="287.50"></text></g><g><title>`0x7FF96D77C614 (6 samples, 0.02%)</title><rect x="96.5018%" y="261" width="0.0245%" height="15" fill="rgb(227,5,17)" fg:x="23586" fg:w="6"/><text x="96.7518%" y="271.50"></text></g><g><title>`0x7FF96D63FF6E (17 samples, 0.07%)</title><rect x="96.4895%" y="309" width="0.0696%" height="15" fill="rgb(221,226,24)" fg:x="23583" fg:w="17"/><text x="96.7395%" y="319.50"></text></g><g><title>`0x7FF96D64137C (8 samples, 0.03%)</title><rect x="96.5263%" y="293" width="0.0327%" height="15" fill="rgb(211,5,48)" fg:x="23592" fg:w="8"/><text x="96.7763%" y="303.50"></text></g><g><title>`0x7FF96D669DC9 (8 samples, 0.03%)</title><rect x="96.5263%" y="277" width="0.0327%" height="15" fill="rgb(219,150,6)" fg:x="23592" fg:w="8"/><text x="96.7763%" y="287.50"></text></g><g><title>`0x7FF96D77C614 (8 samples, 0.03%)</title><rect x="96.5263%" y="261" width="0.0327%" height="15" fill="rgb(251,46,16)" fg:x="23592" fg:w="8"/><text x="96.7763%" y="271.50"></text></g><g><title>`0x7FF96B5578F0 (23 samples, 0.09%)</title><rect x="96.4895%" y="373" width="0.0941%" height="15" fill="rgb(220,204,40)" fg:x="23583" fg:w="23"/><text x="96.7395%" y="383.50"></text></g><g><title>`0x7FF96A886DE7 (23 samples, 0.09%)</title><rect x="96.4895%" y="357" width="0.0941%" height="15" fill="rgb(211,85,2)" fg:x="23583" fg:w="23"/><text x="96.7395%" y="367.50"></text></g><g><title>`0x7FF96D6C1D86 (23 samples, 0.09%)</title><rect x="96.4895%" y="341" width="0.0941%" height="15" fill="rgb(229,17,7)" fg:x="23583" fg:w="23"/><text x="96.7395%" y="351.50"></text></g><g><title>`0x7FF96D6C319C (23 samples, 0.09%)</title><rect x="96.4895%" y="325" width="0.0941%" height="15" fill="rgb(239,72,28)" fg:x="23583" fg:w="23"/><text x="96.7395%" y="335.50"></text></g><g><title>`0x7FF96D640406 (6 samples, 0.02%)</title><rect x="96.5591%" y="309" width="0.0245%" height="15" fill="rgb(230,47,54)" fg:x="23600" fg:w="6"/><text x="96.8091%" y="319.50"></text></g><g><title>`0x7FF96D6C4EC8 (6 samples, 0.02%)</title><rect x="96.5591%" y="293" width="0.0245%" height="15" fill="rgb(214,50,8)" fg:x="23600" fg:w="6"/><text x="96.8091%" y="303.50"></text></g><g><title>`0x7FF96D77C754 (6 samples, 0.02%)</title><rect x="96.5591%" y="277" width="0.0245%" height="15" fill="rgb(216,198,43)" fg:x="23600" fg:w="6"/><text x="96.8091%" y="287.50"></text></g><g><title>`0x7FF96D66A24A (9 samples, 0.04%)</title><rect x="96.5836%" y="325" width="0.0368%" height="15" fill="rgb(234,20,35)" fg:x="23606" fg:w="9"/><text x="96.8336%" y="335.50"></text></g><g><title>`0x7FF96D66A0B6 (9 samples, 0.04%)</title><rect x="96.5836%" y="309" width="0.0368%" height="15" fill="rgb(254,45,19)" fg:x="23606" fg:w="9"/><text x="96.8336%" y="319.50"></text></g><g><title>`0x7FF96D77C754 (9 samples, 0.04%)</title><rect x="96.5836%" y="293" width="0.0368%" height="15" fill="rgb(219,14,44)" fg:x="23606" fg:w="9"/><text x="96.8336%" y="303.50"></text></g><g><title>`0x7FF96A8C95A8 (11 samples, 0.05%)</title><rect x="96.5836%" y="341" width="0.0450%" height="15" fill="rgb(217,220,26)" fg:x="23606" fg:w="11"/><text x="96.8336%" y="351.50"></text></g><g><title>`0x7FF96A8C9616 (8 samples, 0.03%)</title><rect x="96.6286%" y="341" width="0.0327%" height="15" fill="rgb(213,158,28)" fg:x="23617" fg:w="8"/><text x="96.8786%" y="351.50"></text></g><g><title>`0x7FF96A86CA5B (8 samples, 0.03%)</title><rect x="96.6286%" y="325" width="0.0327%" height="15" fill="rgb(252,51,52)" fg:x="23617" fg:w="8"/><text x="96.8786%" y="335.50"></text></g><g><title>`0x7FF96A86CDBB (8 samples, 0.03%)</title><rect x="96.6286%" y="309" width="0.0327%" height="15" fill="rgb(246,89,16)" fg:x="23617" fg:w="8"/><text x="96.8786%" y="319.50"></text></g><g><title>`0x7FF96D77CA54 (8 samples, 0.03%)</title><rect x="96.6286%" y="293" width="0.0327%" height="15" fill="rgb(216,158,49)" fg:x="23617" fg:w="8"/><text x="96.8786%" y="303.50"></text></g><g><title>`0x7FF96B55833F (46 samples, 0.19%)</title><rect x="96.4895%" y="405" width="0.1882%" height="15" fill="rgb(236,107,19)" fg:x="23583" fg:w="46"/><text x="96.7395%" y="415.50"></text></g><g><title>`0x7FF96B5591FB (46 samples, 0.19%)</title><rect x="96.4895%" y="389" width="0.1882%" height="15" fill="rgb(228,185,30)" fg:x="23583" fg:w="46"/><text x="96.7395%" y="399.50"></text></g><g><title>`0x7FF96B557A18 (23 samples, 0.09%)</title><rect x="96.5836%" y="373" width="0.0941%" height="15" fill="rgb(246,134,8)" fg:x="23606" fg:w="23"/><text x="96.8336%" y="383.50"></text></g><g><title>`0x7FF96A8124BB (23 samples, 0.09%)</title><rect x="96.5836%" y="357" width="0.0941%" height="15" fill="rgb(214,143,50)" fg:x="23606" fg:w="23"/><text x="96.8336%" y="367.50"></text></g><g><title>`0x7FF96B5587F1 (9 samples, 0.04%)</title><rect x="96.6941%" y="405" width="0.0368%" height="15" fill="rgb(228,75,8)" fg:x="23633" fg:w="9"/><text x="96.9441%" y="415.50"></text></g><g><title>`0x7FF96BF2BEAC (9 samples, 0.04%)</title><rect x="96.6941%" y="389" width="0.0368%" height="15" fill="rgb(207,175,4)" fg:x="23633" fg:w="9"/><text x="96.9441%" y="399.50"></text></g><g><title>`0x7FF96B558817 (3 samples, 0.01%)</title><rect x="96.7350%" y="405" width="0.0123%" height="15" fill="rgb(205,108,24)" fg:x="23643" fg:w="3"/><text x="96.9850%" y="415.50"></text></g><g><title>`0x7FF96A835C40 (3 samples, 0.01%)</title><rect x="96.7350%" y="389" width="0.0123%" height="15" fill="rgb(244,120,49)" fg:x="23643" fg:w="3"/><text x="96.9850%" y="399.50"></text></g><g><title>`0x7FF96D64FA02 (3 samples, 0.01%)</title><rect x="96.7350%" y="373" width="0.0123%" height="15" fill="rgb(223,47,38)" fg:x="23643" fg:w="3"/><text x="96.9850%" y="383.50"></text></g><g><title>`0x7FF96B55CAE7 (66 samples, 0.27%)</title><rect x="96.4854%" y="421" width="0.2700%" height="15" fill="rgb(229,179,11)" fg:x="23582" fg:w="66"/><text x="96.7354%" y="431.50"></text></g><g><title>`0x7FF94BFE693B (67 samples, 0.27%)</title><rect x="96.4854%" y="501" width="0.2741%" height="15" fill="rgb(231,122,1)" fg:x="23582" fg:w="67"/><text x="96.7354%" y="511.50"></text></g><g><title>`0x7FF96A82C64B (67 samples, 0.27%)</title><rect x="96.4854%" y="485" width="0.2741%" height="15" fill="rgb(245,119,9)" fg:x="23582" fg:w="67"/><text x="96.7354%" y="495.50"></text></g><g><title>`0x7FF96A84217F (67 samples, 0.27%)</title><rect x="96.4854%" y="469" width="0.2741%" height="15" fill="rgb(241,163,25)" fg:x="23582" fg:w="67"/><text x="96.7354%" y="479.50"></text></g><g><title>`0x7FF96B57D15B (67 samples, 0.27%)</title><rect x="96.4854%" y="453" width="0.2741%" height="15" fill="rgb(217,214,3)" fg:x="23582" fg:w="67"/><text x="96.7354%" y="463.50"></text></g><g><title>`0x7FF96B57D4C2 (67 samples, 0.27%)</title><rect x="96.4854%" y="437" width="0.2741%" height="15" fill="rgb(240,86,28)" fg:x="23582" fg:w="67"/><text x="96.7354%" y="447.50"></text></g><g><title>`0x7FF96B558FE0 (3 samples, 0.01%)</title><rect x="96.7677%" y="389" width="0.0123%" height="15" fill="rgb(215,47,9)" fg:x="23651" fg:w="3"/><text x="97.0177%" y="399.50"></text></g><g><title>`0x7FF96A812608 (3 samples, 0.01%)</title><rect x="96.7677%" y="373" width="0.0123%" height="15" fill="rgb(252,25,45)" fg:x="23651" fg:w="3"/><text x="97.0177%" y="383.50"></text></g><g><title>`0x7FF96D77C4F4 (3 samples, 0.01%)</title><rect x="96.7677%" y="357" width="0.0123%" height="15" fill="rgb(251,164,9)" fg:x="23651" fg:w="3"/><text x="97.0177%" y="367.50"></text></g><g><title>`0x7FF96D64A485 (3 samples, 0.01%)</title><rect x="96.7800%" y="277" width="0.0123%" height="15" fill="rgb(233,194,0)" fg:x="23654" fg:w="3"/><text x="97.0300%" y="287.50"></text></g><g><title>`0x7FF96D64A914 (3 samples, 0.01%)</title><rect x="96.7800%" y="261" width="0.0123%" height="15" fill="rgb(249,111,24)" fg:x="23654" fg:w="3"/><text x="97.0300%" y="271.50"></text></g><g><title>`0x7FF96D77C1F4 (3 samples, 0.01%)</title><rect x="96.7800%" y="245" width="0.0123%" height="15" fill="rgb(250,223,3)" fg:x="23654" fg:w="3"/><text x="97.0300%" y="255.50"></text></g><g><title>`0x7FF96D640ECB (4 samples, 0.02%)</title><rect x="96.7800%" y="293" width="0.0164%" height="15" fill="rgb(236,178,37)" fg:x="23654" fg:w="4"/><text x="97.0300%" y="303.50"></text></g><g><title>`0x7FF96D640F8F (3 samples, 0.01%)</title><rect x="96.7964%" y="293" width="0.0123%" height="15" fill="rgb(241,158,50)" fg:x="23658" fg:w="3"/><text x="97.0464%" y="303.50"></text></g><g><title>`0x7FF96D669DC9 (3 samples, 0.01%)</title><rect x="96.7964%" y="277" width="0.0123%" height="15" fill="rgb(213,121,41)" fg:x="23658" fg:w="3"/><text x="97.0464%" y="287.50"></text></g><g><title>`0x7FF96D77C614 (3 samples, 0.01%)</title><rect x="96.7964%" y="261" width="0.0123%" height="15" fill="rgb(240,92,3)" fg:x="23658" fg:w="3"/><text x="97.0464%" y="271.50"></text></g><g><title>`0x7FF96D63FF6E (17 samples, 0.07%)</title><rect x="96.7800%" y="309" width="0.0696%" height="15" fill="rgb(205,123,3)" fg:x="23654" fg:w="17"/><text x="97.0300%" y="319.50"></text></g><g><title>`0x7FF96D64137C (10 samples, 0.04%)</title><rect x="96.8086%" y="293" width="0.0409%" height="15" fill="rgb(205,97,47)" fg:x="23661" fg:w="10"/><text x="97.0586%" y="303.50"></text></g><g><title>`0x7FF96D669DC9 (9 samples, 0.04%)</title><rect x="96.8127%" y="277" width="0.0368%" height="15" fill="rgb(247,152,14)" fg:x="23662" fg:w="9"/><text x="97.0627%" y="287.50"></text></g><g><title>`0x7FF96D77C614 (9 samples, 0.04%)</title><rect x="96.8127%" y="261" width="0.0368%" height="15" fill="rgb(248,195,53)" fg:x="23662" fg:w="9"/><text x="97.0627%" y="271.50"></text></g><g><title>`0x7FF96D6C319C (20 samples, 0.08%)</title><rect x="96.7800%" y="325" width="0.0818%" height="15" fill="rgb(226,201,16)" fg:x="23654" fg:w="20"/><text x="97.0300%" y="335.50"></text></g><g><title>`0x7FF96D640406 (3 samples, 0.01%)</title><rect x="96.8496%" y="309" width="0.0123%" height="15" fill="rgb(205,98,0)" fg:x="23671" fg:w="3"/><text x="97.0996%" y="319.50"></text></g><g><title>`0x7FF96D6C4EC8 (3 samples, 0.01%)</title><rect x="96.8496%" y="293" width="0.0123%" height="15" fill="rgb(214,191,48)" fg:x="23671" fg:w="3"/><text x="97.0996%" y="303.50"></text></g><g><title>`0x7FF96D77C754 (3 samples, 0.01%)</title><rect x="96.8496%" y="277" width="0.0123%" height="15" fill="rgb(237,112,39)" fg:x="23671" fg:w="3"/><text x="97.0996%" y="287.50"></text></g><g><title>`0x7FF96B5578F0 (21 samples, 0.09%)</title><rect x="96.7800%" y="373" width="0.0859%" height="15" fill="rgb(247,203,27)" fg:x="23654" fg:w="21"/><text x="97.0300%" y="383.50"></text></g><g><title>`0x7FF96A886DE7 (21 samples, 0.09%)</title><rect x="96.7800%" y="357" width="0.0859%" height="15" fill="rgb(235,124,28)" fg:x="23654" fg:w="21"/><text x="97.0300%" y="367.50"></text></g><g><title>`0x7FF96D6C1D86 (21 samples, 0.09%)</title><rect x="96.7800%" y="341" width="0.0859%" height="15" fill="rgb(208,207,46)" fg:x="23654" fg:w="21"/><text x="97.0300%" y="351.50"></text></g><g><title>`0x7FF96D66A24A (7 samples, 0.03%)</title><rect x="96.8659%" y="325" width="0.0286%" height="15" fill="rgb(234,176,4)" fg:x="23675" fg:w="7"/><text x="97.1159%" y="335.50"></text></g><g><title>`0x7FF96D66A0B6 (7 samples, 0.03%)</title><rect x="96.8659%" y="309" width="0.0286%" height="15" fill="rgb(230,133,28)" fg:x="23675" fg:w="7"/><text x="97.1159%" y="319.50"></text></g><g><title>`0x7FF96D77C754 (7 samples, 0.03%)</title><rect x="96.8659%" y="293" width="0.0286%" height="15" fill="rgb(211,137,40)" fg:x="23675" fg:w="7"/><text x="97.1159%" y="303.50"></text></g><g><title>`0x7FF96A8C95A8 (9 samples, 0.04%)</title><rect x="96.8659%" y="341" width="0.0368%" height="15" fill="rgb(254,35,13)" fg:x="23675" fg:w="9"/><text x="97.1159%" y="351.50"></text></g><g><title>`0x7FF96A8C9616 (6 samples, 0.02%)</title><rect x="96.9027%" y="341" width="0.0245%" height="15" fill="rgb(225,49,51)" fg:x="23684" fg:w="6"/><text x="97.1527%" y="351.50"></text></g><g><title>`0x7FF96A86CA5B (6 samples, 0.02%)</title><rect x="96.9027%" y="325" width="0.0245%" height="15" fill="rgb(251,10,15)" fg:x="23684" fg:w="6"/><text x="97.1527%" y="335.50"></text></g><g><title>`0x7FF96A86CDBB (5 samples, 0.02%)</title><rect x="96.9068%" y="309" width="0.0205%" height="15" fill="rgb(228,207,15)" fg:x="23685" fg:w="5"/><text x="97.1568%" y="319.50"></text></g><g><title>`0x7FF96D77CA54 (5 samples, 0.02%)</title><rect x="96.9068%" y="293" width="0.0205%" height="15" fill="rgb(241,99,19)" fg:x="23685" fg:w="5"/><text x="97.1568%" y="303.50"></text></g><g><title>`0x7FF96B55833F (44 samples, 0.18%)</title><rect x="96.7636%" y="405" width="0.1800%" height="15" fill="rgb(207,104,49)" fg:x="23650" fg:w="44"/><text x="97.0136%" y="415.50"></text></g><g><title>`0x7FF96B5591FB (40 samples, 0.16%)</title><rect x="96.7800%" y="389" width="0.1637%" height="15" fill="rgb(234,99,18)" fg:x="23654" fg:w="40"/><text x="97.0300%" y="399.50"></text></g><g><title>`0x7FF96B557A18 (19 samples, 0.08%)</title><rect x="96.8659%" y="373" width="0.0777%" height="15" fill="rgb(213,191,49)" fg:x="23675" fg:w="19"/><text x="97.1159%" y="383.50"></text></g><g><title>`0x7FF96A8124BB (19 samples, 0.08%)</title><rect x="96.8659%" y="357" width="0.0777%" height="15" fill="rgb(210,226,19)" fg:x="23675" fg:w="19"/><text x="97.1159%" y="367.50"></text></g><g><title>`0x7FF96B558702 (3 samples, 0.01%)</title><rect x="96.9518%" y="405" width="0.0123%" height="15" fill="rgb(229,97,18)" fg:x="23696" fg:w="3"/><text x="97.2018%" y="415.50"></text></g><g><title>`0x7FF96B558D0C (3 samples, 0.01%)</title><rect x="96.9518%" y="389" width="0.0123%" height="15" fill="rgb(211,167,15)" fg:x="23696" fg:w="3"/><text x="97.2018%" y="399.50"></text></g><g><title>`0x7FF96BEFF761 (3 samples, 0.01%)</title><rect x="96.9518%" y="373" width="0.0123%" height="15" fill="rgb(210,169,34)" fg:x="23696" fg:w="3"/><text x="97.2018%" y="383.50"></text></g><g><title>`0x7FF96BEFF80C (3 samples, 0.01%)</title><rect x="96.9518%" y="357" width="0.0123%" height="15" fill="rgb(241,121,31)" fg:x="23696" fg:w="3"/><text x="97.2018%" y="367.50"></text></g><g><title>`0x7FF96B5587F1 (7 samples, 0.03%)</title><rect x="96.9682%" y="405" width="0.0286%" height="15" fill="rgb(232,40,11)" fg:x="23700" fg:w="7"/><text x="97.2182%" y="415.50"></text></g><g><title>`0x7FF96BF2BEAC (7 samples, 0.03%)</title><rect x="96.9682%" y="389" width="0.0286%" height="15" fill="rgb(205,86,26)" fg:x="23700" fg:w="7"/><text x="97.2182%" y="399.50"></text></g><g><title>`0x7FF96D62B73A (5 samples, 0.02%)</title><rect x="97.0009%" y="357" width="0.0205%" height="15" fill="rgb(231,126,28)" fg:x="23708" fg:w="5"/><text x="97.2509%" y="367.50"></text></g><g><title>`0x7FF96D6CE46A (5 samples, 0.02%)</title><rect x="97.0009%" y="341" width="0.0205%" height="15" fill="rgb(219,221,18)" fg:x="23708" fg:w="5"/><text x="97.2509%" y="351.50"></text></g><g><title>`0x7FF96D62EDEE (5 samples, 0.02%)</title><rect x="97.0009%" y="325" width="0.0205%" height="15" fill="rgb(211,40,0)" fg:x="23708" fg:w="5"/><text x="97.2509%" y="335.50"></text></g><g><title>`0x7FF96D6A07C9 (5 samples, 0.02%)</title><rect x="97.0009%" y="309" width="0.0205%" height="15" fill="rgb(239,85,43)" fg:x="23708" fg:w="5"/><text x="97.2509%" y="319.50"></text></g><g><title>`0x7FF96D77C374 (5 samples, 0.02%)</title><rect x="97.0009%" y="293" width="0.0205%" height="15" fill="rgb(231,55,21)" fg:x="23708" fg:w="5"/><text x="97.2509%" y="303.50"></text></g><g><title>`0x7FF96B558817 (6 samples, 0.02%)</title><rect x="97.0009%" y="405" width="0.0245%" height="15" fill="rgb(225,184,43)" fg:x="23708" fg:w="6"/><text x="97.2509%" y="415.50"></text></g><g><title>`0x7FF96A835C40 (6 samples, 0.02%)</title><rect x="97.0009%" y="389" width="0.0245%" height="15" fill="rgb(251,158,41)" fg:x="23708" fg:w="6"/><text x="97.2509%" y="399.50"></text></g><g><title>`0x7FF96D64FA02 (6 samples, 0.02%)</title><rect x="97.0009%" y="373" width="0.0245%" height="15" fill="rgb(234,159,37)" fg:x="23708" fg:w="6"/><text x="97.2509%" y="383.50"></text></g><g><title>`0x7FF96B55CAE7 (65 samples, 0.27%)</title><rect x="96.7636%" y="421" width="0.2659%" height="15" fill="rgb(216,204,22)" fg:x="23650" fg:w="65"/><text x="97.0136%" y="431.50"></text></g><g><title>`0x7FF94BFE6975 (68 samples, 0.28%)</title><rect x="96.7595%" y="501" width="0.2782%" height="15" fill="rgb(214,17,3)" fg:x="23649" fg:w="68"/><text x="97.0095%" y="511.50"></text></g><g><title>`0x7FF96A82C64B (68 samples, 0.28%)</title><rect x="96.7595%" y="485" width="0.2782%" height="15" fill="rgb(212,111,17)" fg:x="23649" fg:w="68"/><text x="97.0095%" y="495.50"></text></g><g><title>`0x7FF96A84217F (68 samples, 0.28%)</title><rect x="96.7595%" y="469" width="0.2782%" height="15" fill="rgb(221,157,24)" fg:x="23649" fg:w="68"/><text x="97.0095%" y="479.50"></text></g><g><title>`0x7FF96B57D15B (68 samples, 0.28%)</title><rect x="96.7595%" y="453" width="0.2782%" height="15" fill="rgb(252,16,13)" fg:x="23649" fg:w="68"/><text x="97.0095%" y="463.50"></text></g><g><title>`0x7FF96B57D4C2 (67 samples, 0.27%)</title><rect x="96.7636%" y="437" width="0.2741%" height="15" fill="rgb(221,62,2)" fg:x="23650" fg:w="67"/><text x="97.0136%" y="447.50"></text></g><g><title>`0x7FF96B558E1E (3 samples, 0.01%)</title><rect x="97.0541%" y="389" width="0.0123%" height="15" fill="rgb(247,87,22)" fg:x="23721" fg:w="3"/><text x="97.3041%" y="399.50"></text></g><g><title>`0x7FF96B55833F (4 samples, 0.02%)</title><rect x="97.0541%" y="405" width="0.0164%" height="15" fill="rgb(215,73,9)" fg:x="23721" fg:w="4"/><text x="97.3041%" y="415.50"></text></g><g><title>`0x7FF96B5587F1 (6 samples, 0.02%)</title><rect x="97.0869%" y="405" width="0.0245%" height="15" fill="rgb(207,175,33)" fg:x="23729" fg:w="6"/><text x="97.3369%" y="415.50"></text></g><g><title>`0x7FF96BF2BEAC (6 samples, 0.02%)</title><rect x="97.0869%" y="389" width="0.0245%" height="15" fill="rgb(243,129,54)" fg:x="23729" fg:w="6"/><text x="97.3369%" y="399.50"></text></g><g><title>`0x7FF96B558817 (3 samples, 0.01%)</title><rect x="97.1114%" y="405" width="0.0123%" height="15" fill="rgb(227,119,45)" fg:x="23735" fg:w="3"/><text x="97.3614%" y="415.50"></text></g><g><title>`0x7FF96A835C40 (3 samples, 0.01%)</title><rect x="97.1114%" y="389" width="0.0123%" height="15" fill="rgb(205,109,36)" fg:x="23735" fg:w="3"/><text x="97.3614%" y="399.50"></text></g><g><title>`0x7FF96D64FA02 (3 samples, 0.01%)</title><rect x="97.1114%" y="373" width="0.0123%" height="15" fill="rgb(205,6,39)" fg:x="23735" fg:w="3"/><text x="97.3614%" y="383.50"></text></g><g><title>`0x7FF96D62B73A (3 samples, 0.01%)</title><rect x="97.1114%" y="357" width="0.0123%" height="15" fill="rgb(221,32,16)" fg:x="23735" fg:w="3"/><text x="97.3614%" y="367.50"></text></g><g><title>`0x7FF96B55CAE7 (18 samples, 0.07%)</title><rect x="97.0541%" y="421" width="0.0736%" height="15" fill="rgb(228,144,50)" fg:x="23721" fg:w="18"/><text x="97.3041%" y="431.50"></text></g><g><title>`0x7FF94BFE6ABD (20 samples, 0.08%)</title><rect x="97.0500%" y="501" width="0.0818%" height="15" fill="rgb(229,201,53)" fg:x="23720" fg:w="20"/><text x="97.3000%" y="511.50"></text></g><g><title>`0x7FF96A82C64B (20 samples, 0.08%)</title><rect x="97.0500%" y="485" width="0.0818%" height="15" fill="rgb(249,153,27)" fg:x="23720" fg:w="20"/><text x="97.3000%" y="495.50"></text></g><g><title>`0x7FF96A84217F (20 samples, 0.08%)</title><rect x="97.0500%" y="469" width="0.0818%" height="15" fill="rgb(227,106,25)" fg:x="23720" fg:w="20"/><text x="97.3000%" y="479.50"></text></g><g><title>`0x7FF96B57D15B (20 samples, 0.08%)</title><rect x="97.0500%" y="453" width="0.0818%" height="15" fill="rgb(230,65,29)" fg:x="23720" fg:w="20"/><text x="97.3000%" y="463.50"></text></g><g><title>`0x7FF96B57D4C2 (20 samples, 0.08%)</title><rect x="97.0500%" y="437" width="0.0818%" height="15" fill="rgb(221,57,46)" fg:x="23720" fg:w="20"/><text x="97.3000%" y="447.50"></text></g><g><title>`0x7FF96D640ECB (4 samples, 0.02%)</title><rect x="97.1564%" y="293" width="0.0164%" height="15" fill="rgb(229,161,17)" fg:x="23746" fg:w="4"/><text x="97.4064%" y="303.50"></text></g><g><title>`0x7FF96D640F8F (3 samples, 0.01%)</title><rect x="97.1728%" y="293" width="0.0123%" height="15" fill="rgb(222,213,11)" fg:x="23750" fg:w="3"/><text x="97.4228%" y="303.50"></text></g><g><title>`0x7FF96D669DC9 (3 samples, 0.01%)</title><rect x="97.1728%" y="277" width="0.0123%" height="15" fill="rgb(235,35,13)" fg:x="23750" fg:w="3"/><text x="97.4228%" y="287.50"></text></g><g><title>`0x7FF96D77C614 (3 samples, 0.01%)</title><rect x="97.1728%" y="261" width="0.0123%" height="15" fill="rgb(233,158,34)" fg:x="23750" fg:w="3"/><text x="97.4228%" y="271.50"></text></g><g><title>`0x7FF96D63FF6E (16 samples, 0.07%)</title><rect x="97.1523%" y="309" width="0.0655%" height="15" fill="rgb(215,151,48)" fg:x="23745" fg:w="16"/><text x="97.4023%" y="319.50"></text></g><g><title>`0x7FF96D64137C (8 samples, 0.03%)</title><rect x="97.1851%" y="293" width="0.0327%" height="15" fill="rgb(229,84,14)" fg:x="23753" fg:w="8"/><text x="97.4351%" y="303.50"></text></g><g><title>`0x7FF96D669DC9 (7 samples, 0.03%)</title><rect x="97.1891%" y="277" width="0.0286%" height="15" fill="rgb(229,68,14)" fg:x="23754" fg:w="7"/><text x="97.4391%" y="287.50"></text></g><g><title>`0x7FF96D77C614 (7 samples, 0.03%)</title><rect x="97.1891%" y="261" width="0.0286%" height="15" fill="rgb(243,106,26)" fg:x="23754" fg:w="7"/><text x="97.4391%" y="271.50"></text></g><g><title>`0x7FF96B5578F0 (24 samples, 0.10%)</title><rect x="97.1482%" y="373" width="0.0982%" height="15" fill="rgb(206,45,38)" fg:x="23744" fg:w="24"/><text x="97.3982%" y="383.50"></text></g><g><title>`0x7FF96A886DE7 (24 samples, 0.10%)</title><rect x="97.1482%" y="357" width="0.0982%" height="15" fill="rgb(226,6,15)" fg:x="23744" fg:w="24"/><text x="97.3982%" y="367.50"></text></g><g><title>`0x7FF96D6C1D86 (24 samples, 0.10%)</title><rect x="97.1482%" y="341" width="0.0982%" height="15" fill="rgb(232,22,54)" fg:x="23744" fg:w="24"/><text x="97.3982%" y="351.50"></text></g><g><title>`0x7FF96D6C319C (23 samples, 0.09%)</title><rect x="97.1523%" y="325" width="0.0941%" height="15" fill="rgb(229,222,32)" fg:x="23745" fg:w="23"/><text x="97.4023%" y="335.50"></text></g><g><title>`0x7FF96D640406 (7 samples, 0.03%)</title><rect x="97.2178%" y="309" width="0.0286%" height="15" fill="rgb(228,62,29)" fg:x="23761" fg:w="7"/><text x="97.4678%" y="319.50"></text></g><g><title>`0x7FF96D6C4EC8 (7 samples, 0.03%)</title><rect x="97.2178%" y="293" width="0.0286%" height="15" fill="rgb(251,103,34)" fg:x="23761" fg:w="7"/><text x="97.4678%" y="303.50"></text></g><g><title>`0x7FF96D77C754 (7 samples, 0.03%)</title><rect x="97.2178%" y="277" width="0.0286%" height="15" fill="rgb(233,12,30)" fg:x="23761" fg:w="7"/><text x="97.4678%" y="287.50"></text></g><g><title>`0x7FF96D66A24A (8 samples, 0.03%)</title><rect x="97.2505%" y="325" width="0.0327%" height="15" fill="rgb(238,52,0)" fg:x="23769" fg:w="8"/><text x="97.5005%" y="335.50"></text></g><g><title>`0x7FF96D66A0B6 (8 samples, 0.03%)</title><rect x="97.2505%" y="309" width="0.0327%" height="15" fill="rgb(223,98,5)" fg:x="23769" fg:w="8"/><text x="97.5005%" y="319.50"></text></g><g><title>`0x7FF96D77C754 (8 samples, 0.03%)</title><rect x="97.2505%" y="293" width="0.0327%" height="15" fill="rgb(228,75,37)" fg:x="23769" fg:w="8"/><text x="97.5005%" y="303.50"></text></g><g><title>`0x7FF96A8C95A8 (10 samples, 0.04%)</title><rect x="97.2505%" y="341" width="0.0409%" height="15" fill="rgb(205,115,49)" fg:x="23769" fg:w="10"/><text x="97.5005%" y="351.50"></text></g><g><title>`0x7FF96A8C9616 (7 samples, 0.03%)</title><rect x="97.2914%" y="341" width="0.0286%" height="15" fill="rgb(250,154,43)" fg:x="23779" fg:w="7"/><text x="97.5414%" y="351.50"></text></g><g><title>`0x7FF96A86CA5B (7 samples, 0.03%)</title><rect x="97.2914%" y="325" width="0.0286%" height="15" fill="rgb(226,43,29)" fg:x="23779" fg:w="7"/><text x="97.5414%" y="335.50"></text></g><g><title>`0x7FF96A86CDBB (7 samples, 0.03%)</title><rect x="97.2914%" y="309" width="0.0286%" height="15" fill="rgb(249,228,39)" fg:x="23779" fg:w="7"/><text x="97.5414%" y="319.50"></text></g><g><title>`0x7FF96D77CA54 (7 samples, 0.03%)</title><rect x="97.2914%" y="293" width="0.0286%" height="15" fill="rgb(216,79,43)" fg:x="23779" fg:w="7"/><text x="97.5414%" y="303.50"></text></g><g><title>`0x7FF96B55833F (47 samples, 0.19%)</title><rect x="97.1401%" y="405" width="0.1923%" height="15" fill="rgb(228,95,12)" fg:x="23742" fg:w="47"/><text x="97.3901%" y="415.50"></text></g><g><title>`0x7FF96B5591FB (45 samples, 0.18%)</title><rect x="97.1482%" y="389" width="0.1841%" height="15" fill="rgb(249,221,15)" fg:x="23744" fg:w="45"/><text x="97.3982%" y="399.50"></text></g><g><title>`0x7FF96B557A18 (21 samples, 0.09%)</title><rect x="97.2464%" y="373" width="0.0859%" height="15" fill="rgb(233,34,13)" fg:x="23768" fg:w="21"/><text x="97.4964%" y="383.50"></text></g><g><title>`0x7FF96A8124BB (20 samples, 0.08%)</title><rect x="97.2505%" y="357" width="0.0818%" height="15" fill="rgb(214,103,39)" fg:x="23769" fg:w="20"/><text x="97.5005%" y="367.50"></text></g><g><title>`0x7FF96B558702 (4 samples, 0.02%)</title><rect x="97.3364%" y="405" width="0.0164%" height="15" fill="rgb(251,126,39)" fg:x="23790" fg:w="4"/><text x="97.5864%" y="415.50"></text></g><g><title>`0x7FF96B558D0C (4 samples, 0.02%)</title><rect x="97.3364%" y="389" width="0.0164%" height="15" fill="rgb(214,216,36)" fg:x="23790" fg:w="4"/><text x="97.5864%" y="399.50"></text></g><g><title>`0x7FF96BEFF761 (4 samples, 0.02%)</title><rect x="97.3364%" y="373" width="0.0164%" height="15" fill="rgb(220,221,8)" fg:x="23790" fg:w="4"/><text x="97.5864%" y="383.50"></text></g><g><title>`0x7FF96BEFF80C (4 samples, 0.02%)</title><rect x="97.3364%" y="357" width="0.0164%" height="15" fill="rgb(240,216,3)" fg:x="23790" fg:w="4"/><text x="97.5864%" y="367.50"></text></g><g><title>`0x7FF96B5587F1 (11 samples, 0.05%)</title><rect x="97.3528%" y="405" width="0.0450%" height="15" fill="rgb(232,218,17)" fg:x="23794" fg:w="11"/><text x="97.6028%" y="415.50"></text></g><g><title>`0x7FF96BF2BEAC (11 samples, 0.05%)</title><rect x="97.3528%" y="389" width="0.0450%" height="15" fill="rgb(229,163,45)" fg:x="23794" fg:w="11"/><text x="97.6028%" y="399.50"></text></g><g><title>`0x7FF96B55CAE7 (67 samples, 0.27%)</title><rect x="97.1401%" y="421" width="0.2741%" height="15" fill="rgb(231,110,42)" fg:x="23742" fg:w="67"/><text x="97.3901%" y="431.50"></text></g><g><title>`0x7FF96B558817 (4 samples, 0.02%)</title><rect x="97.3978%" y="405" width="0.0164%" height="15" fill="rgb(208,170,48)" fg:x="23805" fg:w="4"/><text x="97.6478%" y="415.50"></text></g><g><title>`0x7FF96A835C40 (4 samples, 0.02%)</title><rect x="97.3978%" y="389" width="0.0164%" height="15" fill="rgb(239,116,25)" fg:x="23805" fg:w="4"/><text x="97.6478%" y="399.50"></text></g><g><title>`0x7FF96D64FA02 (4 samples, 0.02%)</title><rect x="97.3978%" y="373" width="0.0164%" height="15" fill="rgb(219,200,50)" fg:x="23805" fg:w="4"/><text x="97.6478%" y="383.50"></text></g><g><title>`0x7FF96D62B73A (4 samples, 0.02%)</title><rect x="97.3978%" y="357" width="0.0164%" height="15" fill="rgb(245,200,0)" fg:x="23805" fg:w="4"/><text x="97.6478%" y="367.50"></text></g><g><title>`0x7FF96D6CE46A (4 samples, 0.02%)</title><rect x="97.3978%" y="341" width="0.0164%" height="15" fill="rgb(245,119,33)" fg:x="23805" fg:w="4"/><text x="97.6478%" y="351.50"></text></g><g><title>`0x7FF96D62EDEE (4 samples, 0.02%)</title><rect x="97.3978%" y="325" width="0.0164%" height="15" fill="rgb(231,125,12)" fg:x="23805" fg:w="4"/><text x="97.6478%" y="335.50"></text></g><g><title>`0x7FF96D6A07C9 (4 samples, 0.02%)</title><rect x="97.3978%" y="309" width="0.0164%" height="15" fill="rgb(216,96,41)" fg:x="23805" fg:w="4"/><text x="97.6478%" y="319.50"></text></g><g><title>`0x7FF96D77C374 (4 samples, 0.02%)</title><rect x="97.3978%" y="293" width="0.0164%" height="15" fill="rgb(248,43,45)" fg:x="23805" fg:w="4"/><text x="97.6478%" y="303.50"></text></g><g><title>`0x7FF94BFE6AFA (70 samples, 0.29%)</title><rect x="97.1319%" y="501" width="0.2864%" height="15" fill="rgb(217,222,7)" fg:x="23740" fg:w="70"/><text x="97.3819%" y="511.50"></text></g><g><title>`0x7FF96A82C64B (70 samples, 0.29%)</title><rect x="97.1319%" y="485" width="0.2864%" height="15" fill="rgb(233,28,6)" fg:x="23740" fg:w="70"/><text x="97.3819%" y="495.50"></text></g><g><title>`0x7FF96A84217F (70 samples, 0.29%)</title><rect x="97.1319%" y="469" width="0.2864%" height="15" fill="rgb(231,218,15)" fg:x="23740" fg:w="70"/><text x="97.3819%" y="479.50"></text></g><g><title>`0x7FF96B57D15B (70 samples, 0.29%)</title><rect x="97.1319%" y="453" width="0.2864%" height="15" fill="rgb(226,171,48)" fg:x="23740" fg:w="70"/><text x="97.3819%" y="463.50"></text></g><g><title>`0x7FF96B57D4C2 (69 samples, 0.28%)</title><rect x="97.1360%" y="437" width="0.2823%" height="15" fill="rgb(235,201,9)" fg:x="23741" fg:w="69"/><text x="97.3860%" y="447.50"></text></g><g><title>`0x7FF94BFF935A (7 samples, 0.03%)</title><rect x="97.4428%" y="421" width="0.0286%" height="15" fill="rgb(217,80,15)" fg:x="23816" fg:w="7"/><text x="97.6928%" y="431.50"></text></g><g><title>`0x7FF96AD8CAB4 (8 samples, 0.03%)</title><rect x="97.4428%" y="437" width="0.0327%" height="15" fill="rgb(219,152,8)" fg:x="23816" fg:w="8"/><text x="97.6928%" y="447.50"></text></g><g><title>`0x7FF96AD8CB9A (3 samples, 0.01%)</title><rect x="97.4837%" y="437" width="0.0123%" height="15" fill="rgb(243,107,38)" fg:x="23826" fg:w="3"/><text x="97.7337%" y="447.50"></text></g><g><title>`0x7FF94BFF935A (8 samples, 0.03%)</title><rect x="97.5083%" y="421" width="0.0327%" height="15" fill="rgb(231,17,5)" fg:x="23832" fg:w="8"/><text x="97.7583%" y="431.50"></text></g><g><title>`0x7FF96AD8CBF9 (11 samples, 0.05%)</title><rect x="97.5001%" y="437" width="0.0450%" height="15" fill="rgb(209,25,54)" fg:x="23830" fg:w="11"/><text x="97.7501%" y="447.50"></text></g><g><title>rust.exe`sysinfo::common::system::RefreshKind::processes (3,150 samples, 12.89%)</title><rect x="84.6897%" y="645" width="12.8882%" height="15" fill="rgb(219,0,2)" fg:x="20699" fg:w="3150"/><text x="84.9397%" y="655.50">rust.exe`sysinfo::c..</text></g><g><title>rust.exe`sysinfo::windows::system::SystemInner::refresh_cpu_specifics (3,150 samples, 12.89%)</title><rect x="84.6897%" y="629" width="12.8882%" height="15" fill="rgb(246,9,5)" fg:x="20699" fg:w="3150"/><text x="84.9397%" y="639.50">rust.exe`sysinfo::w..</text></g><g><title>rust.exe`sysinfo::windows::system::SystemInner::initialize_cpu_counters (3,150 samples, 12.89%)</title><rect x="84.6897%" y="613" width="12.8882%" height="15" fill="rgb(226,159,4)" fg:x="20699" fg:w="3150"/><text x="84.9397%" y="623.50">rust.exe`sysinfo::w..</text></g><g><title>rust.exe`sysinfo::windows::cpu::CpusWrapper::iter_mut (3,150 samples, 12.89%)</title><rect x="84.6897%" y="597" width="12.8882%" height="15" fill="rgb(219,175,34)" fg:x="20699" fg:w="3150"/><text x="84.9397%" y="607.50">rust.exe`sysinfo::w..</text></g><g><title>rust.exe`sysinfo::windows::system::add_english_counter(alloc::string::String, sysinfo::windows::cpu::Query*, enum2$&lt;core::option::Option (3,149 samples, 12.88%)</title><rect x="84.6938%" y="581" width="12.8841%" height="15" fill="rgb(236,10,46)" fg:x="20700" fg:w="3149"/><text x="84.9438%" y="591.50">rust.exe`sysinfo::w..</text></g><g><title>rust.exe`sysinfo::windows::cpu::Query::add_english_counter(alloc::string::String*, alloc::vec::Vec (3,149 samples, 12.88%)</title><rect x="84.6938%" y="565" width="12.8841%" height="15" fill="rgb(240,211,16)" fg:x="20700" fg:w="3149"/><text x="84.9438%" y="575.50">rust.exe`sysinfo::w..</text></g><g><title>`0x7FF94BFF1B1F (3,149 samples, 12.88%)</title><rect x="84.6938%" y="549" width="12.8841%" height="15" fill="rgb(205,3,43)" fg:x="20700" fg:w="3149"/><text x="84.9438%" y="559.50">`0x7FF94BFF1B1F</text></g><g><title>`0x7FF94BFEE57C (3,072 samples, 12.57%)</title><rect x="85.0088%" y="533" width="12.5690%" height="15" fill="rgb(245,7,22)" fg:x="20777" fg:w="3072"/><text x="85.2588%" y="543.50">`0x7FF94BFEE57C</text></g><g><title>`0x7FF94BFE6EFB (2,082 samples, 8.52%)</title><rect x="89.0594%" y="517" width="8.5185%" height="15" fill="rgb(239,132,32)" fg:x="21767" fg:w="2082"/><text x="89.3094%" y="527.50">`0x7FF94BFE6..</text></g><g><title>`0x7FF94BFE6BDD (35 samples, 0.14%)</title><rect x="97.4346%" y="501" width="0.1432%" height="15" fill="rgb(228,202,34)" fg:x="23814" fg:w="35"/><text x="97.6846%" y="511.50"></text></g><g><title>`0x7FF94BFF9C5A (34 samples, 0.14%)</title><rect x="97.4387%" y="485" width="0.1391%" height="15" fill="rgb(254,200,22)" fg:x="23815" fg:w="34"/><text x="97.6887%" y="495.50"></text></g><g><title>`0x7FF96AD8C8F7 (34 samples, 0.14%)</title><rect x="97.4387%" y="469" width="0.1391%" height="15" fill="rgb(219,10,39)" fg:x="23815" fg:w="34"/><text x="97.6887%" y="479.50"></text></g><g><title>`0x7FF96AD8C952 (34 samples, 0.14%)</title><rect x="97.4387%" y="453" width="0.1391%" height="15" fill="rgb(226,210,39)" fg:x="23815" fg:w="34"/><text x="97.6887%" y="463.50"></text></g><g><title>`0x7FF96AD8CD85 (3 samples, 0.01%)</title><rect x="97.5656%" y="437" width="0.0123%" height="15" fill="rgb(208,219,16)" fg:x="23846" fg:w="3"/><text x="97.8156%" y="447.50"></text></g><g><title>rust.exe`core::ptr::drop_in_place(enum2$&lt;core::option::Option (3 samples, 0.01%)</title><rect x="97.5778%" y="549" width="0.0123%" height="15" fill="rgb(216,158,51)" fg:x="23849" fg:w="3"/><text x="97.8278%" y="559.50"></text></g><g><title>rust.exe`hashbrown::map::HashMap&lt;sysinfo::common::system::Pid,sysinfo::common::system::Process,std::hash::random::RandomState,alloc::alloc::Global&gt;::insert&lt;sysinfo::common::system::Pid,sysinfo::common::system::Process,std::hash::random::RandomState,alloc::alloc::Global&gt; (3 samples, 0.01%)</title><rect x="97.5778%" y="533" width="0.0123%" height="15" fill="rgb(233,14,44)" fg:x="23849" fg:w="3"/><text x="97.8278%" y="543.50"></text></g><g><title>rust.exe`hashbrown::raw::RawTable&lt;tuple$&lt;sysinfo::common::system::Pid,sysinfo::common::system::Process&gt;,alloc::alloc::Global&gt;::insert_in_slot(unsigned long long, hashbrown::raw::InsertSlot, tuple$ (3 samples, 0.01%)</title><rect x="97.5778%" y="517" width="0.0123%" height="15" fill="rgb(237,97,39)" fg:x="23849" fg:w="3"/><text x="97.8278%" y="527.50"></text></g><g><title>rust.exe`hashbrown::raw::Bucket&lt;tuple$&lt;sysinfo::common::system::Pid,sysinfo::common::system::Process&gt; &gt;::write(tuple$ (3 samples, 0.01%)</title><rect x="97.5778%" y="501" width="0.0123%" height="15" fill="rgb(218,198,43)" fg:x="23849" fg:w="3"/><text x="97.8278%" y="511.50"></text></g><g><title>rust.exe`core::ptr::mut_ptr::impl$0::write(tuple$&lt;sysinfo::common::system::Pid,sysinfo::common::system::Process&gt;*, tuple$ (3 samples, 0.01%)</title><rect x="97.5778%" y="485" width="0.0123%" height="15" fill="rgb(231,104,20)" fg:x="23849" fg:w="3"/><text x="97.8278%" y="495.50"></text></g><g><title>rust.exe`core::ptr::write(tuple$&lt;sysinfo::common::system::Pid,sysinfo::common::system::Process&gt;*, tuple$ (3 samples, 0.01%)</title><rect x="97.5778%" y="469" width="0.0123%" height="15" fill="rgb(254,36,13)" fg:x="23849" fg:w="3"/><text x="97.8278%" y="479.50"></text></g><g><title>rust.exe`sysinfo::windows::process::get_process_handler (3 samples, 0.01%)</title><rect x="97.5942%" y="517" width="0.0123%" height="15" fill="rgb(248,14,50)" fg:x="23853" fg:w="3"/><text x="97.8442%" y="527.50"></text></g><g><title>rust.exe`windows::Win32::System::Threading::OpenProcess (3 samples, 0.01%)</title><rect x="97.5942%" y="501" width="0.0123%" height="15" fill="rgb(217,107,29)" fg:x="23853" fg:w="3"/><text x="97.8442%" y="511.50"></text></g><g><title>`0x7FF96A8C8536 (3 samples, 0.01%)</title><rect x="97.5942%" y="485" width="0.0123%" height="15" fill="rgb(251,169,33)" fg:x="23853" fg:w="3"/><text x="97.8442%" y="495.50"></text></g><g><title>`0x7FF96D77C474 (3 samples, 0.01%)</title><rect x="97.5942%" y="469" width="0.0123%" height="15" fill="rgb(217,108,32)" fg:x="23853" fg:w="3"/><text x="97.8442%" y="479.50"></text></g><g><title>rust.exe`sysinfo::windows::process::ProcessInner::from_process_entry (9 samples, 0.04%)</title><rect x="97.5901%" y="549" width="0.0368%" height="15" fill="rgb(219,66,42)" fg:x="23852" fg:w="9"/><text x="97.8401%" y="559.50"></text></g><g><title>rust.exe`sysinfo::windows::process::ProcessInner::new(sysinfo::common::system::Pid, enum2$&lt;core::option::Option (8 samples, 0.03%)</title><rect x="97.5942%" y="533" width="0.0327%" height="15" fill="rgb(206,180,7)" fg:x="23853" fg:w="8"/><text x="97.8442%" y="543.50"></text></g><g><title>rust.exe`sysinfo::windows::process::get_start_and_run_time (5 samples, 0.02%)</title><rect x="97.6065%" y="517" width="0.0205%" height="15" fill="rgb(208,226,31)" fg:x="23856" fg:w="5"/><text x="97.8565%" y="527.50"></text></g><g><title>rust.exe`sysinfo::windows::process::get_process_times (5 samples, 0.02%)</title><rect x="97.6065%" y="501" width="0.0205%" height="15" fill="rgb(218,26,49)" fg:x="23856" fg:w="5"/><text x="97.8565%" y="511.50"></text></g><g><title>rust.exe`windows::Win32::System::Threading::GetProcessTimes (5 samples, 0.02%)</title><rect x="97.6065%" y="485" width="0.0205%" height="15" fill="rgb(233,197,48)" fg:x="23856" fg:w="5"/><text x="97.8565%" y="495.50"></text></g><g><title>rust.exe`windows::Win32::Foundation::BOOL::ok (5 samples, 0.02%)</title><rect x="97.6065%" y="469" width="0.0205%" height="15" fill="rgb(252,181,51)" fg:x="23856" fg:w="5"/><text x="97.8565%" y="479.50"></text></g><g><title>`0x7FF96A8D1956 (5 samples, 0.02%)</title><rect x="97.6065%" y="453" width="0.0205%" height="15" fill="rgb(253,90,19)" fg:x="23856" fg:w="5"/><text x="97.8565%" y="463.50"></text></g><g><title>`0x7FF96D77C2D4 (5 samples, 0.02%)</title><rect x="97.6065%" y="437" width="0.0205%" height="15" fill="rgb(215,171,30)" fg:x="23856" fg:w="5"/><text x="97.8565%" y="447.50"></text></g><g><title>rust.exe`sysinfo::windows::process::compute_cpu_usage (19 samples, 0.08%)</title><rect x="97.6269%" y="533" width="0.0777%" height="15" fill="rgb(214,222,9)" fg:x="23861" fg:w="19"/><text x="97.8769%" y="543.50"></text></g><g><title>rust.exe`windows::Win32::System::Threading::GetSystemTimes(enum2$&lt;core::option::Option&lt;ptr_mut$&lt;windows::Win32::Foundation::FILETIME&gt; &gt; &gt;, enum2$&lt;core::option::Option&lt;ptr_mut$&lt;windows::Win32::Foundation::FILETIME&gt; &gt; &gt;, enum2$&lt;core::option::Option&lt;ptr_mut$ (17 samples, 0.07%)</title><rect x="97.6351%" y="517" width="0.0696%" height="15" fill="rgb(223,3,22)" fg:x="23863" fg:w="17"/><text x="97.8851%" y="527.50"></text></g><g><title>rust.exe`windows::Win32::Foundation::BOOL::ok (17 samples, 0.07%)</title><rect x="97.6351%" y="501" width="0.0696%" height="15" fill="rgb(225,196,46)" fg:x="23863" fg:w="17"/><text x="97.8851%" y="511.50"></text></g><g><title>`0x7FF96A8C8F93 (17 samples, 0.07%)</title><rect x="97.6351%" y="485" width="0.0696%" height="15" fill="rgb(209,110,37)" fg:x="23863" fg:w="17"/><text x="97.8851%" y="495.50"></text></g><g><title>`0x7FF96D77C674 (17 samples, 0.07%)</title><rect x="97.6351%" y="469" width="0.0696%" height="15" fill="rgb(249,89,12)" fg:x="23863" fg:w="17"/><text x="97.8851%" y="479.50"></text></g><g><title>`0x7FF96A8B99D8 (55 samples, 0.23%)</title><rect x="97.7088%" y="501" width="0.2250%" height="15" fill="rgb(226,27,33)" fg:x="23881" fg:w="55"/><text x="97.9588%" y="511.50"></text></g><g><title>`0x7FF96D77C2D4 (55 samples, 0.23%)</title><rect x="97.7088%" y="485" width="0.2250%" height="15" fill="rgb(213,82,22)" fg:x="23881" fg:w="55"/><text x="97.9588%" y="495.50"></text></g><g><title>rust.exe`sysinfo::windows::process::get_exe (57 samples, 0.23%)</title><rect x="97.7047%" y="533" width="0.2332%" height="15" fill="rgb(248,140,0)" fg:x="23880" fg:w="57"/><text x="97.9547%" y="543.50"></text></g><g><title>rust.exe`windows::Win32::System::ProcessStatus::GetModuleFileNameExW(windows::Win32::Foundation::HANDLE, windows::Win32::Foundation::HINSTANCE, ref_mut$&lt;slice2$ (57 samples, 0.23%)</title><rect x="97.7047%" y="517" width="0.2332%" height="15" fill="rgb(228,106,3)" fg:x="23880" fg:w="57"/><text x="97.9547%" y="527.50"></text></g><g><title>`0x7FF96CFC8935 (3 samples, 0.01%)</title><rect x="97.9624%" y="277" width="0.0123%" height="15" fill="rgb(209,23,37)" fg:x="23943" fg:w="3"/><text x="98.2124%" y="287.50"></text></g><g><title>`0x7FF96CED3632 (3 samples, 0.01%)</title><rect x="97.9624%" y="261" width="0.0123%" height="15" fill="rgb(241,93,50)" fg:x="23943" fg:w="3"/><text x="98.2124%" y="271.50"></text></g><g><title>`0x7FF96D6EE386 (3 samples, 0.01%)</title><rect x="97.9624%" y="245" width="0.0123%" height="15" fill="rgb(253,46,43)" fg:x="23943" fg:w="3"/><text x="98.2124%" y="255.50"></text></g><g><title>`0x7FF96D674873 (3 samples, 0.01%)</title><rect x="97.9624%" y="229" width="0.0123%" height="15" fill="rgb(226,206,43)" fg:x="23943" fg:w="3"/><text x="98.2124%" y="239.50"></text></g><g><title>`0x7FF96D676616 (3 samples, 0.01%)</title><rect x="97.9624%" y="213" width="0.0123%" height="15" fill="rgb(217,54,7)" fg:x="23943" fg:w="3"/><text x="98.2124%" y="223.50"></text></g><g><title>rust.exe`core::ptr::drop_in_place(alloc::vec::Vec (9 samples, 0.04%)</title><rect x="97.9461%" y="389" width="0.0368%" height="15" fill="rgb(223,5,52)" fg:x="23939" fg:w="9"/><text x="98.1961%" y="399.50"></text></g><g><title>rust.exe`core::ptr::drop_in_place(alloc::raw_vec::RawVec (9 samples, 0.04%)</title><rect x="97.9461%" y="373" width="0.0368%" height="15" fill="rgb(206,52,46)" fg:x="23939" fg:w="9"/><text x="98.1961%" y="383.50"></text></g><g><title>rust.exe`alloc::raw_vec::impl$4::drop(alloc::raw_vec::RawVec (9 samples, 0.04%)</title><rect x="97.9461%" y="357" width="0.0368%" height="15" fill="rgb(253,136,11)" fg:x="23939" fg:w="9"/><text x="98.1961%" y="367.50"></text></g><g><title>rust.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::deallocate (9 samples, 0.04%)</title><rect x="97.9461%" y="341" width="0.0368%" height="15" fill="rgb(208,106,33)" fg:x="23939" fg:w="9"/><text x="98.1961%" y="351.50"></text></g><g><title>rust.exe`alloc::alloc::impl$1::deallocate(alloc::alloc::Global*, core::ptr::non_null::NonNull (9 samples, 0.04%)</title><rect x="97.9461%" y="325" width="0.0368%" height="15" fill="rgb(206,54,4)" fg:x="23939" fg:w="9"/><text x="98.1961%" y="335.50"></text></g><g><title>rust.exe`alloc::alloc::dealloc (9 samples, 0.04%)</title><rect x="97.9461%" y="309" width="0.0368%" height="15" fill="rgb(213,3,15)" fg:x="23939" fg:w="9"/><text x="98.1961%" y="319.50"></text></g><g><title>rust.exe`sysinfo::windows::process::get_cmdline_from_buffer (9 samples, 0.04%)</title><rect x="97.9461%" y="293" width="0.0368%" height="15" fill="rgb(252,211,39)" fg:x="23939" fg:w="9"/><text x="98.1961%" y="303.50"></text></g><g><title>rust.exe`sysinfo::windows::process::get_cmd_line&lt;ntapi::ntrtl::RTL_USER_PROCESS_PARAMETERS&gt;(ntapi::ntrtl::RTL_USER_PROCESS_PARAMETERS*, windows::Win32::Foundation::HANDLE, sysinfo::common::system::ProcessRefreshKind, alloc::vec::Vec (12 samples, 0.05%)</title><rect x="97.9461%" y="517" width="0.0491%" height="15" fill="rgb(223,6,36)" fg:x="23939" fg:w="12"/><text x="98.1961%" y="527.50"></text></g><g><title>rust.exe`core::ptr::drop_in_place(alloc::vec::Vec (12 samples, 0.05%)</title><rect x="97.9461%" y="501" width="0.0491%" height="15" fill="rgb(252,169,45)" fg:x="23939" fg:w="12"/><text x="98.1961%" y="511.50"></text></g><g><title>rust.exe`alloc::vec::impl$25::drop(alloc::vec::Vec (12 samples, 0.05%)</title><rect x="97.9461%" y="485" width="0.0491%" height="15" fill="rgb(212,48,26)" fg:x="23939" fg:w="12"/><text x="98.1961%" y="495.50"></text></g><g><title>rust.exe`alloc::vec::Vec&lt;std::ffi::os_str::OsString,alloc::alloc::Global&gt;::as_mut_ptr (12 samples, 0.05%)</title><rect x="97.9461%" y="469" width="0.0491%" height="15" fill="rgb(251,102,48)" fg:x="23939" fg:w="12"/><text x="98.1961%" y="479.50"></text></g><g><title>rust.exe`alloc::raw_vec::RawVec&lt;std::ffi::os_str::OsString,alloc::alloc::Global&gt;::ptr (12 samples, 0.05%)</title><rect x="97.9461%" y="453" width="0.0491%" height="15" fill="rgb(243,208,16)" fg:x="23939" fg:w="12"/><text x="98.1961%" y="463.50"></text></g><g><title>rust.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::ptr (12 samples, 0.05%)</title><rect x="97.9461%" y="437" width="0.0491%" height="15" fill="rgb(219,96,24)" fg:x="23939" fg:w="12"/><text x="98.1961%" y="447.50"></text></g><g><title>rust.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::non_null (12 samples, 0.05%)</title><rect x="97.9461%" y="421" width="0.0491%" height="15" fill="rgb(219,33,29)" fg:x="23939" fg:w="12"/><text x="98.1961%" y="431.50"></text></g><g><title>rust.exe`sysinfo::windows::process::get_cmd_line_new (12 samples, 0.05%)</title><rect x="97.9461%" y="405" width="0.0491%" height="15" fill="rgb(223,176,5)" fg:x="23939" fg:w="12"/><text x="98.1961%" y="415.50"></text></g><g><title>rust.exe`sysinfo::windows::process::ph_query_process_variable_size (3 samples, 0.01%)</title><rect x="97.9829%" y="389" width="0.0123%" height="15" fill="rgb(228,140,14)" fg:x="23948" fg:w="3"/><text x="98.2329%" y="399.50"></text></g><g><title>rust.exe`windows::Win32::Foundation::NTSTATUS::is_err (3 samples, 0.01%)</title><rect x="97.9829%" y="373" width="0.0123%" height="15" fill="rgb(217,179,31)" fg:x="23948" fg:w="3"/><text x="98.2329%" y="383.50"></text></g><g><title>rust.exe`windows::Win32::Foundation::NTSTATUS::is_ok (3 samples, 0.01%)</title><rect x="97.9829%" y="357" width="0.0123%" height="15" fill="rgb(230,9,30)" fg:x="23948" fg:w="3"/><text x="98.2329%" y="367.50"></text></g><g><title>`0x7FF96D77C2D4 (3 samples, 0.01%)</title><rect x="97.9829%" y="341" width="0.0123%" height="15" fill="rgb(230,136,20)" fg:x="23948" fg:w="3"/><text x="98.2329%" y="351.50"></text></g><g><title>rust.exe`sysinfo::windows::process::get_cwd_and_root&lt;ntapi::ntrtl::RTL_USER_PROCESS_PARAMETERS&gt;(ntapi::ntrtl::RTL_USER_PROCESS_PARAMETERS*, windows::Win32::Foundation::HANDLE, sysinfo::common::system::ProcessRefreshKind, enum2$&lt;core::option::Option&lt;std::path::PathBuf&gt; &gt;*, enum2$&lt;core::option::Option (3 samples, 0.01%)</title><rect x="97.9993%" y="517" width="0.0123%" height="15" fill="rgb(215,210,22)" fg:x="23952" fg:w="3"/><text x="98.2493%" y="527.50"></text></g><g><title>rust.exe`sysinfo::windows::process::get_process_data (3 samples, 0.01%)</title><rect x="97.9993%" y="501" width="0.0123%" height="15" fill="rgb(218,43,5)" fg:x="23952" fg:w="3"/><text x="98.2493%" y="511.50"></text></g><g><title>rust.exe`windows::Win32::System::Diagnostics::Debug::ReadProcessMemory(windows::Win32::Foundation::HANDLE, core::ffi::c_void*, core::ffi::c_void*, unsigned long long, enum2$&lt;core::option::Option&lt;ptr_mut$ (3 samples, 0.01%)</title><rect x="97.9993%" y="485" width="0.0123%" height="15" fill="rgb(216,11,5)" fg:x="23952" fg:w="3"/><text x="98.2493%" y="495.50"></text></g><g><title>rust.exe`windows::Win32::Foundation::BOOL::ok (3 samples, 0.01%)</title><rect x="97.9993%" y="469" width="0.0123%" height="15" fill="rgb(209,82,29)" fg:x="23952" fg:w="3"/><text x="98.2493%" y="479.50"></text></g><g><title>`0x7FF96A8BD12E (3 samples, 0.01%)</title><rect x="97.9993%" y="453" width="0.0123%" height="15" fill="rgb(244,115,12)" fg:x="23952" fg:w="3"/><text x="98.2493%" y="463.50"></text></g><g><title>`0x7FF96D77C794 (3 samples, 0.01%)</title><rect x="97.9993%" y="437" width="0.0123%" height="15" fill="rgb(222,82,18)" fg:x="23952" fg:w="3"/><text x="98.2493%" y="447.50"></text></g><g><title>rust.exe`alloc::vec::Vec&lt;std::ffi::os_str::OsString,alloc::alloc::Global&gt;::push (4 samples, 0.02%)</title><rect x="98.0115%" y="501" width="0.0164%" height="15" fill="rgb(249,227,8)" fg:x="23955" fg:w="4"/><text x="98.2615%" y="511.50"></text></g><g><title>rust.exe`std::os::windows::ffi::impl$0::from_wide (4 samples, 0.02%)</title><rect x="98.0115%" y="485" width="0.0164%" height="15" fill="rgb(253,141,45)" fg:x="23955" fg:w="4"/><text x="98.2615%" y="495.50"></text></g><g><title>rust.exe`std::sys_common::wtf8::Wtf8Buf::from_wide (4 samples, 0.02%)</title><rect x="98.0115%" y="469" width="0.0164%" height="15" fill="rgb(234,184,4)" fg:x="23955" fg:w="4"/><text x="98.2615%" y="479.50"></text></g><g><title>rust.exe`core::char::decode::impl$0::next (3 samples, 0.01%)</title><rect x="98.0156%" y="453" width="0.0123%" height="15" fill="rgb(218,194,23)" fg:x="23956" fg:w="3"/><text x="98.2656%" y="463.50"></text></g><g><title>rust.exe`std::sys_common::wtf8::Wtf8Buf::push_code_point_unchecked (3 samples, 0.01%)</title><rect x="98.0156%" y="437" width="0.0123%" height="15" fill="rgb(235,66,41)" fg:x="23956" fg:w="3"/><text x="98.2656%" y="447.50"></text></g><g><title>rust.exe`alloc::vec::Vec::extend_from_slice (3 samples, 0.01%)</title><rect x="98.0156%" y="421" width="0.0123%" height="15" fill="rgb(245,217,1)" fg:x="23956" fg:w="3"/><text x="98.2656%" y="431.50"></text></g><g><title>rust.exe`alloc::vec::spec_extend::impl$4::spec_extend (3 samples, 0.01%)</title><rect x="98.0156%" y="405" width="0.0123%" height="15" fill="rgb(229,91,1)" fg:x="23956" fg:w="3"/><text x="98.2656%" y="415.50"></text></g><g><title>rust.exe`alloc::vec::Vec::append_elements (3 samples, 0.01%)</title><rect x="98.0156%" y="389" width="0.0123%" height="15" fill="rgb(207,101,30)" fg:x="23956" fg:w="3"/><text x="98.2656%" y="399.50"></text></g><g><title>rust.exe`sysinfo::windows::process::get_process_data (17 samples, 0.07%)</title><rect x="98.0279%" y="501" width="0.0696%" height="15" fill="rgb(223,82,49)" fg:x="23959" fg:w="17"/><text x="98.2779%" y="511.50"></text></g><g><title>rust.exe`windows::Win32::System::Diagnostics::Debug::ReadProcessMemory(windows::Win32::Foundation::HANDLE, core::ffi::c_void*, core::ffi::c_void*, unsigned long long, enum2$&lt;core::option::Option&lt;ptr_mut$ (17 samples, 0.07%)</title><rect x="98.0279%" y="485" width="0.0696%" height="15" fill="rgb(218,167,17)" fg:x="23959" fg:w="17"/><text x="98.2779%" y="495.50"></text></g><g><title>rust.exe`windows::Win32::Foundation::BOOL::ok (17 samples, 0.07%)</title><rect x="98.0279%" y="469" width="0.0696%" height="15" fill="rgb(208,103,14)" fg:x="23959" fg:w="17"/><text x="98.2779%" y="479.50"></text></g><g><title>`0x7FF96A8BD12E (17 samples, 0.07%)</title><rect x="98.0279%" y="453" width="0.0696%" height="15" fill="rgb(238,20,8)" fg:x="23959" fg:w="17"/><text x="98.2779%" y="463.50"></text></g><g><title>`0x7FF96D77C794 (17 samples, 0.07%)</title><rect x="98.0279%" y="437" width="0.0696%" height="15" fill="rgb(218,80,54)" fg:x="23959" fg:w="17"/><text x="98.2779%" y="447.50"></text></g><g><title>rust.exe`sysinfo::windows::process::get_proc_env(ntapi::ntwow64::RTL_USER_PROCESS_PARAMETERS32*, windows::Win32::Foundation::HANDLE, sysinfo::common::system::ProcessRefreshKind, alloc::vec::Vec (25 samples, 0.10%)</title><rect x="98.0115%" y="517" width="0.1023%" height="15" fill="rgb(240,144,17)" fg:x="23955" fg:w="25"/><text x="98.2615%" y="527.50"></text></g><g><title>rust.exe`sysinfo::windows::process::impl$5::get_environ (4 samples, 0.02%)</title><rect x="98.0975%" y="501" width="0.0164%" height="15" fill="rgb(245,27,50)" fg:x="23976" fg:w="4"/><text x="98.3475%" y="511.50"></text></g><g><title>rust.exe`sysinfo::windows::process::get_region_size (4 samples, 0.02%)</title><rect x="98.0975%" y="485" width="0.0164%" height="15" fill="rgb(251,51,7)" fg:x="23976" fg:w="4"/><text x="98.3475%" y="495.50"></text></g><g><title>`0x7FF96A8E2599 (4 samples, 0.02%)</title><rect x="98.0975%" y="469" width="0.0164%" height="15" fill="rgb(245,217,29)" fg:x="23976" fg:w="4"/><text x="98.3475%" y="479.50"></text></g><g><title>`0x7FF96D77C414 (4 samples, 0.02%)</title><rect x="98.0975%" y="453" width="0.0164%" height="15" fill="rgb(221,176,29)" fg:x="23976" fg:w="4"/><text x="98.3475%" y="463.50"></text></g><g><title>`0x7FF96D6CE46A (8 samples, 0.03%)</title><rect x="98.1138%" y="469" width="0.0327%" height="15" fill="rgb(212,180,24)" fg:x="23980" fg:w="8"/><text x="98.3638%" y="479.50"></text></g><g><title>`0x7FF96D62EDEE (8 samples, 0.03%)</title><rect x="98.1138%" y="453" width="0.0327%" height="15" fill="rgb(254,24,2)" fg:x="23980" fg:w="8"/><text x="98.3638%" y="463.50"></text></g><g><title>`0x7FF96D6A07C9 (8 samples, 0.03%)</title><rect x="98.1138%" y="437" width="0.0327%" height="15" fill="rgb(230,100,2)" fg:x="23980" fg:w="8"/><text x="98.3638%" y="447.50"></text></g><g><title>`0x7FF96D77C374 (8 samples, 0.03%)</title><rect x="98.1138%" y="421" width="0.0327%" height="15" fill="rgb(219,142,25)" fg:x="23980" fg:w="8"/><text x="98.3638%" y="431.50"></text></g><g><title>`0x7FF96D64FA02 (9 samples, 0.04%)</title><rect x="98.1138%" y="501" width="0.0368%" height="15" fill="rgb(240,73,43)" fg:x="23980" fg:w="9"/><text x="98.3638%" y="511.50"></text></g><g><title>`0x7FF96D62B73A (9 samples, 0.04%)</title><rect x="98.1138%" y="485" width="0.0368%" height="15" fill="rgb(214,114,15)" fg:x="23980" fg:w="9"/><text x="98.3638%" y="495.50"></text></g><g><title>`0x7FF94C58FD54 (5 samples, 0.02%)</title><rect x="98.2038%" y="373" width="0.0205%" height="15" fill="rgb(207,130,4)" fg:x="24002" fg:w="5"/><text x="98.4538%" y="383.50"></text></g><g><title>rust.exe`alloc::vec::Vec::extend_from_slice (13 samples, 0.05%)</title><rect x="98.1834%" y="421" width="0.0532%" height="15" fill="rgb(221,25,40)" fg:x="23997" fg:w="13"/><text x="98.4334%" y="431.50"></text></g><g><title>rust.exe`alloc::vec::spec_extend::impl$4::spec_extend (13 samples, 0.05%)</title><rect x="98.1834%" y="405" width="0.0532%" height="15" fill="rgb(241,184,7)" fg:x="23997" fg:w="13"/><text x="98.4334%" y="415.50"></text></g><g><title>rust.exe`alloc::vec::Vec::append_elements (13 samples, 0.05%)</title><rect x="98.1834%" y="389" width="0.0532%" height="15" fill="rgb(235,159,4)" fg:x="23997" fg:w="13"/><text x="98.4334%" y="399.50"></text></g><g><title>rust.exe`core::char::decode::impl$0::next (21 samples, 0.09%)</title><rect x="98.1629%" y="453" width="0.0859%" height="15" fill="rgb(214,87,48)" fg:x="23992" fg:w="21"/><text x="98.4129%" y="463.50"></text></g><g><title>rust.exe`std::sys_common::wtf8::Wtf8Buf::push_code_point_unchecked (18 samples, 0.07%)</title><rect x="98.1752%" y="437" width="0.0736%" height="15" fill="rgb(246,198,24)" fg:x="23995" fg:w="18"/><text x="98.4252%" y="447.50"></text></g><g><title>rust.exe`core::char::methods::encode_utf8_raw (3 samples, 0.01%)</title><rect x="98.2366%" y="421" width="0.0123%" height="15" fill="rgb(209,66,40)" fg:x="24010" fg:w="3"/><text x="98.4866%" y="431.50"></text></g><g><title>rust.exe`alloc::vec::Vec&lt;std::ffi::os_str::OsString,alloc::alloc::Global&gt;::push (25 samples, 0.10%)</title><rect x="98.1506%" y="501" width="0.1023%" height="15" fill="rgb(233,147,39)" fg:x="23989" fg:w="25"/><text x="98.4006%" y="511.50"></text></g><g><title>rust.exe`std::os::windows::ffi::impl$0::from_wide (23 samples, 0.09%)</title><rect x="98.1588%" y="485" width="0.0941%" height="15" fill="rgb(231,145,52)" fg:x="23991" fg:w="23"/><text x="98.4088%" y="495.50"></text></g><g><title>rust.exe`std::sys_common::wtf8::Wtf8Buf::from_wide (23 samples, 0.09%)</title><rect x="98.1588%" y="469" width="0.0941%" height="15" fill="rgb(206,20,26)" fg:x="23991" fg:w="23"/><text x="98.4088%" y="479.50"></text></g><g><title>rust.exe`core::slice::iter::impl$182::position(core::slice::iter::Iter&lt;u16&gt;*, sysinfo::windows::process::get_proc_env::closure_env$1 (5 samples, 0.02%)</title><rect x="98.2529%" y="501" width="0.0205%" height="15" fill="rgb(238,220,4)" fg:x="24014" fg:w="5"/><text x="98.5029%" y="511.50"></text></g><g><title>rust.exe`alloc::vec::Vec&lt;u16,alloc::alloc::Global&gt;::with_capacity (3 samples, 0.01%)</title><rect x="98.2734%" y="485" width="0.0123%" height="15" fill="rgb(252,195,42)" fg:x="24019" fg:w="3"/><text x="98.5234%" y="495.50"></text></g><g><title>rust.exe`alloc::vec::Vec&lt;u16,alloc::alloc::Global&gt;::with_capacity_in (3 samples, 0.01%)</title><rect x="98.2734%" y="469" width="0.0123%" height="15" fill="rgb(209,10,6)" fg:x="24019" fg:w="3"/><text x="98.5234%" y="479.50"></text></g><g><title>rust.exe`alloc::raw_vec::RawVec&lt;u16,alloc::alloc::Global&gt;::with_capacity_in (3 samples, 0.01%)</title><rect x="98.2734%" y="453" width="0.0123%" height="15" fill="rgb(229,3,52)" fg:x="24019" fg:w="3"/><text x="98.5234%" y="463.50"></text></g><g><title>rust.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::with_capacity_in (3 samples, 0.01%)</title><rect x="98.2734%" y="437" width="0.0123%" height="15" fill="rgb(253,49,37)" fg:x="24019" fg:w="3"/><text x="98.5234%" y="447.50"></text></g><g><title>rust.exe`alloc::raw_vec::RawVecInner&lt;alloc::alloc::Global&gt;::try_allocate_in (3 samples, 0.01%)</title><rect x="98.2734%" y="421" width="0.0123%" height="15" fill="rgb(240,103,49)" fg:x="24019" fg:w="3"/><text x="98.5234%" y="431.50"></text></g><g><title>`0x7FF96D662B99 (3 samples, 0.01%)</title><rect x="98.2734%" y="405" width="0.0123%" height="15" fill="rgb(250,182,30)" fg:x="24019" fg:w="3"/><text x="98.5234%" y="415.50"></text></g><g><title>`0x7FF96D627DBE (3 samples, 0.01%)</title><rect x="98.2734%" y="389" width="0.0123%" height="15" fill="rgb(248,8,30)" fg:x="24019" fg:w="3"/><text x="98.5234%" y="399.50"></text></g><g><title>rust.exe`sysinfo::windows::process::get_process_data (69 samples, 0.28%)</title><rect x="98.2734%" y="501" width="0.2823%" height="15" fill="rgb(237,120,30)" fg:x="24019" fg:w="69"/><text x="98.5234%" y="511.50"></text></g><g><title>rust.exe`windows::Win32::System::Diagnostics::Debug::ReadProcessMemory(windows::Win32::Foundation::HANDLE, core::ffi::c_void*, core::ffi::c_void*, unsigned long long, enum2$&lt;core::option::Option&lt;ptr_mut$ (66 samples, 0.27%)</title><rect x="98.2857%" y="485" width="0.2700%" height="15" fill="rgb(221,146,34)" fg:x="24022" fg:w="66"/><text x="98.5357%" y="495.50"></text></g><g><title>rust.exe`windows::Win32::Foundation::BOOL::ok (66 samples, 0.27%)</title><rect x="98.2857%" y="469" width="0.2700%" height="15" fill="rgb(242,55,13)" fg:x="24022" fg:w="66"/><text x="98.5357%" y="479.50"></text></g><g><title>`0x7FF96A8BD12E (66 samples, 0.27%)</title><rect x="98.2857%" y="453" width="0.2700%" height="15" fill="rgb(242,112,31)" fg:x="24022" fg:w="66"/><text x="98.5357%" y="463.50"></text></g><g><title>`0x7FF96D77C794 (66 samples, 0.27%)</title><rect x="98.2857%" y="437" width="0.2700%" height="15" fill="rgb(249,192,27)" fg:x="24022" fg:w="66"/><text x="98.5357%" y="447.50"></text></g><g><title>rust.exe`sysinfo::windows::process::get_proc_env&lt;ntapi::ntrtl::RTL_USER_PROCESS_PARAMETERS&gt;(ntapi::ntrtl::RTL_USER_PROCESS_PARAMETERS*, windows::Win32::Foundation::HANDLE, sysinfo::common::system::ProcessRefreshKind, alloc::vec::Vec (111 samples, 0.45%)</title><rect x="98.1138%" y="517" width="0.4542%" height="15" fill="rgb(208,204,44)" fg:x="23980" fg:w="111"/><text x="98.3638%" y="527.50"></text></g><g><title>rust.exe`sysinfo::windows::process::impl$6::get_environ (3 samples, 0.01%)</title><rect x="98.5557%" y="501" width="0.0123%" height="15" fill="rgb(208,93,54)" fg:x="24088" fg:w="3"/><text x="98.8057%" y="511.50"></text></g><g><title>rust.exe`sysinfo::windows::process::get_region_size (3 samples, 0.01%)</title><rect x="98.5557%" y="485" width="0.0123%" height="15" fill="rgb(242,1,31)" fg:x="24088" fg:w="3"/><text x="98.8057%" y="495.50"></text></g><g><title>`0x7FF96A8E2599 (3 samples, 0.01%)</title><rect x="98.5557%" y="469" width="0.0123%" height="15" fill="rgb(241,83,25)" fg:x="24088" fg:w="3"/><text x="98.8057%" y="479.50"></text></g><g><title>`0x7FF96D77C414 (3 samples, 0.01%)</title><rect x="98.5557%" y="453" width="0.0123%" height="15" fill="rgb(205,169,50)" fg:x="24088" fg:w="3"/><text x="98.8057%" y="463.50"></text></g><g><title>rust.exe`sysinfo::windows::process::get_process_params (162 samples, 0.66%)</title><rect x="97.9379%" y="533" width="0.6628%" height="15" fill="rgb(239,186,37)" fg:x="23937" fg:w="162"/><text x="98.1879%" y="543.50"></text></g><g><title>rust.exe`windows::Win32::System::Diagnostics::Debug::ReadProcessMemory(windows::Win32::Foundation::HANDLE, core::ffi::c_void*, core::ffi::c_void*, unsigned long long, enum2$&lt;core::option::Option&lt;ptr_mut$ (7 samples, 0.03%)</title><rect x="98.5721%" y="517" width="0.0286%" height="15" fill="rgb(205,221,10)" fg:x="24092" fg:w="7"/><text x="98.8221%" y="527.50"></text></g><g><title>rust.exe`windows::Win32::Foundation::BOOL::ok (7 samples, 0.03%)</title><rect x="98.5721%" y="501" width="0.0286%" height="15" fill="rgb(218,196,15)" fg:x="24092" fg:w="7"/><text x="98.8221%" y="511.50"></text></g><g><title>`0x7FF96A8BD12E (7 samples, 0.03%)</title><rect x="98.5721%" y="485" width="0.0286%" height="15" fill="rgb(218,196,35)" fg:x="24092" fg:w="7"/><text x="98.8221%" y="495.50"></text></g><g><title>`0x7FF96D77C794 (7 samples, 0.03%)</title><rect x="98.5721%" y="469" width="0.0286%" height="15" fill="rgb(233,63,24)" fg:x="24092" fg:w="7"/><text x="98.8221%" y="479.50"></text></g><g><title>rust.exe`sysinfo::windows::process::get_process_user_id (6 samples, 0.02%)</title><rect x="98.6007%" y="533" width="0.0245%" height="15" fill="rgb(225,8,4)" fg:x="24099" fg:w="6"/><text x="98.8507%" y="543.50"></text></g><g><title>rust.exe`windows::Win32::System::Threading::OpenProcessToken (4 samples, 0.02%)</title><rect x="98.6089%" y="517" width="0.0164%" height="15" fill="rgb(234,105,35)" fg:x="24101" fg:w="4"/><text x="98.8589%" y="527.50"></text></g><g><title>rust.exe`windows::Win32::Foundation::BOOL::ok (4 samples, 0.02%)</title><rect x="98.6089%" y="501" width="0.0164%" height="15" fill="rgb(236,21,32)" fg:x="24101" fg:w="4"/><text x="98.8589%" y="511.50"></text></g><g><title>`0x7FF96A8E2D8B (4 samples, 0.02%)</title><rect x="98.6089%" y="485" width="0.0164%" height="15" fill="rgb(228,109,6)" fg:x="24101" fg:w="4"/><text x="98.8589%" y="495.50"></text></g><g><title>`0x7FF96D77E604 (4 samples, 0.02%)</title><rect x="98.6089%" y="469" width="0.0164%" height="15" fill="rgb(229,215,31)" fg:x="24101" fg:w="4"/><text x="98.8589%" y="479.50"></text></g><g><title>rust.exe`sysinfo::windows::process::update_disk_usage (13 samples, 0.05%)</title><rect x="98.6253%" y="533" width="0.0532%" height="15" fill="rgb(221,52,54)" fg:x="24105" fg:w="13"/><text x="98.8753%" y="543.50"></text></g><g><title>rust.exe`windows::Win32::System::Threading::GetProcessIoCounters (13 samples, 0.05%)</title><rect x="98.6253%" y="517" width="0.0532%" height="15" fill="rgb(252,129,43)" fg:x="24105" fg:w="13"/><text x="98.8753%" y="527.50"></text></g><g><title>rust.exe`windows::Win32::Foundation::BOOL::ok (13 samples, 0.05%)</title><rect x="98.6253%" y="501" width="0.0532%" height="15" fill="rgb(248,183,27)" fg:x="24105" fg:w="13"/><text x="98.8753%" y="511.50"></text></g><g><title>`0x7FF96B48DA8E (13 samples, 0.05%)</title><rect x="98.6253%" y="485" width="0.0532%" height="15" fill="rgb(250,0,22)" fg:x="24105" fg:w="13"/><text x="98.8753%" y="495.50"></text></g><g><title>`0x7FF96D77C2D4 (13 samples, 0.05%)</title><rect x="98.6253%" y="469" width="0.0532%" height="15" fill="rgb(213,166,10)" fg:x="24105" fg:w="13"/><text x="98.8753%" y="479.50"></text></g><g><title>rust.exe`sysinfo::windows::process::ProcessInner::update (262 samples, 1.07%)</title><rect x="97.6269%" y="549" width="1.0720%" height="15" fill="rgb(207,163,36)" fg:x="23861" fg:w="262"/><text x="97.8769%" y="559.50"></text></g><g><title>rust.exe`windows::Win32::System::ProcessStatus::GetProcessMemoryInfo (5 samples, 0.02%)</title><rect x="98.6785%" y="533" width="0.0205%" height="15" fill="rgb(208,122,22)" fg:x="24118" fg:w="5"/><text x="98.9285%" y="543.50"></text></g><g><title>rust.exe`windows::Win32::Foundation::BOOL::ok (5 samples, 0.02%)</title><rect x="98.6785%" y="517" width="0.0205%" height="15" fill="rgb(207,104,49)" fg:x="24118" fg:w="5"/><text x="98.9285%" y="527.50"></text></g><g><title>`0x7FF96A8C8CB1 (5 samples, 0.02%)</title><rect x="98.6785%" y="501" width="0.0205%" height="15" fill="rgb(248,211,50)" fg:x="24118" fg:w="5"/><text x="98.9285%" y="511.50"></text></g><g><title>`0x7FF96D77C2D4 (5 samples, 0.02%)</title><rect x="98.6785%" y="485" width="0.0205%" height="15" fill="rgb(217,13,45)" fg:x="24118" fg:w="5"/><text x="98.9285%" y="495.50"></text></g><g><title>`0x7FF96B4CACDF (49 samples, 0.20%)</title><rect x="98.6989%" y="533" width="0.2005%" height="15" fill="rgb(211,216,49)" fg:x="24123" fg:w="49"/><text x="98.9489%" y="543.50"></text></g><g><title>`0x7FF96B4CA663 (49 samples, 0.20%)</title><rect x="98.6989%" y="517" width="0.2005%" height="15" fill="rgb(221,58,53)" fg:x="24123" fg:w="49"/><text x="98.9489%" y="527.50"></text></g><g><title>`0x7FF96D77C674 (49 samples, 0.20%)</title><rect x="98.6989%" y="501" width="0.2005%" height="15" fill="rgb(220,112,41)" fg:x="24123" fg:w="49"/><text x="98.9489%" y="511.50"></text></g><g><title>rust.exe`windows::Win32::System::Diagnostics::ToolHelp::CreateToolhelp32Snapshot (50 samples, 0.20%)</title><rect x="98.6989%" y="549" width="0.2046%" height="15" fill="rgb(236,38,28)" fg:x="24123" fg:w="50"/><text x="98.9489%" y="559.50"></text></g><g><title>`0x7FF96B49836E (6 samples, 0.02%)</title><rect x="98.9035%" y="517" width="0.0245%" height="15" fill="rgb(227,195,22)" fg:x="24173" fg:w="6"/><text x="99.1535%" y="527.50"></text></g><g><title>`0x7FF96D77C4B4 (6 samples, 0.02%)</title><rect x="98.9035%" y="501" width="0.0245%" height="15" fill="rgb(214,55,33)" fg:x="24173" fg:w="6"/><text x="99.1535%" y="511.50"></text></g><g><title>rust.exe`sysinfo::common::system::System::new_all (3,540 samples, 14.48%)</title><rect x="84.5015%" y="693" width="14.4839%" height="15" fill="rgb(248,80,13)" fg:x="20653" fg:w="3540"/><text x="84.7515%" y="703.50">rust.exe`sysinfo::comm..</text></g><g><title>rust.exe`sysinfo::common::system::System::new_with_specifics (3,540 samples, 14.48%)</title><rect x="84.5015%" y="677" width="14.4839%" height="15" fill="rgb(238,52,6)" fg:x="20653" fg:w="3540"/><text x="84.7515%" y="687.50">rust.exe`sysinfo::comm..</text></g><g><title>rust.exe`sysinfo::common::system::System::refresh_specifics (3,540 samples, 14.48%)</title><rect x="84.5015%" y="661" width="14.4839%" height="15" fill="rgb(224,198,47)" fg:x="20653" fg:w="3540"/><text x="84.7515%" y="671.50">rust.exe`sysinfo::comm..</text></g><g><title>rust.exe`sysinfo::common::system::System::refresh_processes_specifics(enum2$ (344 samples, 1.41%)</title><rect x="97.5778%" y="645" width="1.4075%" height="15" fill="rgb(233,171,20)" fg:x="23849" fg:w="344"/><text x="97.8278%" y="655.50"></text></g><g><title>rust.exe`std::collections::hash::map::HashMap&lt;sysinfo::common::system::Pid,sysinfo::common::system::Process,std::hash::random::RandomState&gt;::retain (344 samples, 1.41%)</title><rect x="97.5778%" y="629" width="1.4075%" height="15" fill="rgb(241,30,25)" fg:x="23849" fg:w="344"/><text x="97.8278%" y="639.50"></text></g><g><title>rust.exe`hashbrown::map::HashMap&lt;sysinfo::common::system::Pid,sysinfo::common::system::Process,std::hash::random::RandomState,alloc::alloc::Global&gt;::retain (344 samples, 1.41%)</title><rect x="97.5778%" y="613" width="1.4075%" height="15" fill="rgb(207,171,38)" fg:x="23849" fg:w="344"/><text x="97.8278%" y="623.50"></text></g><g><title>rust.exe`hashbrown::raw::RawTable&lt;tuple$&lt;sysinfo::common::system::Pid,sysinfo::common::system::Process&gt;,alloc::alloc::Global&gt;::iter (344 samples, 1.41%)</title><rect x="97.5778%" y="597" width="1.4075%" height="15" fill="rgb(234,70,1)" fg:x="23849" fg:w="344"/><text x="97.8278%" y="607.50"></text></g><g><title>rust.exe`hashbrown::raw::RawTableInner::iter (344 samples, 1.41%)</title><rect x="97.5778%" y="581" width="1.4075%" height="15" fill="rgb(232,178,18)" fg:x="23849" fg:w="344"/><text x="97.8278%" y="591.50"></text></g><g><title>rust.exe`sysinfo::windows::system::SystemInner::refresh_processes_specifics(enum2$ (344 samples, 1.41%)</title><rect x="97.5778%" y="565" width="1.4075%" height="15" fill="rgb(241,78,40)" fg:x="23849" fg:w="344"/><text x="97.8278%" y="575.50"></text></g><g><title>rust.exe`windows::Win32::System::Diagnostics::ToolHelp::Process32NextW (20 samples, 0.08%)</title><rect x="98.9035%" y="549" width="0.0818%" height="15" fill="rgb(222,35,25)" fg:x="24173" fg:w="20"/><text x="99.1535%" y="559.50"></text></g><g><title>rust.exe`windows::Win32::Foundation::BOOL::ok (20 samples, 0.08%)</title><rect x="98.9035%" y="533" width="0.0818%" height="15" fill="rgb(207,92,16)" fg:x="24173" fg:w="20"/><text x="99.1535%" y="543.50"></text></g><g><title>`0x7FF96B49842A (8 samples, 0.03%)</title><rect x="98.9526%" y="517" width="0.0327%" height="15" fill="rgb(216,59,51)" fg:x="24185" fg:w="8"/><text x="99.2026%" y="527.50"></text></g><g><title>`0x7FF96D77C4F4 (8 samples, 0.03%)</title><rect x="98.9526%" y="501" width="0.0327%" height="15" fill="rgb(213,80,28)" fg:x="24185" fg:w="8"/><text x="99.2026%" y="511.50"></text></g><g><title>rust.exe`windows::Win32::System::Threading::GetProcessTimes (17 samples, 0.07%)</title><rect x="98.9935%" y="597" width="0.0696%" height="15" fill="rgb(220,93,7)" fg:x="24195" fg:w="17"/><text x="99.2435%" y="607.50"></text></g><g><title>rust.exe`windows::Win32::Foundation::BOOL::ok (17 samples, 0.07%)</title><rect x="98.9935%" y="581" width="0.0696%" height="15" fill="rgb(225,24,44)" fg:x="24195" fg:w="17"/><text x="99.2435%" y="591.50"></text></g><g><title>`0x7FF96A8D1956 (17 samples, 0.07%)</title><rect x="98.9935%" y="565" width="0.0696%" height="15" fill="rgb(243,74,40)" fg:x="24195" fg:w="17"/><text x="99.2435%" y="575.50"></text></g><g><title>`0x7FF96D77C2D4 (17 samples, 0.07%)</title><rect x="98.9935%" y="549" width="0.0696%" height="15" fill="rgb(228,39,7)" fg:x="24195" fg:w="17"/><text x="99.2435%" y="559.50"></text></g><g><title>rust.exe`sysinfo::windows::process::compute_cpu_usage (57 samples, 0.23%)</title><rect x="98.9853%" y="613" width="0.2332%" height="15" fill="rgb(227,79,8)" fg:x="24193" fg:w="57"/><text x="99.2353%" y="623.50"></text></g><g><title>rust.exe`windows::Win32::System::Threading::GetSystemTimes(enum2$&lt;core::option::Option&lt;ptr_mut$&lt;windows::Win32::Foundation::FILETIME&gt; &gt; &gt;, enum2$&lt;core::option::Option&lt;ptr_mut$&lt;windows::Win32::Foundation::FILETIME&gt; &gt; &gt;, enum2$&lt;core::option::Option&lt;ptr_mut$ (38 samples, 0.16%)</title><rect x="99.0630%" y="597" width="0.1555%" height="15" fill="rgb(236,58,11)" fg:x="24212" fg:w="38"/><text x="99.3130%" y="607.50"></text></g><g><title>rust.exe`windows::Win32::Foundation::BOOL::ok (38 samples, 0.16%)</title><rect x="99.0630%" y="581" width="0.1555%" height="15" fill="rgb(249,63,35)" fg:x="24212" fg:w="38"/><text x="99.3130%" y="591.50"></text></g><g><title>`0x7FF96A8C8F93 (34 samples, 0.14%)</title><rect x="99.0794%" y="565" width="0.1391%" height="15" fill="rgb(252,114,16)" fg:x="24216" fg:w="34"/><text x="99.3294%" y="575.50"></text></g><g><title>`0x7FF96D77C674 (34 samples, 0.14%)</title><rect x="99.0794%" y="549" width="0.1391%" height="15" fill="rgb(254,151,24)" fg:x="24216" fg:w="34"/><text x="99.3294%" y="559.50"></text></g><g><title>rust.exe`sysinfo::windows::process::get_exe (3 samples, 0.01%)</title><rect x="99.2185%" y="613" width="0.0123%" height="15" fill="rgb(253,54,39)" fg:x="24250" fg:w="3"/><text x="99.4685%" y="623.50"></text></g><g><title>rust.exe`windows::Win32::System::ProcessStatus::GetModuleFileNameExW(windows::Win32::Foundation::HANDLE, windows::Win32::Foundation::HINSTANCE, ref_mut$&lt;slice2$ (3 samples, 0.01%)</title><rect x="99.2185%" y="597" width="0.0123%" height="15" fill="rgb(243,25,45)" fg:x="24250" fg:w="3"/><text x="99.4685%" y="607.50"></text></g><g><title>`0x7FF96A8B99D8 (3 samples, 0.01%)</title><rect x="99.2185%" y="581" width="0.0123%" height="15" fill="rgb(234,134,9)" fg:x="24250" fg:w="3"/><text x="99.4685%" y="591.50"></text></g><g><title>`0x7FF96D77C2D4 (3 samples, 0.01%)</title><rect x="99.2185%" y="565" width="0.0123%" height="15" fill="rgb(227,166,31)" fg:x="24250" fg:w="3"/><text x="99.4685%" y="575.50"></text></g><g><title>rust.exe`sysinfo::windows::process::update_disk_usage (15 samples, 0.06%)</title><rect x="99.2308%" y="613" width="0.0614%" height="15" fill="rgb(245,143,41)" fg:x="24253" fg:w="15"/><text x="99.4808%" y="623.50"></text></g><g><title>rust.exe`windows::Win32::System::Threading::GetProcessIoCounters (14 samples, 0.06%)</title><rect x="99.2349%" y="597" width="0.0573%" height="15" fill="rgb(238,181,32)" fg:x="24254" fg:w="14"/><text x="99.4849%" y="607.50"></text></g><g><title>rust.exe`windows::Win32::Foundation::BOOL::ok (14 samples, 0.06%)</title><rect x="99.2349%" y="581" width="0.0573%" height="15" fill="rgb(224,113,18)" fg:x="24254" fg:w="14"/><text x="99.4849%" y="591.50"></text></g><g><title>`0x7FF96B48DA8E (14 samples, 0.06%)</title><rect x="99.2349%" y="565" width="0.0573%" height="15" fill="rgb(240,229,28)" fg:x="24254" fg:w="14"/><text x="99.4849%" y="575.50"></text></g><g><title>`0x7FF96D77C2D4 (14 samples, 0.06%)</title><rect x="99.2349%" y="549" width="0.0573%" height="15" fill="rgb(250,185,3)" fg:x="24254" fg:w="14"/><text x="99.4849%" y="559.50"></text></g><g><title>rust.exe`sysinfo::windows::process::ProcessInner::update (80 samples, 0.33%)</title><rect x="98.9853%" y="629" width="0.3273%" height="15" fill="rgb(212,59,25)" fg:x="24193" fg:w="80"/><text x="99.2353%" y="639.50"></text></g><g><title>rust.exe`windows::Win32::System::ProcessStatus::GetProcessMemoryInfo (5 samples, 0.02%)</title><rect x="99.2922%" y="613" width="0.0205%" height="15" fill="rgb(221,87,20)" fg:x="24268" fg:w="5"/><text x="99.5422%" y="623.50"></text></g><g><title>rust.exe`windows::Win32::Foundation::BOOL::ok (5 samples, 0.02%)</title><rect x="99.2922%" y="597" width="0.0205%" height="15" fill="rgb(213,74,28)" fg:x="24268" fg:w="5"/><text x="99.5422%" y="607.50"></text></g><g><title>`0x7FF96A8C8CB1 (5 samples, 0.02%)</title><rect x="99.2922%" y="581" width="0.0205%" height="15" fill="rgb(224,132,34)" fg:x="24268" fg:w="5"/><text x="99.5422%" y="591.50"></text></g><g><title>`0x7FF96D77C2D4 (5 samples, 0.02%)</title><rect x="99.2922%" y="565" width="0.0205%" height="15" fill="rgb(222,101,24)" fg:x="24268" fg:w="5"/><text x="99.5422%" y="575.50"></text></g><g><title>`0x7FF96B4CACDF (91 samples, 0.37%)</title><rect x="99.3126%" y="613" width="0.3723%" height="15" fill="rgb(254,142,4)" fg:x="24273" fg:w="91"/><text x="99.5626%" y="623.50"></text></g><g><title>`0x7FF96B4CA663 (90 samples, 0.37%)</title><rect x="99.3167%" y="597" width="0.3682%" height="15" fill="rgb(230,229,49)" fg:x="24274" fg:w="90"/><text x="99.5667%" y="607.50"></text></g><g><title>`0x7FF96D77C674 (90 samples, 0.37%)</title><rect x="99.3167%" y="581" width="0.3682%" height="15" fill="rgb(238,70,47)" fg:x="24274" fg:w="90"/><text x="99.5667%" y="591.50"></text></g><g><title>rust.exe`windows::Win32::System::Diagnostics::ToolHelp::CreateToolhelp32Snapshot (93 samples, 0.38%)</title><rect x="99.3126%" y="629" width="0.3805%" height="15" fill="rgb(231,160,17)" fg:x="24273" fg:w="93"/><text x="99.5626%" y="639.50"></text></g><g><title>`0x7FF96B49836E (4 samples, 0.02%)</title><rect x="99.6931%" y="597" width="0.0164%" height="15" fill="rgb(218,68,53)" fg:x="24366" fg:w="4"/><text x="99.9431%" y="607.50"></text></g><g><title>`0x7FF96D77C4B4 (4 samples, 0.02%)</title><rect x="99.6931%" y="581" width="0.0164%" height="15" fill="rgb(236,111,10)" fg:x="24366" fg:w="4"/><text x="99.9431%" y="591.50"></text></g><g><title>`0x7FF96B4983A0 (3 samples, 0.01%)</title><rect x="99.7136%" y="597" width="0.0123%" height="15" fill="rgb(224,34,41)" fg:x="24371" fg:w="3"/><text x="99.9636%" y="607.50"></text></g><g><title>`0x7FF96B4983AA (3 samples, 0.01%)</title><rect x="99.7259%" y="597" width="0.0123%" height="15" fill="rgb(241,118,19)" fg:x="24374" fg:w="3"/><text x="99.9759%" y="607.50"></text></g><g><title>`0x7FF96D6D197C (24,387 samples, 99.78%)</title><rect x="0.0123%" y="917" width="99.7791%" height="15" fill="rgb(238,129,25)" fg:x="3" fg:w="24387"/><text x="0.2623%" y="927.50">`0x7FF96D6D197C</text></g><g><title>`0x7FF96B4AE8D7 (24,387 samples, 99.78%)</title><rect x="0.0123%" y="901" width="99.7791%" height="15" fill="rgb(238,22,31)" fg:x="3" fg:w="24387"/><text x="0.2623%" y="911.50">`0x7FF96B4AE8D7</text></g><g><title>rust.exe`__scrt_common_main_seh() (24,375 samples, 99.73%)</title><rect x="0.0614%" y="885" width="99.7300%" height="15" fill="rgb(222,174,48)" fg:x="15" fg:w="24375"/><text x="0.3114%" y="895.50">rust.exe`__scrt_common_main_seh()</text></g><g><title>rust.exe`invoke_main() (24,361 samples, 99.67%)</title><rect x="0.1187%" y="869" width="99.6727%" height="15" fill="rgb(206,152,40)" fg:x="29" fg:w="24361"/><text x="0.3687%" y="879.50">rust.exe`invoke_main()</text></g><g><title>rust.exe`main (24,361 samples, 99.67%)</title><rect x="0.1187%" y="853" width="99.6727%" height="15" fill="rgb(218,99,54)" fg:x="29" fg:w="24361"/><text x="0.3687%" y="863.50">rust.exe`main</text></g><g><title>rust.exe`std::rt::lang_start_internal (24,361 samples, 99.67%)</title><rect x="0.1187%" y="837" width="99.6727%" height="15" fill="rgb(220,174,26)" fg:x="29" fg:w="24361"/><text x="0.3687%" y="847.50">rust.exe`std::rt::lang_start_internal</text></g><g><title>rust.exe`std::panic::catch_unwind (24,361 samples, 99.67%)</title><rect x="0.1187%" y="821" width="99.6727%" height="15" fill="rgb(245,116,9)" fg:x="29" fg:w="24361"/><text x="0.3687%" y="831.50">rust.exe`std::panic::catch_unwind</text></g><g><title>rust.exe`std::panicking::try (24,361 samples, 99.67%)</title><rect x="0.1187%" y="805" width="99.6727%" height="15" fill="rgb(209,72,35)" fg:x="29" fg:w="24361"/><text x="0.3687%" y="815.50">rust.exe`std::panicking::try</text></g><g><title>rust.exe`std::panicking::try::do_call (24,361 samples, 99.67%)</title><rect x="0.1187%" y="789" width="99.6727%" height="15" fill="rgb(226,126,21)" fg:x="29" fg:w="24361"/><text x="0.3687%" y="799.50">rust.exe`std::panicking::try::do_call</text></g><g><title>rust.exe`std::rt::lang_start_internal::closure$1 (24,360 samples, 99.67%)</title><rect x="0.1227%" y="773" width="99.6686%" height="15" fill="rgb(227,192,1)" fg:x="30" fg:w="24360"/><text x="0.3727%" y="783.50">rust.exe`std::rt::lang_start_internal::closure$1</text></g><g><title>rust.exe`std::panic::catch_unwind (24,360 samples, 99.67%)</title><rect x="0.1227%" y="757" width="99.6686%" height="15" fill="rgb(237,180,29)" fg:x="30" fg:w="24360"/><text x="0.3727%" y="767.50">rust.exe`std::panic::catch_unwind</text></g><g><title>rust.exe`std::rt::lang_start::closure$0&lt;enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,enum2$&lt;rust::utils::schematic_data::SchematicError&gt; &gt; &gt; &gt;(std::rt::lang_start::closure_env$0&lt;enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,enum2$ (24,360 samples, 99.67%)</title><rect x="0.1227%" y="741" width="99.6686%" height="15" fill="rgb(230,197,35)" fg:x="30" fg:w="24360"/><text x="0.3727%" y="751.50">rust.exe`std::rt::lang_start::closure$0&lt;enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,enum2$&lt;rust::utils::schematic_data::SchematicError&gt; &gt; &gt; &gt;(std::rt::lang_start::closure_en..</text></g><g><title>rust.exe`std::sys::backtrace::__rust_begin_short_backtrace&lt;enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,enum2$&lt;rust::utils::schematic_data::SchematicError&gt; &gt; &gt; (*)(),enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,enum2$&lt;rust::utils::schematic_data::SchematicError&gt; &gt; &gt; &gt;(enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,enum2$&lt;rust::utils::schematic_data::SchematicError&gt; &gt; &gt; (*) (24,360 samples, 99.67%)</title><rect x="0.1227%" y="725" width="99.6686%" height="15" fill="rgb(246,193,31)" fg:x="30" fg:w="24360"/><text x="0.3727%" y="735.50">rust.exe`std::sys::backtrace::__rust_begin_short_backtrace&lt;enum2$&lt;core::result::Result&lt;tuple$&lt;&gt;,enum2$&lt;rust::utils::schematic_data::SchematicError&gt; &gt; &gt; (*)(),enum2$&lt;c..</text></g><g><title>rust.exe`rust::main (24,360 samples, 99.67%)</title><rect x="0.1227%" y="709" width="99.6686%" height="15" fill="rgb(241,36,4)" fg:x="30" fg:w="24360"/><text x="0.3727%" y="719.50">rust.exe`rust::main</text></g><g><title>rust.exe`sysinfo::common::system::System::refresh_processes(enum2$ (197 samples, 0.81%)</title><rect x="98.9853%" y="693" width="0.8060%" height="15" fill="rgb(241,130,17)" fg:x="24193" fg:w="197"/><text x="99.2353%" y="703.50"></text></g><g><title>rust.exe`sysinfo::common::system::System::refresh_processes_specifics(enum2$ (197 samples, 0.81%)</title><rect x="98.9853%" y="677" width="0.8060%" height="15" fill="rgb(206,137,32)" fg:x="24193" fg:w="197"/><text x="99.2353%" y="687.50"></text></g><g><title>rust.exe`sysinfo::windows::system::SystemInner::processes_mut (197 samples, 0.81%)</title><rect x="98.9853%" y="661" width="0.8060%" height="15" fill="rgb(237,228,51)" fg:x="24193" fg:w="197"/><text x="99.2353%" y="671.50"></text></g><g><title>rust.exe`sysinfo::windows::system::SystemInner::refresh_processes_specifics(enum2$ (197 samples, 0.81%)</title><rect x="98.9853%" y="645" width="0.8060%" height="15" fill="rgb(243,6,42)" fg:x="24193" fg:w="197"/><text x="99.2353%" y="655.50"></text></g><g><title>rust.exe`windows::Win32::System::Diagnostics::ToolHelp::Process32NextW (24 samples, 0.10%)</title><rect x="99.6931%" y="629" width="0.0982%" height="15" fill="rgb(251,74,28)" fg:x="24366" fg:w="24"/><text x="99.9431%" y="639.50"></text></g><g><title>rust.exe`windows::Win32::Foundation::BOOL::ok (24 samples, 0.10%)</title><rect x="99.6931%" y="613" width="0.0982%" height="15" fill="rgb(218,20,49)" fg:x="24366" fg:w="24"/><text x="99.9431%" y="623.50"></text></g><g><title>`0x7FF96B49842A (12 samples, 0.05%)</title><rect x="99.7422%" y="597" width="0.0491%" height="15" fill="rgb(238,28,14)" fg:x="24378" fg:w="12"/><text x="99.9922%" y="607.50"></text></g><g><title>`0x7FF96D77C4F4 (12 samples, 0.05%)</title><rect x="99.7422%" y="581" width="0.0491%" height="15" fill="rgb(229,40,46)" fg:x="24378" fg:w="12"/><text x="99.9922%" y="591.50"></text></g><g><title>`0x7FF96D676002 (3 samples, 0.01%)</title><rect x="99.8077%" y="805" width="0.0123%" height="15" fill="rgb(244,195,20)" fg:x="24394" fg:w="3"/><text x="100.0577%" y="815.50"></text></g><g><title>`0x7FF96D6616E7 (3 samples, 0.01%)</title><rect x="99.8077%" y="789" width="0.0123%" height="15" fill="rgb(253,56,35)" fg:x="24394" fg:w="3"/><text x="100.0577%" y="799.50"></text></g><g><title>`0x7FF96D66EBD1 (3 samples, 0.01%)</title><rect x="99.8077%" y="773" width="0.0123%" height="15" fill="rgb(210,149,44)" fg:x="24394" fg:w="3"/><text x="100.0577%" y="783.50"></text></g><g><title>`0x7FF96D69F42C (6 samples, 0.02%)</title><rect x="99.8077%" y="853" width="0.0245%" height="15" fill="rgb(240,135,12)" fg:x="24394" fg:w="6"/><text x="100.0577%" y="863.50"></text></g><g><title>`0x7FF96D639B30 (6 samples, 0.02%)</title><rect x="99.8077%" y="837" width="0.0245%" height="15" fill="rgb(251,24,50)" fg:x="24394" fg:w="6"/><text x="100.0577%" y="847.50"></text></g><g><title>`0x7FF96D675CA0 (6 samples, 0.02%)</title><rect x="99.8077%" y="821" width="0.0245%" height="15" fill="rgb(243,200,47)" fg:x="24394" fg:w="6"/><text x="100.0577%" y="831.50"></text></g><g><title>`0x7FF96D676094 (3 samples, 0.01%)</title><rect x="99.8200%" y="805" width="0.0123%" height="15" fill="rgb(224,166,26)" fg:x="24397" fg:w="3"/><text x="100.0700%" y="815.50"></text></g><g><title>`0x7FF96D656E7B (3 samples, 0.01%)</title><rect x="99.8200%" y="789" width="0.0123%" height="15" fill="rgb(233,0,47)" fg:x="24397" fg:w="3"/><text x="100.0700%" y="799.50"></text></g><g><title>`0x7FF96D656D46 (3 samples, 0.01%)</title><rect x="99.8200%" y="773" width="0.0123%" height="15" fill="rgb(253,80,5)" fg:x="24397" fg:w="3"/><text x="100.0700%" y="783.50"></text></g><g><title>`0x7FF96D656D1A (3 samples, 0.01%)</title><rect x="99.8200%" y="757" width="0.0123%" height="15" fill="rgb(214,133,25)" fg:x="24397" fg:w="3"/><text x="100.0700%" y="767.50"></text></g><g><title>`0x7FF96D657BDC (3 samples, 0.01%)</title><rect x="99.8200%" y="741" width="0.0123%" height="15" fill="rgb(209,27,14)" fg:x="24397" fg:w="3"/><text x="100.0700%" y="751.50"></text></g><g><title>`0x7FF96D658830 (3 samples, 0.01%)</title><rect x="99.8200%" y="725" width="0.0123%" height="15" fill="rgb(219,102,51)" fg:x="24397" fg:w="3"/><text x="100.0700%" y="735.50"></text></g><g><title>`0x7FF96D6CA5C5 (7 samples, 0.03%)</title><rect x="99.8077%" y="869" width="0.0286%" height="15" fill="rgb(237,18,16)" fg:x="24394" fg:w="7"/><text x="100.0577%" y="879.50"></text></g><g><title>`0x7FF96D6CA6B9 (11 samples, 0.05%)</title><rect x="99.8363%" y="869" width="0.0450%" height="15" fill="rgb(241,85,17)" fg:x="24401" fg:w="11"/><text x="100.0863%" y="879.50"></text></g><g><title>`0x7FF96D6775CE (11 samples, 0.05%)</title><rect x="99.8363%" y="853" width="0.0450%" height="15" fill="rgb(236,90,42)" fg:x="24401" fg:w="11"/><text x="100.0863%" y="863.50"></text></g><g><title>`0x7FF96D6793EB (11 samples, 0.05%)</title><rect x="99.8363%" y="837" width="0.0450%" height="15" fill="rgb(249,57,21)" fg:x="24401" fg:w="11"/><text x="100.0863%" y="847.50"></text></g><g><title>`0x7FF96D66EBD1 (11 samples, 0.05%)</title><rect x="99.8363%" y="821" width="0.0450%" height="15" fill="rgb(243,12,36)" fg:x="24401" fg:w="11"/><text x="100.0863%" y="831.50"></text></g><g><title>`0x7FF96D670739 (9 samples, 0.04%)</title><rect x="99.8445%" y="805" width="0.0368%" height="15" fill="rgb(253,128,47)" fg:x="24403" fg:w="9"/><text x="100.0945%" y="815.50"></text></g><g><title>`0x7FF96D6775CE (7 samples, 0.03%)</title><rect x="99.8527%" y="789" width="0.0286%" height="15" fill="rgb(207,33,20)" fg:x="24405" fg:w="7"/><text x="100.1027%" y="799.50"></text></g><g><title>`0x7FF96D6793EB (6 samples, 0.02%)</title><rect x="99.8568%" y="773" width="0.0245%" height="15" fill="rgb(233,215,35)" fg:x="24406" fg:w="6"/><text x="100.1068%" y="783.50"></text></g><g><title>`0x7FF96D66EBD1 (5 samples, 0.02%)</title><rect x="99.8609%" y="757" width="0.0205%" height="15" fill="rgb(249,188,52)" fg:x="24407" fg:w="5"/><text x="100.1109%" y="767.50"></text></g><g><title>`0x7FF96D670739 (4 samples, 0.02%)</title><rect x="99.8650%" y="741" width="0.0164%" height="15" fill="rgb(225,12,32)" fg:x="24408" fg:w="4"/><text x="100.1150%" y="751.50"></text></g><g><title>`0x7FF96D6775CE (3 samples, 0.01%)</title><rect x="99.8691%" y="725" width="0.0123%" height="15" fill="rgb(247,98,14)" fg:x="24409" fg:w="3"/><text x="100.1191%" y="735.50"></text></g><g><title>`0x7FF96D6793EB (3 samples, 0.01%)</title><rect x="99.8691%" y="709" width="0.0123%" height="15" fill="rgb(247,219,48)" fg:x="24409" fg:w="3"/><text x="100.1191%" y="719.50"></text></g><g><title>`0x7FF96D66EBD1 (3 samples, 0.01%)</title><rect x="99.8691%" y="693" width="0.0123%" height="15" fill="rgb(253,60,48)" fg:x="24409" fg:w="3"/><text x="100.1191%" y="703.50"></text></g><g><title>`0x7FF96943A2C6 (3 samples, 0.01%)</title><rect x="99.8977%" y="789" width="0.0123%" height="15" fill="rgb(245,15,52)" fg:x="24416" fg:w="3"/><text x="100.1477%" y="799.50"></text></g><g><title>`0x7FF969439B5F (3 samples, 0.01%)</title><rect x="99.8977%" y="773" width="0.0123%" height="15" fill="rgb(220,133,28)" fg:x="24416" fg:w="3"/><text x="100.1477%" y="783.50"></text></g><g><title>`0x7FF96943B1D2 (3 samples, 0.01%)</title><rect x="99.8977%" y="757" width="0.0123%" height="15" fill="rgb(217,180,4)" fg:x="24416" fg:w="3"/><text x="100.1477%" y="767.50"></text></g><g><title>`0x7FF969436DA2 (3 samples, 0.01%)</title><rect x="99.8977%" y="741" width="0.0123%" height="15" fill="rgb(251,24,1)" fg:x="24416" fg:w="3"/><text x="100.1477%" y="751.50"></text></g><g><title>`0x7FF96D6EE386 (3 samples, 0.01%)</title><rect x="99.8977%" y="725" width="0.0123%" height="15" fill="rgb(212,185,49)" fg:x="24416" fg:w="3"/><text x="100.1477%" y="735.50"></text></g><g><title>`0x7FF96D674873 (3 samples, 0.01%)</title><rect x="99.8977%" y="709" width="0.0123%" height="15" fill="rgb(215,175,22)" fg:x="24416" fg:w="3"/><text x="100.1477%" y="719.50"></text></g><g><title>`0x7FF96D676616 (3 samples, 0.01%)</title><rect x="99.8977%" y="693" width="0.0123%" height="15" fill="rgb(250,205,14)" fg:x="24416" fg:w="3"/><text x="100.1477%" y="703.50"></text></g><g><title>`0x7FF96D676020 (3 samples, 0.01%)</title><rect x="99.8977%" y="677" width="0.0123%" height="15" fill="rgb(225,211,22)" fg:x="24416" fg:w="3"/><text x="100.1477%" y="687.50"></text></g><g><title>`0x7FF96D66BC1A (3 samples, 0.01%)</title><rect x="99.8977%" y="661" width="0.0123%" height="15" fill="rgb(251,179,42)" fg:x="24416" fg:w="3"/><text x="100.1477%" y="671.50"></text></g><g><title>`0x7FF96D656D1A (10 samples, 0.04%)</title><rect x="99.8936%" y="837" width="0.0409%" height="15" fill="rgb(208,216,51)" fg:x="24415" fg:w="10"/><text x="100.1436%" y="847.50"></text></g><g><title>`0x7FF96D657BDC (10 samples, 0.04%)</title><rect x="99.8936%" y="821" width="0.0409%" height="15" fill="rgb(235,36,11)" fg:x="24415" fg:w="10"/><text x="100.1436%" y="831.50"></text></g><g><title>`0x7FF96D658830 (10 samples, 0.04%)</title><rect x="99.8936%" y="805" width="0.0409%" height="15" fill="rgb(213,189,28)" fg:x="24415" fg:w="10"/><text x="100.1436%" y="815.50"></text></g><g><title>`0x7FF96BFCE03F (3 samples, 0.01%)</title><rect x="99.9550%" y="773" width="0.0123%" height="15" fill="rgb(227,203,42)" fg:x="24430" fg:w="3"/><text x="100.2050%" y="783.50"></text></g><g><title>`0x7FF96BFCE5F7 (4 samples, 0.02%)</title><rect x="99.9714%" y="773" width="0.0164%" height="15" fill="rgb(244,72,36)" fg:x="24434" fg:w="4"/><text x="100.2214%" y="783.50"></text></g><g><title>`0x7FF96AC42D1B (4 samples, 0.02%)</title><rect x="99.9714%" y="757" width="0.0164%" height="15" fill="rgb(213,53,17)" fg:x="24434" fg:w="4"/><text x="100.2214%" y="767.50"></text></g><g><title>`0x7FF96AD16F94 (4 samples, 0.02%)</title><rect x="99.9714%" y="741" width="0.0164%" height="15" fill="rgb(207,167,3)" fg:x="24434" fg:w="4"/><text x="100.2214%" y="751.50"></text></g><g><title>`0x7FF96D77FFD4 (3 samples, 0.01%)</title><rect x="99.9755%" y="725" width="0.0123%" height="15" fill="rgb(216,98,30)" fg:x="24435" fg:w="3"/><text x="100.2255%" y="735.50"></text></g><g><title>`0x7FF96BFB4819 (3 samples, 0.01%)</title><rect x="99.9755%" y="709" width="0.0123%" height="15" fill="rgb(236,123,15)" fg:x="24435" fg:w="3"/><text x="100.2255%" y="719.50"></text></g><g><title>all (24,441 samples, 100%)</title><rect x="0.0000%" y="933" width="100.0000%" height="15" fill="rgb(248,81,50)" fg:x="0" fg:w="24441"/><text x="0.2500%" y="943.50"></text></g><g><title>`0x7FF96D70B66E (51 samples, 0.21%)</title><rect x="99.7913%" y="917" width="0.2087%" height="15" fill="rgb(214,120,4)" fg:x="24390" fg:w="51"/><text x="100.0413%" y="927.50"></text></g><g><title>`0x7FF96D73992B (51 samples, 0.21%)</title><rect x="99.7913%" y="901" width="0.2087%" height="15" fill="rgb(208,179,34)" fg:x="24390" fg:w="51"/><text x="100.0413%" y="911.50"></text></g><g><title>`0x7FF96D6C89C0 (51 samples, 0.21%)</title><rect x="99.7913%" y="885" width="0.2087%" height="15" fill="rgb(227,140,7)" fg:x="24390" fg:w="51"/><text x="100.0413%" y="895.50"></text></g><g><title>`0x7FF96D6CA7C9 (26 samples, 0.11%)</title><rect x="99.8936%" y="869" width="0.1064%" height="15" fill="rgb(214,22,6)" fg:x="24415" fg:w="26"/><text x="100.1436%" y="879.50"></text></g><g><title>`0x7FF96D656D46 (26 samples, 0.11%)</title><rect x="99.8936%" y="853" width="0.1064%" height="15" fill="rgb(207,137,27)" fg:x="24415" fg:w="26"/><text x="100.1436%" y="863.50"></text></g><g><title>`0x7FF96D656D46 (16 samples, 0.07%)</title><rect x="99.9345%" y="837" width="0.0655%" height="15" fill="rgb(210,8,46)" fg:x="24425" fg:w="16"/><text x="100.1845%" y="847.50"></text></g><g><title>`0x7FF96D656D1A (16 samples, 0.07%)</title><rect x="99.9345%" y="821" width="0.0655%" height="15" fill="rgb(240,16,54)" fg:x="24425" fg:w="16"/><text x="100.1845%" y="831.50"></text></g><g><title>`0x7FF96D657BDC (16 samples, 0.07%)</title><rect x="99.9345%" y="805" width="0.0655%" height="15" fill="rgb(211,209,29)" fg:x="24425" fg:w="16"/><text x="100.1845%" y="815.50"></text></g><g><title>`0x7FF96D658830 (16 samples, 0.07%)</title><rect x="99.9345%" y="789" width="0.0655%" height="15" fill="rgb(226,228,24)" fg:x="24425" fg:w="16"/><text x="100.1845%" y="799.50"></text></g></svg></svg>